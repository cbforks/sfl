//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.treasurebox.gear
// CFBundleShortVersionString : 2.0.5
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __ReceiptValidation_RECEIPT_LOG(...)
#endif
    
    // Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
#define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif
    
    // Function pointer for string decryption
    typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);
    
    // Keys for each receipt attribute
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        ReceiptValidation_StoreNone = 2388,
        // Bundle identifier
        ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Application version
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Opaque value
        ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
        // Hash value
        ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
        // In-app purchase receipt
        ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
        // Original Application Version
        ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 2),
        // Receipt Expiration Date
        ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 2),
        // Quantity
        ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 2),
        // Product identifier
        ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 2),
        // Transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 2),
        // Purchase date
        ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 2),
        // Original transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 2),
        // Original purchase date
        ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 2),
        // Subscription Expiration Date
        ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 2),
        // Web Order Line Item ID
        ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 2),
        // Cancellation Date
        ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 2)
        
    } ReceiptValidation_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _ReceiptValidation_CheckingContext {
        CFTypeRef dummy0006;
        CFTypeRef ca_data;
        CFTypeRef dummy0001;
        const char ** argv;
        CFTypeRef guid_data;
        CFTypeRef dummy0005;
        CFTypeRef dummy0003;
        long argc;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0000;
        CFTypeRef dummy0007;
        CFTypeRef dummy0004;
        CFTypeRef main_bundle;
        CFTypeRef dummy0008;
        CFTypeRef receipt_data;
        CFTypeRef dummy0002;
    } ReceiptValidation_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _ReceiptValidation_ParsingContext {
        CFTypeRef dummy0006;
        CFTypeRef dummy0003;
        CFTypeRef dummy0001;
        CFTypeRef dummy0004;
        CFTypeRef dummy000B;
        CFTypeRef dummy0007;
        struct _ReceiptValidation_ParsingContext * parent;
        CFTypeRef dummy0009;
        CFTypeRef dummy000C;
        CFTypeRef dummy0002;
        CFTypeRef dummy0000;
        CFTypeRef dummy0005;
        const unsigned char * end;
        CFTypeRef dictionary;
        CFTypeRef dummy0008;
        CFTypeRef dummy000A;
        const unsigned char * ptr;
    } ReceiptValidation_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleCopyBundleURL
    typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFStringGetFileSystemRepresentation
    typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol CFURLCreateCopyAppendingPathComponent
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
    // Symbol CFURLCreateFromFileSystemRepresentation
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
    // Symbol CFURLCreateWithFileSystemPathRelativeToBase
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__ReceiptValidation_exit)(int status);
    // Symbol freeifaddrs
    typedef void (*__ReceiptValidation_freeifaddrs)(struct ifaddrs *ifp);
    // Symbol getifaddrs
    typedef int (*__ReceiptValidation_getifaddrs)(struct ifaddrs **ifap);
    // Symbol glob
    typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
    // Symbol glob_b
    typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
    // Symbol globfree
    typedef void (*__ReceiptValidation_globfree)(glob_t *);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
    // Symbol kSecClass
    typedef const CFTypeRef *__ReceiptValidation_kSecClass;
    // Symbol kSecClassCertificate
    typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
    // Symbol kSecMatchLimit
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
    // Symbol kSecMatchLimitAll
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
    // Symbol kSecMatchSearchList
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
    // Symbol kSecMatchSubjectContains
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
    // Symbol kSecReturnRef
    typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
    // Symbol longjmp
    typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
    // Symbol NSApplicationMain
    typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol SecCertificateCopyData
    typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
    // Symbol SecItemCopyMatching
    typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
    // Symbol SecKeychainOpen
    typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
    // Symbol SecKeychainSearchCopyNext
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
    // Symbol SecKeychainSearchCreateFromAttributes
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
    // Symbol sel_registerName
    typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__ReceiptValidation_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
    // Symbol strcmp
    typedef int (*__ReceiptValidation_strcmp)(const char *s1, const char *s2);
    // Symbol strlen
    typedef size_t (*__ReceiptValidation_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__ReceiptValidation_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *ReceiptValidation_Strings[585] = {
        // "BIO_s_mem" / M(Xor2) / S(106) / L(9)
        "\x38\x33\x35\x25\x09\x25\x17\x1f\x17\x7a\xbd\xfa\x27\x35\x31\x73",
        // "" / M(None) / S(0) / L(0)
        "\xf3\x40\x04\xa0\x6e\xb7\x8c\x7a\xe8\x70\x97\xf3\x5c\x78\x20\x02\x9e\xcd\x27\x09\x1e\x89\x15\xe4\x44\x86\x9b\xa9\x46\xac\xc5\x98",
        // "objc_getClass" / M(Xor3) / S(142) / L(13)
        "\xf1\xfc\xf4\xfd\xc1\xf9\xfb\xea\xdd\xf2\xff\xed\xed\x9e\xef\x4d",
        // "CC_SHA1_Update" / M(Xor2) / S(201) / L(14)
        "\x9a\x9a\x86\x8a\x91\x98\xe8\x86\x8c\xa9\xbd\xb8\xad\xbc\xd9\x41",
        // "CFReadStreamOpen" / M(Xor1) / S(113) / L(16)
        "\x32\x37\x23\x14\x10\x15\x22\x05\x03\x14\x10\x1c\x3e\x01\x14\x1f\x71",
        // "CFNumberCreate" / M(Rot) / S(200) / L(14)
        "\x0b\x0e\x16\x3d\x35\x2a\x2d\x3a\x0b\x3a\x2d\x29\x3c\x2d\xc8\x5b",
        // "" / M(None) / S(0) / L(0)
        "\x19\x2d\xe9\x4e\xb0\xd9\x93\xb9\x41\x29\x16\x2c\x8c\xb3\x92\x17\x2b\x90\x33\xa2\xca\x62\xe5\xd4\xb8\x5c\x6e\xdf\xd2\x99\xda\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x96\xec\x82\x16\x1a\xbe\x0d\xa9\x00\x4c\xa6\xf6\x76\xdf\x0f\xab\xf9\x89\x63\xe5\x04\x9c\xf9\x5e\xf4\xdc\x80\x3a\x1b\xe4\x4d\xd0",
        // "EVP_DigestInit" / M(Xor3) / S(107) / L(14)
        "\x3e\x2d\x2b\x24\x3f\x12\x1c\x1e\x08\x0f\x32\x15\x12\x0f\x7b\xb0",
        // "sha1" / M(Xor4) / S(43) / L(4)
        "\xc3\xd8\xd1\x81\xb0\xfd\x11\x7c\x91\x3d\x0a\xa0\x2b\x15\x9b\x9d",
        // "" / M(None) / S(0) / L(0)
        "\x3c\xf5\x0f\xb5\x93\xe0\xd7\x49\x29\x70\x88\xc1\x13\xfb\x00\xe2\x7a\xdf\x18\x5d\x93\x59\x2c\x07\x73\x21\xee\xe1\xef\x61\xd3\xe8",
        // "strcmp" / M(Rot) / S(231) / L(6)
        "\x5a\x5b\x59\x4a\x54\x57\xe7\xa6\x0f\x83\x53\xf7\x97\x94\x5c\x2e",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(30) / L(23)
        "\x6d\x75\x6c\x5b\x5d\x5b\x57\x4e\x4a\x6c\x5b\x58\x4c\x5b\x4d\x56\x6c\x5b\x4f\x4b\x5b\x4d\x4a\x3e\x5f\x8a\x96\x61\x64\xd5\x74\xa9",
        // "PKCS7_verify" / M(Xor4) / S(118) / L(12)
        "\x30\x2b\x23\x33\x57\x3f\x16\x05\x12\x09\x06\x19\x60\xbf\x69\xff",
        // "CFReadStreamRead" / M(Rot) / S(43) / L(16)
        "\x6e\x71\x7d\x90\x8c\x8f\x7e\x9f\x9d\x90\x8c\x98\x7d\x90\x8c\x8f\x2b",
        // "exit" / M(Xor3) / S(123) / L(4)
        "\xee\xf3\xe2\xff\x8b\x03\x54\x8d\x4c\x1f\x78\x7e\x55\x45\x99\xad",
        // "" / M(None) / S(0) / L(0)
        "\xed\xdb\xdb\x34\xfc\x43\xc6\xba\xc7\x1a\x6b\xea\x64\xe0\x1e\x0e\x9f\x6a\xf8\x09\x27\xc7\x68\xb1\x2b\x2d\x4f\x9d\x0c\x81\xe2\x96",
        // "" / M(None) / S(0) / L(0)
        "\x47\x59\xc8\x98\xac\xaf\x51\x9b\x75\x7e\xf9\xbc\xac\x5d\x08\x97\xfd\xa3\x17\x49\xbc\xf0\xbc\xb1\xf9\xdd\x77\xa5\xcc\xa5\xb0\xc8",
        // "Contents/_MASReceipt" / M(Rot) / S(44) / L(20)
        "\x6f\x9b\x9a\xa0\x91\x9a\xa0\x9f\x5b\x8b\x79\x6d\x7f\x7e\x91\x8f\x91\x95\x9c\xa0\x2c",
        // "SecKeychainOpen" / M(Xor1) / S(115) / L(15)
        "\x20\x16\x10\x38\x16\x0a\x10\x1b\x12\x1a\x1d\x3c\x03\x16\x1d\x73",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x23\xe1\x12\xd6\x6f\x8c\x54\x4f\x1a\x8b\x35\x29\xa7\x3b\x8c\xbe\x7d\x51\xaa\x1c\x2c\x38\x92\x9f\x40\xcd\x50\x46\xd1\xdd\xc4",
        // "" / M(None) / S(0) / L(0)
        "\x57\x8c\xec\xd3\x8d\x91\x91\x26\xce\xc2\x42\x4b\xd1\x36\x52\x26\x41\x26\x88\xff\xce\x65\x68\xbc\xcc\x60\x9b\xe8\xf7\x40\x45\x58",
        // "setjmp" / M(Xor3) / S(1) / L(6)
        "\x62\x74\x65\x7b\x7c\x61\x11\xe7\xed\xf0\x99\xf8\x3b\xd9\x74\xc1",
        // "" / M(None) / S(0) / L(0)
        "\x17\x3e\x25\xb6\xc0\x46\x67\x35\x6b\x0d\x8b\x4c\xd1\x78\x72\xe5\xde\xc7\xc1\xe7\x1e\x2d\x6c\x4b\x78\xca\xcf\x71\xcf\x2c\xdf\x19",
        // "" / M(None) / S(0) / L(0)
        "\x4c\xda\x72\x41\x00\xeb\xa5\x26\x4e\x87\xd2\xc7\x4a\x55\xd4\xf5\x06\x44\x35\x53\x70\xa7\x03\x85\x43\xbd\x70\x52\x3b\xc6\x1a\x36",
        // "d2i_X509_bio" / M(Xor1) / S(251) / L(12)
        "\x9f\xc9\x92\xa4\xa3\xce\xcb\xc2\xa4\x99\x92\x94\xfb\x42\x72\x9a",
        // "glob" / M(Xor2) / S(243) / L(4)
        "\x84\x8f\x8c\x81\xe3\xf6\xaa\xff\x7c\x70\x7b\x3a\x1d\x34\x58\x50",
        // "ASN1_INTEGER_get" / M(Xor3) / S(143) / L(16)
        "\xe1\xf3\xee\x91\xff\xe9\xee\xf4\xe5\xe7\xe5\xf2\xff\xc7\xc5\xd4\xa0",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x31\x52\x72\xbd\xe4\x99\xf1\xcf\xf3\x25\xba\xea\xd1\x94\xce\xd8\x9f\xfe\x7a\xf3\x2b\xbb\xd5\xf7\x48\x55\x15\x2f\x9e\x9c\xfb",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(63) / L(43)
        "\x82\x85\x94\x91\x8b\x82\xb1\xa4\xa0\xb3\xa4\x96\xa8\xb3\xa7\x85\xa8\xab\xa4\x92\xb8\xb2\xb3\xa4\xac\x8f\xa0\xb3\xa7\x91\xa4\xab\xa0\xb3\xa8\xb5\xa4\x93\xae\x81\xa0\xb2\xa4\x3f\x20\x7c\xf4\x5a\x9c\x9f\xc1\xdb",
        // "OBJ_txt2obj" / M(Xor2) / S(171) / L(11)
        "\xf4\xf9\xf1\xe4\xcf\xc3\xcf\x89\xd4\xd9\xd1\xbb\x4f\xf6\x71\x05",
        // "kSecMatchLimitAll" / M(Xor4) / S(165) / L(17)
        "\xf1\xc9\xff\xf9\xd7\xfb\xee\xf9\xf2\xd6\xf3\xf7\xf3\xee\xdb\xf6\xf6\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x78\xae\xc4\xbf\x7a\x73\xec\x1c\x6c\x21\xf7\xb1\xf5\x29\xdf\xd5\x30\x34\x3f\x3c\x91\xd5\xd0\x80\x12\x1b\x9d\x18\xfd\x6e\xca\x14",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(199) / L(32)
        "\x9f\x9f\x9f\x9f\xc1\xcb\xc1\xab\xab\xc1\xcb\xc1\x82\x82\xc1\xb2\xc1\xae\xae\xc1\xdc\xc1\x8b\x8b\xc1\xdc\xc1\x95\x95\xc1\xbc\xc1\xe6",
        // "PKCS7_free" / M(Rot) / S(232) / L(10)
        "\x38\x33\x2b\x3b\x1f\x47\x4e\x5a\x4d\x4d\xe8\x61\xab\x86\x8d\x43",
        // "CFBundleGetMainBundle" / M(Xor4) / S(100) / L(21)
        "\xdb\xde\xda\xed\xf6\xfc\xf4\xfd\xdf\xfd\xec\xd5\xf9\xf1\xf6\xda\xed\xf6\xfc\xf4\xfd\x98",
        // "SecKeychainSearchCopyNext" / M(Xor2) / S(152) / L(25)
        "\xe9\xdf\xd9\xf1\xdf\xc3\xd9\xd2\xdb\xd3\xd4\xe9\xdf\xdb\xc8\xd9\xd2\xf9\xd5\xca\xc3\xf4\xdf\xc2\xce\xba\x8d\x8d\x89\x26\x89\x69\x3f\x4d",
        // "%02x" / M(Xor2) / S(134) / L(4)
        "\xb3\xa6\xa4\xee\x96\xf5\xbf\x25\x5f\xf4\x2a\x2a\xdb\x35\xf8\x1b",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(136) / L(16)
        "\x6b\x3a\x61\x57\x49\x5b\x46\x39\x57\x41\x46\x5c\x4d\x4f\x4d\x5a\x08",
        // "X509_NAME_get_text_by_NID" / M(Rot) / S(156) / L(25)
        "\xf4\xd1\xcc\xd5\xfb\xea\xdd\xe9\xe1\xfb\x03\x01\x10\xfb\x10\x01\x14\x10\xfb\xfe\x15\xfb\xea\xe5\xe0\x9c\x37\xae\xcb\xdb\xc3\x04\x49\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x00\x89\x69\xec\xf5\xf8\x26\x06\x9a\xfe\x25\x22\x51\x2a\x2c\x0b\xd3\x18\xa4\x4c\xb1\x5c\xea\xe8\x06\xd1\x4f\x18\xa1\xb8\xe1\x11",
        // "Contents/_MASReceipt/receipt" / M(Xor1) / S(99) / L(28)
        "\x20\x0c\x0d\x17\x06\x0d\x17\x10\x4c\x3c\x2e\x22\x30\x31\x06\x00\x06\x0a\x13\x17\x4c\x11\x06\x00\x06\x0a\x13\x17\x63\xd6\xa7\x6f\x40\x19\xa9\xda\xed",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(16) / L(57)
        "\x0f\x73\x59\x53\x54\x45\x4d\x0f\x6c\x49\x42\x52\x41\x52\x59\x0f\x6b\x45\x59\x43\x48\x41\x49\x4e\x53\x0f\x73\x59\x53\x54\x45\x4d\x72\x4f\x4f\x54\x63\x45\x52\x54\x49\x46\x49\x43\x41\x54\x45\x53\x0e\x4b\x45\x59\x43\x48\x41\x49\x4e\x20\x3e\xad\x31\x06\x4d\xaa\x97\xeb",
        // "" / M(None) / S(0) / L(0)
        "\xb0\x5c\xb5\x47\xf6\x71\xd4\x08\x50\xb5\x93\xb2\x9d\xd7\xcf\xbd\x73\x55\xd7\xbe\xb4\x0c\x29\xfc\x8d\xdc\x23\xae\x21\xf3\x45\xef",
        // "CFDateCreate" / M(Xor2) / S(43) / L(12)
        "\x78\x7d\x7f\x5a\x4f\x5e\x78\x49\x5e\x5a\x4f\x5e\x3b\x20\x2d\x1d",
        // "" / M(None) / S(0) / L(0)
        "\xa2\x0a\x5e\x38\x92\xbe\xaa\xbe\xb6\x87\x34\x2c\xc8\xe1\xbc\x4c\x64\x4d\x43\x9c\xdd\x45\x70\x62\xfe\x42\xff\x7a\xde\x02\xf8\xb1",
        // "SHA1_Init" / M(Xor2) / S(170) / L(9)
        "\xe9\xf2\xfb\x8b\xe5\xf3\xd4\xd3\xce\xba\x4d\x28\x82\xf9\x7f\xa0",
        // "." / M(Xor4) / S(158) / L(1)
        "\xce\xe0\xce\xb6\xb6\x52\x18\x5b\xd0\x49\xee\xb4\x3d\xd8\xc4\x1e",
        // "" / M(None) / S(0) / L(0)
        "\x76\x31\x42\xcf\xe5\x82\x5e\xbd\xa6\x60\x75\xd0\xcc\x1d\x8f\x9b\xfe\xd3\xfb\x59\x4f\x98\x76\x9b\x03\x7e\x9d\x9e\x7f\x39\xea\x93",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x4e\xd1\x3d\xb8\xbe\x46\xbc\xd5\xd2\x51\x4a\x00\x13\x58\x4e\x9d\x5f\xec\x1e\x79\xb3\x48\x80\x8d\x56\xd9\xc9\xa7\xa7\xf7\xbd",
        // "_MASReceipt/receipt" / M(Xor4) / S(32) / L(19)
        "\xdf\xcd\xc1\xd3\xd2\xe5\xe3\xe5\xe9\xf0\xf4\xaf\xf2\xe5\xe3\xe5\xe9\xf0\xf4\x80",
        // "" / M(None) / S(0) / L(0)
        "\x23\xa4\x3d\x9d\x78\xf7\xa7\x93\xb6\xfd\x90\xa1\xf9\xd1\x54\x5f\x43\xd0\x78\xcd\x54\xdc\xbf\x50\x92\x16\x62\x8a\x49\x2a\xe5\x6d",
        // "" / M(None) / S(0) / L(0)
        "\x8f\x3c\xbf\x6e\xf1\x86\xf5\xc7\x6f\xb4\x7b\xa8\x94\xcf\x7b\x4d\x97\x25\x3a\xd3\x6e\x66\x87\xf8\x70\xca\x3b\x22\xa1\xeb\xf5\xdf",
        // "" / M(None) / S(0) / L(0)
        "\x0b\x22\xd6\xdc\x1b\x6e\x28\x66\x8e\x39\x79\xe8\x90\x80\xaa\xc4\x48\x54\x3d\x14\x9f\xf4\xfa\xd7\xd8\xb2\x64\xe7\x2f\xde\xde\x21",
        // "dlopen" / M(Xor2) / S(51) / L(6)
        "\x47\x4f\x4c\x53\x46\x4d\x23\xa8\x52\x6b\x2c\x4e\x9b\xce\x23\x93",
        // "kCFTypeArrayCallBacks" / M(Rot) / S(144) / L(21)
        "\xfb\xd3\xd6\xe4\x09\x00\xf5\xd1\x02\x02\xf1\x09\xd3\xf1\xfc\xfc\xd2\xf1\xf3\xfb\x03\x90",
        // "start" / M(Rot) / S(252) / L(5)
        "\x6f\x70\x5d\x6e\x70\xfc\x5b\xc7\xf7\xe4\xbe\x9b\xeb\xfc\x2a\x66",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(188) / L(24)
        "\xf2\xa8\xae\xaf\xf2\xb1\xb4\xbf\xf2\xb1\xb4\xbf\x8e\xa4\xae\xa9\xb8\xb0\xf3\xb9\xa4\xb1\xb4\xbf\xdd\xb5\xf1\xf1\x0d\x80\xe9\x40\x11",
        // "CFReadStreamRead" / M(Xor2) / S(133) / L(16)
        "\xd7\xd2\xc6\xf1\xf5\xf0\xc7\xe0\xe6\xf1\xf5\xf9\xc6\xf1\xf5\xf0\x94",
        // "CFRelease" / M(Rot) / S(64) / L(9)
        "\x83\x86\x92\xa5\xac\xa5\xa1\xb3\xa5\x40\x67\xd3\xae\xe7\x89\x3a",
        // "CFBundleIdentifier" / M(Xor3) / S(164) / L(18)
        "\xf4\xf1\xf5\xc2\xd9\xd3\xdb\xd2\xfe\xd3\xd2\xd9\xc3\xde\xd1\xde\xd2\xc5\xb7",
        // "sk_free" / M(Rot) / S(246) / L(7)
        "\x69\x61\x55\x5c\x68\x5b\x5b\xf6\xe1\x05\xdb\xe9\x36\xb4\xa5\xe5",
        // "com.treasurebox.gear" / M(Xor2) / S(107) / L(20)
        "\x1d\x11\x13\x50\x0a\x0c\x1b\x1f\x0d\x0b\x0c\x1b\x1c\x11\x06\x50\x19\x1b\x1f\x0c\x7e",
        // "receipt" / M(Rot) / S(65) / L(7)
        "\xb3\xa6\xa4\xa6\xaa\xb1\xb5\x41\x5b\x49\x66\xfd\x7e\xf2\x1c\x06",
        // "CFBundleUnloadExecutable" / M(Xor4) / S(72) / L(24)
        "\x0b\x0e\x0a\x3d\x26\x2c\x24\x2d\x1d\x26\x24\x27\x29\x2c\x0d\x30\x2d\x2b\x3d\x3c\x29\x2a\x24\x2d\x48\xd0\xe6\xe6\x67\x16\x4e\x31\x2f",
        // "" / M(None) / S(0) / L(0)
        "\xdd\x73\x1b\xa2\x5d\x46\x63\x80\x21\x7b\xd3\xf8\x87\xd5\xd9\x6d\x83\xa0\x04\x1e\xcc\x50\xd9\x62\x3f\xcb\xaa\x69\x55\x70\xca\x9c",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(16) / L(36)
        "\x76\x73\x77\x40\x5b\x51\x59\x50\x72\x50\x41\x63\x54\x59\x40\x50\x73\x5a\x47\x7c\x5b\x53\x5a\x71\x5c\x56\x41\x5c\x5a\x5b\x54\x47\x4c\x7e\x50\x4c\x35",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(126) / L(24)
        "\x51\x0b\x0d\x0c\x51\x12\x17\x1c\x51\x12\x17\x1c\x2d\x07\x0d\x0a\x1b\x13\x50\x1a\x07\x12\x17\x1c\x7e\x12\x8b\xfb\x49\x14\x46\xdd\x55",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(100) / L(24)
        "\x27\x22\x20\x05\x10\x01\x22\x0b\x16\x09\x05\x10\x10\x01\x16\x37\x01\x10\x22\x0b\x16\x09\x05\x10\x64\x3d\x98\xb7\xb3\x76\x7e\xfe\x3f",
        // "globfree" / M(Xor3) / S(227) / L(8)
        "\x94\x9f\x9c\x91\x95\x81\x96\x96\xf3\x5a\x79\xa3\xa6\x6e\xda\x6e",
        // "_MASReceipt" / M(Xor4) / S(210) / L(11)
        "\x7f\x6d\x61\x73\x72\x45\x43\x45\x49\x50\x54\x20\xa4\x23\x1f\x1a",
        // "" / M(None) / S(0) / L(0)
        "\xba\x14\x46\xe0\x33\x8c\x44\xe5\x01\x15\x6f\xe8\xb9\x73\x07\x7a\x9d\x45\xc3\x4f\x48\x79\x5b\x84\xe2\x26\x3c\xe5\xd5\x6d\xeb\xaf",
        // "CFDateFormatterCreate" / M(Xor3) / S(26) / L(21)
        "\x73\x76\x74\x51\x44\x55\x76\x5f\x42\x5d\x51\x44\x44\x55\x42\x73\x42\x55\x51\x44\x55\x30",
        // "EVP_DigestUpdate" / M(Xor3) / S(149) / L(16)
        "\xe3\xf0\xf6\xf9\xe2\xcf\xc1\xc3\xd5\xd2\xf3\xd6\xc2\xc7\xd2\xc3\xa6",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(103) / L(19)
        "\x3f\x52\x57\x5e\x38\x00\x02\x13\x38\x02\x1f\x13\x38\x05\x1e\x38\x28\x25\x2d\x67",
        // "init" / M(Rot) / S(168) / L(4)
        "\x11\x16\x11\x1c\xa8\xfe\x8e\xdd\xe1\x57\x4a\xa5\xbd\x5a\x41\x4d",
        // "EVP_DigestFinal" / M(Xor3) / S(98) / L(15)
        "\x37\x24\x22\x2d\x36\x1b\x15\x17\x01\x06\x34\x1b\x1c\x13\x1e\x72",
        // "ASN1_OBJECT_free" / M(Xor3) / S(71) / L(16)
        "\x19\x0b\x16\x69\x07\x17\x1a\x12\x1d\x1b\x0c\x07\x3e\x2a\x3d\x3d\x58",
        // "SHA1_Final" / M(Xor3) / S(176) / L(10)
        "\x93\x88\x81\xf1\x9f\x86\xa9\xae\xa1\xac\xc0\x0e\xe9\x8a\x3c\xc4",
        // "SHA1_Final" / M(Rot) / S(45) / L(10)
        "\x80\x75\x6e\x5e\x8c\x73\x96\x9b\x8e\x99\x2d\x4b\x1c\x8c\xfb\x22",
        // "%02X:" / M(Xor4) / S(1) / L(5)
        "\x35\x20\x22\x48\x2a\x10\x6a\x6b\x7f\x89\x3f\x94\x7b\x3e\x15\x29",
        // "" / M(None) / S(0) / L(0)
        "\x0d\x39\x55\x32\xe5\x67\x58\x38\x99\x71\x0a\xbb\x13\xb4\x59\xf0\xcc\xe5\x5f\x62\x2a\x6c\x22\xbe\x00\x17\xae\x6c\x0c\x99\xa9\xfe",
        // "" / M(None) / S(0) / L(0)
        "\x93\xe9\x8e\x69\xd3\x05\x39\x0c\xed\xf1\x6d\x5e\x02\x09\xd8\xb3\x37\x29\x01\xb8\x2e\xd3\xb5\x4d\x03\x70\xe4\x68\x8f\xea\x9f\x5d",
        // "Apple Root CA" / M(Rot) / S(137) / L(13)
        "\xca\xf9\xf9\xf5\xee\xa9\xdb\xf8\xf8\xfd\xa9\xcc\xca\x89\xf4\xf5",
        // "." / M(Xor1) / S(134) / L(1)
        "\xa8\x86\xc6\xb9\xf5\x03\x5d\x6c\x38\x84\x1d\x38\xc7\x47\x89\x87",
        // "X509_free" / M(Xor2) / S(137) / L(9)
        "\xc1\xac\xa9\xa0\xc6\xff\xeb\xfc\xfc\x99\x02\x05\x48\x3e\x9e\x44",
        // "SHA1_Update" / M(Xor1) / S(202) / L(11)
        "\x99\x82\x8b\xfb\x95\x9f\xba\xae\xab\xbe\xaf\xca\x36\x13\x73\x81",
        // "CFDataCreateMutable" / M(Xor1) / S(203) / L(19)
        "\x88\x8d\x8f\xaa\xbf\xaa\x88\xb9\xae\xaa\xbf\xae\x86\xbe\xbf\xaa\xa9\xa7\xae\xcb",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(107) / L(40)
        "\x4d\x4a\x4a\x3e\x4e\x39\x4d\x4d\x49\x38\x4e\x42\x48\x3a\x4b\x43\x3d\x3d\x4e\x43\x3f\x4a\x4f\x3a\x3e\x49\x49\x4f\x4e\x49\x3f\x4a\x42\x43\x3f\x3d\x4d\x38\x4d\x4b\x7b\xb3\x9d\xc9\x19\x1a\x48\x2b\x39",
        // "getifaddrs" / M(Xor2) / S(137) / L(10)
        "\xfe\xfc\xed\xf0\xff\xf8\xfd\xfd\xeb\xea\x99\xee\xcd\xc2\x78\x92",
        // "CFBundleGetIdentifier" / M(Xor3) / S(11) / L(21)
        "\x62\x67\x63\x54\x4f\x45\x4d\x44\x66\x44\x55\x68\x45\x44\x4f\x55\x48\x47\x48\x44\x53\x21",
        // "getifaddrs" / M(Xor4) / S(108) / L(10)
        "\xa7\xa5\xb4\xa9\xa6\xa1\xa4\xa4\xb2\xb3\xc0\xf8\xb8\x13\x2d\x83",
        // "" / M(None) / S(0) / L(0)
        "\x3c\x66\x3c\xe5\xb9\x14\x7d\x5d\x96\xb8\x0f\x9a\xa1\x27\x11\x4e\x1e\x58\x9b\x6f\x11\x80\x76\xc2\x2a\x2e\x3a\x94\xfa\x5c\x9b\x0e",
        // "" / M(None) / S(0) / L(0)
        "\x44\x2f\xbd\x4f\x94\x6e\xe5\xf7\x5b\xcf\x36\x9c\xd1\xee\x8c\x23\x7a\x84\x41\x20\xbb\x82\xaa\x1a\x99\xdc\xf9\x98\xb1\xa8\x78\x79",
        // "d2i_X509_bio" / M(Xor2) / S(103) / L(12)
        "\x13\x45\x1e\x28\x2f\x42\x47\x4e\x28\x15\x1e\x18\x77\xf5\x06\xc3",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(187) / L(66)
        "\xea\x0e\x34\x2e\x2f\x20\x28\xea\x07\x24\x1d\x2d\x1c\x2d\x34\xea\x01\x2d\x1c\x28\x20\x32\x2a\x2d\x26\x2e\xea\xfe\x2a\x2d\x20\x01\x2a\x30\x29\x1f\x1c\x2f\x24\x2a\x29\xe9\x21\x2d\x1c\x28\x20\x32\x2a\x2d\x26\xea\xfe\x2a\x2d\x20\x01\x2a\x30\x29\x1f\x1c\x2f\x24\x2a\x29\xbb",
        // "" / M(None) / S(0) / L(0)
        "\x5a\x25\x6c\x6d\xb2\x4e\x85\x9d\x2c\xb3\x05\x81\x33\xc4\xda\x17\xf0\x44\xe8\x02\xb4\x68\xd1\x8b\x31\xeb\xcb\xdf\x6d\x76\x5d\xf9",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(32) / L(22)
        "\x5c\x74\x71\x75\x42\x59\x53\x5b\x52\x7e\x53\x52\x59\x43\x5e\x51\x5e\x52\x45\x7c\x52\x4e\x37",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(142) / L(39)
        "\xcd\xc8\xdb\xdc\xc2\xcd\xfc\xeb\xef\xfa\xeb\xc8\xfc\xe1\xe3\xc8\xe7\xe2\xeb\xdd\xf7\xfd\xfa\xeb\xe3\xdc\xeb\xfe\xfc\xeb\xfd\xeb\xe0\xfa\xef\xfa\xe7\xe1\xe0\x8e\xcf\xde\x93\x32\x28\x29\x74\xf1",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(209) / L(32)
        "\x88\x88\x88\x88\xd6\xdc\xd6\xbc\xbc\xd6\xdc\xd6\x95\x95\xd6\xa5\xd6\xb9\xb9\xd6\xcb\xd6\x9c\x9c\xd6\xcb\xd6\x82\x82\xd6\xab\xd6\xf1",
        // "CFAbsoluteTimeGetCurrent" / M(Rot) / S(245) / L(24)
        "\x38\x3b\x36\x57\x68\x64\x61\x6a\x69\x5a\x49\x5e\x62\x5a\x3c\x5a\x69\x38\x6a\x67\x67\x5a\x63\x69\xf5\x96\x8c\xbe\xaf\x29\x52\x09\x31",
        // "SecKeychainSearchCopyNext" / M(Xor2) / S(89) / L(25)
        "\x28\x1e\x18\x30\x1e\x02\x18\x13\x1a\x12\x15\x28\x1e\x1a\x09\x18\x13\x38\x14\x0b\x02\x35\x1e\x03\x0f\x7b\xef\xcf\x09\x4b\x46\x69\x5d\x74",
        // "strncmp" / M(Xor2) / S(219) / L(7)
        "\xb8\xbf\xb9\xa5\xa8\xa6\xbb\xcb\x26\x71\x3a\x2e\xa1\x68\x72\x79",
        // "setjmp" / M(Xor2) / S(232) / L(6)
        "\x8b\x9d\x8c\x92\x95\x88\xf8\x06\x32\x63\xec\x31\xbf\xfa\x17\x04",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor2) / S(197) / L(39)
        "\xb6\xb3\xa1\x9c\x98\x90\xaf\x9a\x9b\x90\xb6\x87\x90\x94\x81\x90\xa2\x9c\x81\x9d\xa1\x9c\x98\x90\xbc\x9b\x81\x90\x87\x83\x94\x99\xb3\x87\x9a\x98\xb2\xb8\xa1\xf5\x21\x09\x7f\x0a\xd0\xfa\x1b\x4c",
        // "start" / M(Xor4) / S(46) / L(5)
        "\x93\x94\x81\x92\x94\xe0\xc6\x5a\x7a\xd3\x40\xb0\x50\x8c\xaa\xe3",
        // "CFNumberCreate" / M(Rot) / S(126) / L(14)
        "\xc1\xc4\xcc\xf3\xeb\xe0\xe3\xf0\xc1\xf0\xe3\xdf\xf2\xe3\x7e\xcb",
        // "CFStringCreateWithCString" / M(Rot) / S(250) / L(25)
        "\x3d\x40\x4d\x6e\x6c\x63\x68\x61\x3d\x6c\x5f\x5b\x6e\x5f\x51\x63\x6e\x62\x3d\x4d\x6e\x6c\x63\x68\x61\xfa\xc7\xb4\xbd\x3c\x3e\x3e\x1a\x5a",
        // "ASN1_OBJECT_free" / M(Xor2) / S(176) / L(16)
        "\xe0\xf2\xef\x90\xfe\xee\xe3\xeb\xe4\xe2\xf5\xfe\xc7\xd3\xc4\xc4\xa1",
        // "longjmp" / M(Rot) / S(235) / L(7)
        "\x57\x5a\x59\x52\x55\x58\x5b\xeb\xee\x61\x6b\x20\xd5\x0c\xeb\xb4",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x92\xa8\xb2\xa4\x80\xa2\x57\xd0\xe1\x89\x20\x18\xaf\x48\x6f\x0a\x21\xac\x80\xc9\x4b\xbb\x9a\x11\x46\xd5\x89\x76\x4d\xa3\x7f",
        // "" / M(None) / S(0) / L(0)
        "\xbc\xd3\xb1\xa8\xde\xf8\x6b\x3a\xb2\x10\x0a\x1f\xa6\xae\xb9\xa4\x13\xc1\x51\x9d\x97\xa8\x6f\x05\x08\xf4\xf3\xbc\x73\x5f\xb7\x49",
        // "d2i_PKCS7_bio" / M(Xor1) / S(255) / L(13)
        "\x9b\xcd\x96\xa0\xaf\xb4\xbc\xac\xc8\xa0\x9d\x96\x90\xff\xfd\x87",
        // "strlen" / M(Xor1) / S(183) / L(6)
        "\xc4\xc3\xc5\xdb\xd2\xd9\xb7\x7f\xb6\x57\x25\x9b\xd8\xe6\x62\x0b",
        // "init" / M(Xor2) / S(134) / L(4)
        "\xff\xf8\xff\xe2\x96\xb8\x62\xbe\x06\xb9\xb2\xfe\x86\xaf\x5a\x12",
        // "objc_getClass" / M(Xor4) / S(125) / L(13)
        "\xbf\xb2\xba\xb3\x8f\xb7\xb5\xa4\x93\xbc\xb1\xa3\xa3\xd0\xc4\xdd",
        // "" / M(None) / S(0) / L(0)
        "\x9c\x97\xa9\x94\x5c\xa2\xbc\x01\x9c\x86\xc6\x26\x50\xe4\x75\x2a\x0b\xe5\x4e\x51\x8e\x72\x35\xd0\x0d\x1d\x5a\x3b\xda\xf9\x5c\x28",
        // "" / M(None) / S(0) / L(0)
        "\x10\xc0\x8d\xff\x81\xc2\xd7\x2f\xb6\xe5\xdc\xb1\x21\x1f\x15\x5e\xfa\xff\xde\x73\x4a\x85\x31\x1e\x4f\xfc\x16\xf7\x55\x2f\xd8\x80",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(76) / L(22)
        "\x97\x92\x95\xa6\xa6\xb5\xad\x93\xb1\xa0\x82\xb5\xb8\xa1\xb1\x95\xa0\x9d\xba\xb0\xb1\xac\xd4",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(182) / L(40)
        "\xd1\xd6\xd6\x82\xd2\x85\xd1\xd1\xd5\x84\xd2\xde\xd4\x86\xd7\xdf\x81\x81\xd2\xdf\x83\xd6\xd3\x86\x82\xd5\xd5\xd3\xd2\xd5\x83\xd6\xde\xdf\x83\x81\xd1\x84\xd1\xd7\xe7\x0b\x66\x3e\xf2\x0a\xef\x3d\x1a",
        // "longjmp" / M(Rot) / S(127) / L(7)
        "\xeb\xee\xed\xe6\xe9\xec\xef\x7f\x79\xd4\xdb\x3c\x17\xf3\xcb\xd5",
        // "CFStringGetFileSystemRepresentation" / M(Xor3) / S(236) / L(35)
        "\x53\x56\x43\x64\x62\x79\x7e\x77\x57\x75\x64\x56\x79\x7c\x75\x43\x69\x63\x64\x75\x7d\x42\x75\x60\x62\x75\x63\x75\x7e\x64\x71\x64\x79\x7f\x7e\x10",
        // "longjmp" / M(Xor4) / S(0) / L(7)
        "\x6c\x6f\x6e\x67\x6a\x6d\x70\x00\x8e\xd7\x90\x98\x93\xb6\x74\x3b",
        // "" / M(None) / S(0) / L(0)
        "\x88\x2b\x1a\x9e\xb6\x49\x94\x28\x85\xe7\xe7\x41\x26\xe5\xbd\xf7\x7a\x23\xcb\x17\x1b\x6a\x0a\xfe\x79\xef\x1b\xf8\x79\x0f\x6b\xa0",
        // "CFBundleGetIdentifier" / M(Xor2) / S(245) / L(21)
        "\xa0\xa5\xa1\x96\x8d\x87\x8f\x86\xa4\x86\x97\xaa\x87\x86\x8d\x97\x8a\x85\x8a\x86\x91\xe3",
        // "sha1" / M(Xor3) / S(37) / L(4)
        "\x46\x5d\x54\x04\x35\x1d\xa1\x1c\xb3\x21\x50\x9c\xe4\x6a\x28\x79",
        // "CC_SHA1" / M(Xor4) / S(167) / L(7)
        "\x33\x33\x2f\x23\x38\x31\x41\x70\x01\x76\xd6\x4c\x19\x01\xe4\x94",
        // "ASN1_INTEGER_get" / M(Xor4) / S(173) / L(16)
        "\x3c\x2e\x33\x4c\x22\x34\x33\x29\x38\x3a\x38\x2f\x22\x1a\x18\x09\x7d",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(1) / L(59)
        "\x73\x74\x7f\x74\x00\x7f\x70\x07\x7f\x73\x73\x7f\x77\x06\x7f\x70\x7c\x7f\x76\x04\x7f\x75\x7d\x7f\x03\x03\x7f\x70\x7d\x7f\x01\x74\x7f\x71\x04\x7f\x00\x77\x7f\x77\x71\x7f\x70\x77\x7f\x01\x74\x7f\x7c\x7d\x7f\x01\x03\x7f\x73\x06\x7f\x73\x75\x45\x59\x11\x33\x9a\xb8\xae\x82\xb6",
        // "EVP_DigestInit" / M(Rot) / S(44) / L(14)
        "\x71\x82\x7c\x8b\x70\x95\x93\x91\x9f\xa0\x75\x9a\x95\xa0\x2c\x99",
        // "sk_free" / M(Xor3) / S(45) / L(7)
        "\x4e\x56\x62\x5b\x4f\x58\x58\x3d\xf8\xd0\x20\x61\xd3\x09\x5b\x99",
        // "%02x:" / M(Rot) / S(27) / L(5)
        "\x40\x4b\x4d\x93\x55\x1b\xee\x8e\x41\x75\x2b\xca\x44\x7d\xd7\xf5",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(183) / L(24)
        "\xfc\xd4\xd1\xd3\xf6\xe3\xf2\xd1\xf8\xe5\xfa\xf6\xe3\xe3\xf2\xe5\xc3\xfe\xfa\xf2\xcd\xf8\xf9\xf2\x97\xd2\x64\x89\xb2\xf7\x5a\x4c\xc3",
        // "" / M(None) / S(0) / L(0)
        "\xd0\xd9\x55\x3b\x50\xbd\x75\xf3\x56\x37\x55\x65\x37\x97\x14\xea\x05\x77\x84\x37\xab\x6e\xa3\xc8\xf8\x07\x48\x08\x4a\xc1\xd9\x07",
        // "" / M(None) / S(0) / L(0)
        "\x60\x96\xa4\x6b\xb8\x41\x92\x67\xcc\x69\x1c\x55\x30\x3c\xea\xee\xd2\xd7\x06\x24\x34\x16\xbe\x09\xc2\xde\x67\x78\x52\xf4\xcf\x4c",
        // "SHA1_Init" / M(Xor1) / S(33) / L(9)
        "\x72\x69\x60\x10\x7e\x68\x4f\x48\x55\x21\x95\x54\xe6\xe6\x6e\xf0",
        // "" / M(None) / S(0) / L(0)
        "\x13\x82\x18\x3e\xca\xda\xd5\x03\x68\xfe\x02\x40\x1f\xad\x21\xc8\x41\x83\xd9\xcf\x8f\x9a\x9e\x72\xa8\xdc\x1d\xf7\x31\xaf\x03\x68",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xdd\x9d\xaa\xfc\x2b\xbf\xf0\xd8\x59\x30\xa4\x5b\xdb\x23\x2b\xe1\x86\xf6\x12\xaf\x1a\x1e\xc8\xdd\x29\x55\x45\x08\xbf\x2d\x02",
        // "PKCS7_verify" / M(Xor1) / S(48) / L(12)
        "\x60\x7b\x73\x63\x07\x6f\x46\x55\x42\x59\x56\x49\x30\x8b\x3f\x86",
        // "%02x" / M(Xor4) / S(186) / L(4)
        "\x85\x90\x92\xd8\xa0\x42\xee\x2e\x93\x41\x2d\x76\x01\x57\x23\x02",
        // "CC_SHA1_Init" / M(Xor1) / S(250) / L(12)
        "\xb9\xb9\xa5\xa9\xb2\xbb\xcb\xa5\xb3\x94\x93\x8e\xfa\x19\xc5\x41",
        // "" / M(None) / S(0) / L(0)
        "\x85\xbe\x0a\x65\xba\x3e\x37\xe5\x43\xcf\x7d\x76\x8c\xe7\x9c\x28\xee\x3b\x46\x1c\x67\x15\xc5\x8e\x4e\x11\x19\xa8\x05\xa0\x1d\xd8",
        // "" / M(None) / S(0) / L(0)
        "\x65\xec\xf0\x3c\xc9\x2d\x35\xe3\xf0\xec\x97\x32\x5a\xd8\x9a\xbf\xc8\xdf\x68\x39\xab\x5e\xa5\xef\xde\x16\x69\x16\xa7\xda\x17\xb8",
        // "X509_STORE_new" / M(Xor1) / S(0) / L(14)
        "\x58\x35\x30\x39\x5f\x53\x54\x4f\x52\x45\x5f\x6e\x65\x77\x00\xb4",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(12) / L(23)
        "\x7f\x67\x7e\x49\x4f\x49\x45\x5c\x58\x7e\x49\x4a\x5e\x49\x5f\x44\x7e\x49\x5d\x59\x49\x5f\x58\x2c\xe3\xce\x6e\x78\x8e\x94\x69\xe0",
        // "CFReadStreamClose" / M(Xor2) / S(81) / L(17)
        "\x00\x05\x11\x26\x22\x27\x10\x37\x31\x26\x22\x2e\x00\x2f\x2c\x30\x26\x43",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(129) / L(24)
        "\xc2\xc7\xc5\xe0\xf5\xe4\xc7\xee\xf3\xec\xe0\xf5\xf5\xe4\xf3\xd2\xe4\xf5\xc7\xee\xf3\xec\xe0\xf5\x81\x20\x64\xaa\x19\x61\x9b\xf5\x0d",
        // "freeifaddrs" / M(Rot) / S(184) / L(11)
        "\x1e\x2a\x1d\x1d\x21\x1e\x19\x1c\x1c\x2a\x2b\xb8\x4a\xdc\xf0\xd8",
        // "" / M(None) / S(0) / L(0)
        "\x27\x55\x4d\x7f\xe1\x4f\x58\x7e\xe7\x99\xe7\xc5\x5c\x34\x2f\x89\xf7\x35\x81\x90\x19\x91\x4e\x48\x72\xd4\xf9\xde\x7b\x08\x41\xc6",
        // "NSApplicationMain" / M(Xor1) / S(14) / L(17)
        "\x40\x5d\x4f\x7e\x7e\x62\x67\x6d\x6f\x7a\x67\x61\x60\x43\x6f\x67\x60\x0e",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor4) / S(243) / L(31)
        "\x0b\x23\x26\x34\x19\x10\x05\x24\x09\x03\x14\x09\x0f\x0e\x01\x12\x19\x36\x01\x0c\x15\x05\x23\x01\x0c\x0c\x22\x01\x03\x0b\x13\x60",
        // "" / M(None) / S(0) / L(0)
        "\x13\xd3\x76\x6a\xb3\xa4\x30\x7e\xc6\x8d\x6b\x81\x1f\xe5\x07\xfa\x1b\xfe\x72\x52\x99\x4e\x34\x87\xf2\x20\x7d\xb8\x26\x15\x76\x28",
        // "en0" / M(Xor1) / S(220) / L(3)
        "\xb9\xb2\xec\xdc\x6f\x26\x88\xba\x40\x4f\x28\xa4\xf8\xae\x49\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x32\x74\xd9\x4a\xdf\x16\x48\xb5\xb3\x49\x30\xd6\x80\x19\x28\x11\x75\x8c\x0f\x0c\x2e\xea\xa5\x6b\x73\x9d\x6d\x4e\x97\xbd\x80\xb9",
        // "" / M(None) / S(0) / L(0)
        "\x10\x6d\xe5\x06\x11\x45\x29\xf1\xa6\xbd\xdb\x73\xc7\x48\x4b\xb6\x33\xc6\x03\xfd\xc0\x8e\x28\xa9\xb5\x65\x14\x5e\x9c\xf4\xd9\x23",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(44) / L(24)
        "\x4e\x4b\x4c\x6f\x7e\x62\x61\x78\x79\x68\x59\x64\x60\x68\x4a\x68\x79\x4e\x78\x7f\x7f\x68\x63\x79\x0d\xbe\xfa\xb6\x99\xf6\x5e\x09\x6e",
        // "kSecClassCertificate" / M(Xor1) / S(233) / L(20)
        "\x82\xba\x8c\x8a\xaa\x85\x88\x9a\x9a\xaa\x8c\x9b\x9d\x80\x8f\x80\x8a\x88\x9d\x8c\xe9",
        // "Contents/_MASReceipt" / M(Xor2) / S(74) / L(20)
        "\x1c\x30\x31\x2b\x3a\x31\x2b\x2c\x70\x00\x12\x1e\x0c\x0d\x3a\x3c\x3a\x36\x2f\x2b\x5f",
        // "CC_SHA1" / M(Xor1) / S(125) / L(7)
        "\x3e\x3e\x22\x2e\x35\x3c\x4c\x7d\x3e\x19\x31\xa7\x28\xcd\xd9\x34",
        // "" / M(None) / S(0) / L(0)
        "\x98\x33\x3c\xd5\x60\xd1\x58\xf4\xc6\xf4\x20\xb4\xc3\x49\x7f\xbe\xf1\x31\xf7\x57\xe5\x31\x97\xc3\x5c\x66\xd9\x56\x3d\x65\x1e\x1d",
        // "" / M(None) / S(0) / L(0)
        "\x27\x9b\x10\xcf\x7b\x8e\x82\x30\xdb\x6b\xb2\x4f\xec\x33\x4f\x85\x0b\x4b\xaa\x5f\xda\x62\x42\x2a\xf9\x4a\xa6\xe5\xbe\x74\x59\xdb",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(110) / L(59)
        "\x1c\x1b\x10\x1b\x4f\x10\x1f\x48\x10\x1c\x1c\x10\x18\x49\x10\x1f\x13\x10\x19\x4b\x10\x1a\x12\x10\x4c\x4c\x10\x1f\x12\x10\x4e\x1b\x10\x1e\x4b\x10\x4f\x18\x10\x18\x1e\x10\x1f\x18\x10\x4e\x1b\x10\x13\x12\x10\x4e\x4c\x10\x1c\x49\x10\x1c\x1a\x2a\x00\x1a\x7e\x84\x26\x92\x3a\x79",
        // "kCFTypeArrayCallBacks" / M(Rot) / S(55) / L(21)
        "\xa2\x7a\x7d\x8b\xb0\xa7\x9c\x78\xa9\xa9\x98\xb0\x7a\x98\xa3\xa3\x79\x98\x9a\xa2\xaa\x37",
        // "CFRelease" / M(Xor4) / S(236) / L(9)
        "\x83\x86\x92\xa5\xac\xa5\xa1\xb3\xa5\xc0\x0c\xa7\x76\xea\x8e\x8c",
        // "SHA1_Update" / M(Xor4) / S(142) / L(11)
        "\xb3\xa8\xa1\xd1\xbf\xb5\x90\x84\x81\x94\x85\xe0\x00\x47\x3d\xfc",
        // "CFBundleGetMainBundle" / M(Xor1) / S(16) / L(21)
        "\x53\x56\x52\x65\x7e\x74\x7c\x75\x57\x75\x64\x5d\x71\x79\x7e\x52\x65\x7e\x74\x7c\x75\x10",
        // "setDelegate:" / M(Xor4) / S(84) / L(12)
        "\x33\x25\x34\x04\x25\x2c\x25\x27\x21\x34\x25\x7a\x40\x85\xfd\xe4",
        // "objc_msgSend" / M(Xor1) / S(206) / L(12)
        "\xa1\xac\xa4\xad\x91\xa3\xbd\xa9\x9d\xab\xa0\xaa\xce\xe9\x5b\xcc",
        // "" / M(None) / S(0) / L(0)
        "\x46\x97\x64\x2f\xaf\x48\x0d\x5d\x73\xb9\xac\x50\xcd\xf1\x50\x88\xc5\xc6\x81\xbb\x82\xf4\x44\x7c\x43\x38\x43\x6d\x4e\x67\xeb\x83",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(165) / L(25)
        "\xb2\xdf\xda\xd3\xb5\xa4\xab\xa7\xaf\xb5\x8d\x8f\x9e\xb5\x9e\x8f\x92\x9e\xb5\x88\x93\xb5\xa4\xa3\xae\xea\x24\x7e\xa6\xe0\xaa\x91\x2b\x55",
        // "Contents/_MASReceipt/receipt" / M(Xor1) / S(147) / L(28)
        "\xd0\xfc\xfd\xe7\xf6\xfd\xe7\xe0\xbc\xcc\xde\xd2\xc0\xc1\xf6\xf0\xf6\xfa\xe3\xe7\xbc\xe1\xf6\xf0\xf6\xfa\xe3\xe7\x93\x17\x36\x87\x69\x60\xc3\x78\x45",
        // "CFReadStreamClose" / M(Xor3) / S(32) / L(17)
        "\x71\x74\x60\x57\x53\x56\x61\x46\x40\x57\x53\x5f\x71\x5e\x5d\x41\x57\x32",
        // "strncmp" / M(Xor1) / S(195) / L(7)
        "\xb0\xb7\xb1\xad\xa0\xae\xb3\xc3\x1f\xfa\xb0\xc1\x6a\x62\x8e\xbb",
        // "PKCS7_get0_signers" / M(Xor4) / S(77) / L(18)
        "\xe7\xfc\xf4\xe4\x80\xe8\xd0\xd2\xc3\x87\xe8\xc4\xde\xd0\xd9\xd2\xc5\xc4\xb7",
        // "CFDictionarySetValue" / M(Xor3) / S(121) / L(20)
        "\xcd\xc8\xca\xe7\xed\xfa\xe7\xe1\xe0\xef\xfc\xf7\xdd\xeb\xfa\xd8\xef\xe2\xfb\xeb\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x55\x59\xdc\x44\x99\xc3\xf4\xd7\x44\x3e\x3d\xcb\x07\x5f\xa5\x4c\x71\x96\x42\xa3\x50\x2a\xf5\x34\xb8\x16\x31\xd3\xc0\x8a\xea\x0b",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor4) / S(92) / L(57)
        "\x97\xeb\xc1\xcb\xcc\xdd\xd5\x97\xf4\xd1\xda\xca\xd9\xca\xc1\x97\xf3\xdd\xc1\xdb\xd0\xd9\xd1\xd6\xcb\x97\xeb\xc1\xcb\xcc\xdd\xd5\xea\xd7\xd7\xcc\xfb\xdd\xca\xcc\xd1\xde\xd1\xdb\xd9\xcc\xdd\xcb\x96\xd3\xdd\xc1\xdb\xd0\xd9\xd1\xd6\xb8\x10\x93\xee\xd8\x59\x5b\xbb\x24",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(180) / L(35)
        "\x9b\x9e\x9c\xb9\xac\xbd\x9e\xb7\xaa\xb5\xb9\xac\xac\xbd\xaa\x9b\xaa\xbd\xb9\xac\xbd\x9c\xb9\xac\xbd\x9e\xaa\xb7\xb5\x8b\xac\xaa\xb1\xb6\xbf\xd8",
        // "CFBundleIdentifier" / M(Xor4) / S(205) / L(18)
        "\x74\x71\x75\x42\x59\x53\x5b\x52\x7e\x53\x52\x59\x43\x5e\x51\x5e\x52\x45\x37",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(179) / L(14)
        "\xf1\xf7\xef\xe7\xfc\xee\xe2\xea\xed\xfc\xec\xed\xef\xfa\xa3\x84",
        // "freeifaddrs" / M(Xor2) / S(31) / L(11)
        "\x69\x7d\x6a\x6a\x66\x69\x6e\x6b\x6b\x7d\x7c\x0f\x1f\x08\xa6\xac",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x29\x10\xb6\xfc\x16\xed\x1f\x2c\x0f\x7d\x03\xd4\xc0\xe9\x9f\x0e\x25\xf2\x99\x89\xab\xb0\xd6\xc5\x58\x91\xe4\x6d\x86\x44\x44",
        // "d2i_X509_bio" / M(Xor1) / S(157) / L(12)
        "\xf9\xaf\xf4\xc2\xc5\xa8\xad\xa4\xc2\xff\xf4\xf2\x9d\x5f\x28\xf7",
        // "strcmp" / M(Xor3) / S(16) / L(6)
        "\x53\x54\x52\x43\x4d\x50\x20\x94\x44\x65\xf1\xdb\xeb\xe8\x71\x54",
        // "%02X" / M(Xor1) / S(177) / L(4)
        "\x94\x81\x83\xe9\xb1\xcc\xce\x92\x94\x37\x48\x17\x42\x71\xeb\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x7b\x2e\x40\x8b\x2e\x3d\x95\x40\xcb\x33\x38\x83\xb9\x8d\xbe\x97\x74\x22\xf1\x79\x34\x85\x81\x7e\x89\xee\x9b\x36\x4b\xc0\x79\xa6",
        // "CFEqual" / M(Xor2) / S(11) / L(7)
        "\x58\x5d\x5e\x6a\x6e\x7a\x77\x1b\x68\xf9\xe5\xb2\xe1\xa4\x2c\xcd",
        // "kSecMatchLimitAll" / M(Xor4) / S(175) / L(17)
        "\x25\x1d\x2b\x2d\x03\x2f\x3a\x2d\x26\x02\x27\x23\x27\x3a\x0f\x22\x22\x4e",
        // "CFArrayAppendValue" / M(Xor1) / S(19) / L(18)
        "\x50\x55\x52\x61\x61\x72\x6a\x52\x63\x63\x76\x7d\x77\x45\x72\x7f\x66\x76\x13",
        // "SecItemCopyMatching" / M(Xor4) / S(137) / L(19)
        "\xe7\xd1\xd7\xfd\xc0\xd1\xd9\xf7\xdb\xc4\xcd\xf9\xd5\xc0\xd7\xdc\xdd\xda\xd3\xb4",
        // "dlsym" / M(Xor2) / S(118) / L(5)
        "\x02\x0a\x15\x1f\x0b\x66\x18\xa3\xb1\x26\xb1\xb8\x86\x39\xb9\x8a",
        // "CC_SHA1_Update" / M(Xor1) / S(252) / L(14)
        "\xbf\xbf\xa3\xaf\xb4\xbd\xcd\xa3\xa9\x8c\x98\x9d\x88\x99\xfc\x2e",
        // "X509_free" / M(Xor3) / S(182) / L(9)
        "\x9e\xf3\xf6\xff\x99\xa0\xb4\xa3\xa3\xc6\x0d\xb3\xe4\x9e\xe8\x42",
        // "strcmp" / M(Rot) / S(140) / L(6)
        "\xff\x00\xfe\xef\xf9\xfc\x8c\x6b\x92\xa4\x54\x44\xe7\x6c\x03\x9c",
        // "SHA1_Final" / M(Xor1) / S(200) / L(10)
        "\x9b\x80\x89\xf9\x97\x8e\xa1\xa6\xa9\xa4\xc8\x3f\xbf\xa7\x38\x8c",
        // "EVP_get_digestbyname" / M(Xor4) / S(221) / L(20)
        "\x64\x77\x71\x7e\x46\x44\x55\x7e\x45\x48\x46\x44\x52\x55\x43\x58\x4f\x40\x4c\x44\x21",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(132) / L(22)
        "\xb3\xf9\xf7\xf6\xb3\xf0\xed\xe6\xb3\xf0\xed\xe6\xf3\xe6\xee\xe7\xb2\xe8\xfd\xf0\xed\xe6\x84",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(3) / L(39)
        "\x46\x49\x57\x6c\x70\x68\x5d\x72\x71\x68\x46\x75\x68\x64\x77\x68\x5a\x6c\x77\x6b\x57\x6c\x70\x68\x4c\x71\x77\x68\x75\x79\x64\x6f\x49\x75\x72\x70\x4a\x50\x57\x03\xf5\xdf\xfc\x69\x1d\xa2\x33\xb4",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(195) / L(35)
        "\xa4\xa1\xa3\x86\x93\x82\xa1\x88\x95\x8a\x86\x93\x93\x82\x95\xa4\x95\x82\x86\x93\x82\xa3\x86\x93\x82\xa1\x95\x88\x8a\xb4\x93\x95\x8e\x89\x80\xe7",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x98\x90\xcd\x4e\x2a\x0f\xb8\xb1\xeb\x06\x2d\xab\x74\x81\x30\xff\x0f\x4a\x8f\x72\x40\xf6\xd3\xdf\x9c\x8d\xf0\x34\x79\xbc\x25",
        // "%02X" / M(Xor4) / S(229) / L(4)
        "\x75\x60\x62\x08\x50\xdc\x3d\x7b\x97\xc5\x19\x8b\xdb\xd5\x84\x3f",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(102) / L(24)
        "\x04\x01\x05\x32\x29\x23\x2b\x22\x12\x29\x2b\x28\x26\x23\x02\x3f\x22\x24\x32\x33\x26\x25\x2b\x22\x47\x3a\x05\x86\xdf\xc2\x05\xbf\xdc",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(35) / L(31)
        "\x8e\x66\x69\x77\x9c\x93\x88\x67\x8c\x86\x97\x8c\x92\x91\x84\x95\x9c\x79\x84\x8f\x98\x88\x66\x84\x8f\x8f\x65\x84\x86\x8e\x96\x23",
        // "CFDateFormatterCreate" / M(Xor3) / S(225) / L(21)
        "\xb4\xb1\xb3\x96\x83\x92\xb1\x98\x85\x9a\x96\x83\x83\x92\x85\xb4\x85\x92\x96\x83\x92\xf7",
        // "EVP_DigestInit" / M(Xor2) / S(239) / L(14)
        "\xba\xa9\xaf\xa0\xbb\x96\x98\x9a\x8c\x8b\xb6\x91\x96\x8b\xff\xf9",
        // "BIO_write" / M(Xor3) / S(13) / L(9)
        "\x5f\x54\x52\x42\x6a\x6f\x74\x69\x78\x1d\x84\xe3\x92\x80\xd8\x87",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(32) / L(39)
        "\x63\x66\x74\x89\x8d\x85\x7a\x8f\x8e\x85\x63\x92\x85\x81\x94\x85\x77\x89\x94\x88\x74\x89\x8d\x85\x69\x8e\x94\x85\x92\x96\x81\x8c\x66\x92\x8f\x8d\x67\x6d\x74\x20\x87\xcd\xa2\xbd\x9b\xb4\x8a\x4c",
        // "glob" / M(Xor2) / S(154) / L(4)
        "\xed\xe6\xe5\xe8\x8a\x00\xc9\xaa\xbc\x05\xe6\xfc\x4f\x91\xf3\xa3",
        // "CFDateFormatterSetProperty" / M(Rot) / S(250) / L(26)
        "\x3d\x40\x3e\x5b\x6e\x5f\x40\x69\x6c\x67\x5b\x6e\x6e\x5f\x6c\x4d\x5f\x6e\x4a\x6c\x69\x6a\x5f\x6c\x6e\x73\xfa\xd2\x14\x6a\x40\xec\xd3\xd4\xef",
        // "kCFDateFormatterTimeZone" / M(Xor2) / S(132) / L(24)
        "\xce\xe6\xe3\xe1\xc4\xd1\xc0\xe3\xca\xd7\xc8\xc4\xd1\xd1\xc0\xd7\xf1\xcc\xc8\xc0\xff\xca\xcb\xc0\xa5\x01\x67\x32\x0d\xbb\x61\x3b\xe2",
        // "CFDictionaryCreateMutable" / M(Rot) / S(67) / L(25)
        "\x86\x89\x87\xac\xa6\xb7\xac\xb2\xb1\xa4\xb5\xbc\x86\xb5\xa8\xa4\xb7\xa8\x90\xb8\xb7\xa4\xa5\xaf\xa8\x43\x96\xb0\x5b\xd7\x53\x53\xb1\x8b",
        // "" / M(None) / S(0) / L(0)
        "\xd1\x32\x76\x33\xa3\xe0\x48\x9c\xe8\x1f\xb2\x41\xec\xca\x01\x25\xd3\x06\x72\x07\x2c\x57\x95\xe6\x97\x9c\xf7\x92\x0d\xf6\xe2\xe5",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(239) / L(25)
        "\x8f\x90\x8c\x90\x86\x8a\x8e\x90\x8f\x8f\x8d\x88\x8d\x8b\x90\x8f\x8e\x8e\x90\x88\x90\x8f\x8f\x90\x8f\xbe\x1a\xa1\xa8\x17\xee\x77\xe5\x60",
        // "sk_num" / M(Rot) / S(173) / L(6)
        "\x20\x18\x0c\x1b\x22\x1a\xad\x86\x4d\x9c\x01\xb8\xa7\xd1\x89\x30",
        // "X509_STORE_add_cert" / M(Xor2) / S(34) / L(19)
        "\x6e\x03\x06\x0f\x69\x65\x62\x79\x64\x73\x69\x57\x52\x52\x69\x55\x53\x44\x42\x36",
        // "" / M(None) / S(0) / L(0)
        "\xef\x32\xa6\x00\x57\xf9\x66\x23\xc9\xf4\x20\x7b\x59\x55\x61\x15\x17\x75\x88\xb8\x74\x82\xab\xea\x87\x9b\xc0\x4d\x7f\x33\xc5\x4f",
        // "globfree" / M(Rot) / S(37) / L(8)
        "\x8c\x91\x94\x87\x8b\x97\x8a\x8a\x25\x51\xf0\x5a\x0c\xb7\x38\x1b",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(4) / L(66)
        "\x33\x57\x7d\x77\x78\x69\x71\x33\x50\x6d\x66\x76\x65\x76\x7d\x33\x4a\x76\x65\x71\x69\x7b\x73\x76\x6f\x77\x33\x47\x73\x76\x69\x4a\x73\x79\x72\x68\x65\x78\x6d\x73\x72\x32\x6a\x76\x65\x71\x69\x7b\x73\x76\x6f\x33\x47\x73\x76\x69\x4a\x73\x79\x72\x68\x65\x78\x6d\x73\x72\x04",
        // "%02X:" / M(Xor2) / S(146) / L(5)
        "\xa7\xb2\xb0\xda\xb8\x82\x80\xa3\x46\xa5\x49\xa4\x42\xdf\xe6\x6a",
        // "CFStringCreateWithBytes" / M(Rot) / S(37) / L(23)
        "\x68\x6b\x78\x99\x97\x8e\x93\x8c\x68\x97\x8a\x86\x99\x8a\x7c\x8e\x99\x8d\x67\x9e\x99\x8a\x98\x25\x30\xd5\x0b\x99\xf2\x25\x35\x45",
        // "dlsym" / M(Xor2) / S(78) / L(5)
        "\x3a\x32\x2d\x27\x33\x5e\xb1\xec\x49\xb1\xa4\xd2\x21\x24\x29\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x40\x11\x49\x18\x3d\xf4\x2a\x3b\x7a\xb9\x4e\x38\xc7\x3e\x25\xcc\x4f\x04\x7a\x5c\xc6\x2b\x8e\x21\x56\xa5\xa9\x83\x2e\x01\x30\x29",
        // "glob_b" / M(Xor3) / S(9) / L(6)
        "\x7e\x75\x76\x7b\x46\x7b\x19\xe7\xd3\xdb\x01\x45\xc8\xc0\x05\x9e",
        // "" / M(None) / S(0) / L(0)
        "\xea\xde\x5b\xf9\xbc\xd1\xe2\x48\x53\xcf\x35\xfe\x45\x2f\x17\xf8\xdb\xdf\x88\x0f\x40\xaa\x7f\x54\x15\x14\xb1\x1b\xda\xe3\x01\xdb",
        // "X509_digest" / M(Rot) / S(193) / L(11)
        "\x19\xf6\xf1\xfa\x20\x25\x2a\x28\x26\x34\x35\xc1\xa9\x20\xa0\x1a",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(102) / L(43)
        "\xa9\xac\xbb\xb8\xb2\xa9\xd8\xcb\xc7\xda\xcb\xbd\xcf\xda\xce\xac\xcf\xd2\xcb\xb9\xdf\xd9\xda\xcb\xd3\xb6\xc7\xda\xce\xb8\xcb\xd2\xc7\xda\xcf\xdc\xcb\xba\xd5\xa8\xc7\xd9\xcb\x66\x91\x3b\xd7\x24\xd8\x57\x64\xcf",
        // "CFDateFormatterSetProperty" / M(Xor4) / S(93) / L(26)
        "\xf4\xf1\xf3\xd6\xc3\xd2\xf1\xd8\xc5\xda\xd6\xc3\xc3\xd2\xc5\xe4\xd2\xc3\xe7\xc5\xd8\xc7\xd2\xc5\xc3\xce\xb7\x7b\xbb\x58\x98\x40\x68\x59\x1c",
        // "X509_STORE_free" / M(Xor2) / S(151) / L(15)
        "\xdf\xb2\xb7\xbe\xd8\xd4\xd3\xc8\xd5\xc2\xd8\xe1\xf5\xe2\xe2\x87",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(31) / L(37)
        "\x06\x03\x10\x17\x09\x06\x37\x20\x24\x31\x20\x06\x2a\x35\x3c\x04\x35\x35\x20\x2b\x21\x2c\x2b\x22\x15\x24\x31\x2d\x06\x2a\x28\x35\x2a\x2b\x20\x2b\x31\x45",
        // "X509_STORE_free" / M(Xor2) / S(145) / L(15)
        "\xd9\xb4\xb1\xb8\xde\xd2\xd5\xce\xd3\xc4\xde\xe7\xf3\xe4\xe4\x81",
        // "CFReadStreamClose" / M(Rot) / S(158) / L(17)
        "\xe1\xe4\xf0\x03\xff\x02\xf1\x12\x10\x03\xff\x0b\xe1\x0a\x0d\x11\x03\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x5e\x41\x34\xcd\xdd\x13\x47\x6f\x00\x80\xd7\xfa\xae\x1d\x26\x6d\x7a\xe4\xa6\xfd\x7c\x39\xde\x0d\x02\x98\xfa\x52\x7e\xb7\x99\x8f",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(186) / L(14)
        "\x98\x9e\x86\x8e\x95\x87\x8b\x83\x84\x95\x85\x84\x86\x93\xca\xc0",
        // "CFURLCreateFromFileSystemRepresentation" / M(Rot) / S(139) / L(39)
        "\xce\xd1\xe0\xdd\xd7\xce\xfd\xf0\xec\xff\xf0\xd1\xfd\xfa\xf8\xd1\xf4\xf7\xf0\xde\x04\xfe\xff\xf0\xf8\xdd\xf0\xfb\xfd\xf0\xfe\xf0\xf9\xff\xec\xff\xf4\xfa\xf9\x8b\x3d\xba\x6c\x5a\x61\xca\x20\xbc",
        // "" / M(None) / S(0) / L(0)
        "\x87\x89\xd1\x30\x56\x3d\x48\xd3\x05\xe6\x83\x0f\x0b\x83\x81\x17\x85\x9b\xc1\x80\x64\x08\xa0\x58\xee\xb3\x7b\xa0\xc1\x3c\xe4\x2d",
        // "" / M(None) / S(0) / L(0)
        "\xc0\x2b\x81\x28\x46\x41\x32\xb9\x79\xbb\x15\xc8\xd2\xe3\x5f\x1e\x73\xec\xbc\x4c\x6f\x4b\x5a\x0b\x83\x8a\xfe\x87\x7a\x07\x62\x49",
        // "sel_registerName" / M(Rot) / S(206) / L(16)
        "\x41\x33\x3a\x2d\x40\x33\x35\x37\x41\x42\x33\x40\x1c\x2f\x3b\x33\xce",
        // "" / M(None) / S(0) / L(0)
        "\x6a\xcb\xba\x50\x3a\x8a\x16\x3e\x30\xa4\x43\x00\x2e\x02\x27\xe8\xf5\x51\xeb\xcb\xb1\xc9\x4c\x3f\xe3\xb5\x39\x80\x7c\x0e\x42\x66",
        // "CFDataCreateMutable" / M(Xor2) / S(111) / L(19)
        "\x38\x3d\x3f\x1a\x0f\x1a\x38\x09\x1e\x1a\x0f\x1e\x36\x0e\x0f\x1a\x19\x17\x1e\x7b",
        // "" / M(None) / S(0) / L(0)
        "\x6a\x71\xb8\x68\x32\xe0\x6b\x3e\x22\x42\xe6\xd6\xcb\x5f\xf2\xd7\xe1\xde\xb3\xe3\x31\xc3\xc2\xec\x62\x8c\x99\xfd\xce\x95\x84\x27",
        // "X509_free" / M(Xor1) / S(81) / L(9)
        "\x09\x64\x61\x68\x0e\x37\x23\x34\x34\x51\xa7\xfc\xb3\xbc\xa7\x34",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(107) / L(16)
        "\xce\x9d\xd4\xca\xac\xbe\xb9\x9c\xca\xb4\xb9\xbf\xb0\xb2\xb0\xbd\x6b",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(222) / L(22)
        "\xb1\xb4\xb3\x80\x80\x93\x8b\xb5\x97\x86\xa4\x93\x9e\x87\x97\xb3\x86\xbb\x9c\x96\x97\x8a\xf2",
        // "CFBundleShortVersionString" / M(Xor4) / S(111) / L(26)
        "\x6e\x6b\x6f\x58\x43\x49\x41\x48\x7e\x45\x42\x5f\x59\x7b\x48\x5f\x5e\x44\x42\x43\x7e\x59\x5f\x44\x43\x4a\x2d\xff\x3f\x80\x5a\x65\x3f\x57\x21",
        // "" / M(None) / S(0) / L(0)
        "\xc0\xa7\x3e\xcb\x84\x69\x33\x7a\x5b\x43\x1b\xf7\xf7\x53\x5c\x7f\x8f\xb0\x89\xe6\x76\x9d\x7a\x90\xeb\x9d\xe9\xd0\x14\xae\x27\x15",
        // "exit" / M(Xor1) / S(224) / L(4)
        "\x85\x98\x89\x94\xe0\x51\x83\x67\x4f\x84\x23\x20\xea\xfb\xfc\x20",
        // "" / M(None) / S(0) / L(0)
        "\x77\x7c\x0c\xc4\x81\xa3\x17\x1e\xe4\x12\xf3\xe5\x50\x9b\x33\x71\xe0\xbc\xd2\x74\x86\x7f\x31\xfd\x3b\xe9\x88\x64\x5a\xd3\xcf\xb4",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x73\x95\xe8\x44\xa5\xa2\xe8\x0e\xec\x62\x6b\xaa\x80\xa6\x6e\xda\xd6\x67\x79\x3a\xe4\x3f\x89\x28\xb2\x9e\x88\x03\xbb\x61\xc5",
        // "%02x" / M(Xor3) / S(166) / L(4)
        "\x93\x86\x84\xce\xb6\x16\x4d\xc5\xae\x80\xff\x76\x88\x90\xb5\x97",
        // "EVP_DigestUpdate" / M(Xor4) / S(243) / L(16)
        "\x66\x75\x73\x7c\x67\x4a\x44\x46\x50\x57\x76\x53\x47\x42\x57\x46\x23",
        // "CFDataGetLength" / M(Xor4) / S(205) / L(15)
        "\x93\x96\x94\xb1\xa4\xb1\x97\xb5\xa4\x9c\xb5\xbe\xb7\xa4\xb8\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x8f\x42\x3e\x51\x20\x5d\xfd\x9d\x02\x95\xad\xdc\xc9\x9e\xf0\x6e\x7e\x26\x2b\xfc\xd9\x26\xde\x35\xff\x12\xbd\xe7\xb6\x86\xd1\x7a",
        // "%02x:" / M(Xor3) / S(147) / L(5)
        "\x86\x93\x91\xdb\x99\xa3\x84\x6a\x8a\x7e\x31\x18\x2b\x74\xce\x3d",
        // "kSecMatchLimit" / M(Rot) / S(6) / L(14)
        "\x71\x59\x6b\x69\x53\x67\x7a\x69\x6e\x52\x6f\x73\x6f\x7a\x06\xaf",
        // "BIO_new" / M(Xor3) / S(235) / L(7)
        "\xb9\xb2\xb4\xa4\x95\x9e\x8c\xfb\xb6\xf9\x9f\xfd\x5c\x9e\x09\x6b",
        // "BIO_s_mem" / M(Xor2) / S(51) / L(9)
        "\x61\x6a\x6c\x7c\x50\x7c\x4e\x46\x4e\x23\x83\xc6\xca\x39\xd9\x0f",
        // "freeifaddrs" / M(Xor3) / S(224) / L(11)
        "\x96\x82\x95\x95\x99\x96\x91\x94\x94\x82\x83\xf0\x18\xf3\x7e\x91",
        // "CFArrayAppendValue" / M(Xor1) / S(244) / L(18)
        "\xb7\xb2\xb5\x86\x86\x95\x8d\xb5\x84\x84\x91\x9a\x90\xa2\x95\x98\x81\x91\xf4",
        // "" / M(None) / S(0) / L(0)
        "\x1f\x22\x32\x8c\x69\x04\xd2\xa1\x0a\x23\xcf\xcd\xff\x12\x5f\x53\x56\xe6\xf8\x08\xd3\xc5\x00\x43\xb5\x29\x9c\x23\x49\xa5\xa7\x0d",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(215) / L(36)
        "\xbf\xba\xbe\x89\x92\x98\x90\x99\xbb\x99\x88\xaa\x9d\x90\x89\x99\xba\x93\x8e\xb5\x92\x9a\x93\xb8\x95\x9f\x88\x95\x93\x92\x9d\x8e\x85\xb7\x99\x85\xfc",
        // "" / M(None) / S(0) / L(0)
        "\x71\x48\xc0\x89\xa9\x47\x3f\xfe\x05\x8d\xae\x47\x68\x5d\x82\x34\xc6\xea\x75\x26\x3c\x5b\x54\x74\x47\xc5\xe2\xfe\x8c\x49\x0a\x99",
        // "" / M(None) / S(0) / L(0)
        "\x45\x02\x9d\xb2\x79\xbc\x48\xbe\xd6\x1e\xb4\xc9\x4e\x9b\x68\xe0\x36\xa8\xdd\xb7\x32\x07\x0f\x06\x90\x5e\xf5\xd6\xbc\x38\xe2\x63",
        // "CFDataGetBytePtr" / M(Xor1) / S(45) / L(16)
        "\x6e\x6b\x69\x4c\x59\x4c\x6a\x48\x59\x6f\x54\x59\x48\x7d\x59\x5f\x2d",
        // "CC_SHA1_Final" / M(Xor4) / S(97) / L(13)
        "\x53\x53\x4f\x43\x58\x51\x21\x4f\x56\x79\x7e\x71\x7c\x10\x7a\x7e",
        // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(77) / L(25)
        "\x5e\x41\x5d\x41\x57\x5b\x5f\x41\x5e\x5e\x5c\x59\x5c\x5a\x41\x5e\x5f\x5f\x41\x59\x41\x5e\x5e\x41\x5e\x6f\x30\x7b\xbf\x0f\xb6\x0a\xad\x62",
        // "X509_STORE_new" / M(Xor2) / S(5) / L(14)
        "\x4d\x20\x25\x2c\x4a\x46\x41\x5a\x47\x50\x4a\x7b\x70\x62\x15\xf4",
        // "CFArrayCreateMutable" / M(Rot) / S(169) / L(20)
        "\xec\xef\xea\x1b\x1b\x0a\x22\xec\x1b\x0e\x0a\x1d\x0e\xf6\x1e\x1d\x0a\x0b\x15\x0e\xa9",
        // "" / M(None) / S(0) / L(0)
        "\xf6\xcf\x36\xe0\xc3\x30\x03\xf2\x99\x30\x67\x4a\x79\xa1\xec\xcd\xd9\x2a\xfb\x41\x25\xa5\xa4\x65\xd4\x7f\x1e\xb2\x1d\x46\xf0\x2f",
        // "" / M(None) / S(0) / L(0)
        "\x4d\x1e\x97\xc7\x25\x46\x55\xa3\x97\x4b\x88\x38\xac\x88\x48\xb8\x45\x06\x58\xe8\xc9\x01\xfb\x9c\x26\xa1\xe2\xe9\x40\x91\x29\x83",
        // "" / M(None) / S(0) / L(0)
        "\xb0\xe1\x52\xe1\x35\x94\xbb\x3a\x88\xfc\xc0\xec\xe3\x7a\xd0\x58\x09\x77\xea\x3e\x72\x4b\x2d\x76\xcc\x3f\x0b\xde\x1b\xe2\x86\xb9",
        // "EVP_DigestUpdate" / M(Xor3) / S(56) / L(16)
        "\x0c\x1f\x19\x16\x0d\x20\x2e\x2c\x3a\x3d\x1c\x39\x2d\x28\x3d\x2c\x49",
        // "CFDateCompare" / M(Xor1) / S(237) / L(13)
        "\xae\xab\xa9\x8c\x99\x88\xae\x82\x80\x9d\x8c\x9f\x88\xed\x70\xa3",
        // "" / M(None) / S(0) / L(0)
        "\xb5\x7b\x89\xf8\xac\x56\x21\xa7\x41\x01\x56\x3d\x5b\xd7\xeb\x2c\x43\x32\x80\xa6\xb6\xb1\xec\xae\xc8\xe2\x36\x37\xf7\xaa\x50\x1f",
        // "CFDictionaryAddValue" / M(Xor1) / S(207) / L(20)
        "\x8c\x89\x8b\xa6\xac\xbb\xa6\xa0\xa1\xae\xbd\xb6\x8e\xab\xab\x99\xae\xa3\xba\xaa\xcf",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(153) / L(40)
        "\xaf\xa8\xa8\xfc\xac\xfb\xaf\xaf\xab\xfa\xac\xa0\xaa\xf8\xa9\xa1\xff\xff\xac\xa1\xfd\xa8\xad\xf8\xfc\xab\xab\xad\xac\xab\xfd\xa8\xa0\xa1\xfd\xff\xaf\xfa\xaf\xa9\x99\x1c\x48\xa9\xa4\x86\x3f\x6d\x94",
        // "CFReadStreamOpen" / M(Xor3) / S(45) / L(16)
        "\x7d\x78\x6c\x5b\x5f\x5a\x6d\x4a\x4c\x5b\x5f\x53\x71\x4e\x5b\x50\x3e",
        // "" / M(None) / S(0) / L(0)
        "\x4f\x95\x80\xfd\xb1\x1f\xe6\x26\xf8\x38\x5a\xd1\x14\x33\xbc\x73\xf6\x75\x03\xa1\x06\xe7\x2e\x48\x50\x2a\x59\x62\x4e\xbf\x01\x6f",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor3) / S(85) / L(54)
        "\xa3\xdf\xf5\xff\xf8\xe9\xe1\xa3\xc0\xe5\xee\xfe\xed\xfe\xf5\xa3\xca\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xff\xa3\xdf\xe9\xef\xf9\xfe\xe5\xf8\xf5\xa2\xea\xfe\xed\xe1\xe9\xfb\xe3\xfe\xe7\xa3\xdf\xe9\xef\xf9\xfe\xe5\xf8\xf5\x8c",
        // "receipt" / M(Xor3) / S(104) / L(7)
        "\x0a\x1d\x1b\x1d\x11\x08\x0c\x78\x41\x31\xcb\xc5\x40\xad\x66\x50",
        // "" / M(None) / S(0) / L(0)
        "\x88\xe2\xd0\x48\x2e\xfe\xa6\x0c\x70\xd1\xb4\xf9\xa5\xb2\x00\xe4\xfa\x31\xfa\x69\x7c\xd3\xef\xdd\xa5\x28\x03\x00\x73\xa3\xb4\xba",
        // "CFReadStreamRead" / M(Rot) / S(250) / L(16)
        "\x3d\x40\x4c\x5f\x5b\x5e\x4d\x6e\x6c\x5f\x5b\x67\x4c\x5f\x5b\x5e\xfa",
        // "" / M(None) / S(0) / L(0)
        "\x34\x83\xcd\x20\x7b\x6f\x9d\xda\x4b\x9a\xa9\xdc\xd6\x03\x45\x71\xe8\x69\x6d\xf7\xff\x01\xc4\x9c\x7f\x23\x04\x35\x9d\xfe\x42\xb5",
        // "2.0.5" / M(Xor3) / S(51) / L(5)
        "\x71\x6d\x73\x6d\x76\x43\x54\x4d\xdb\xcf\xe1\xa4\xc3\xa6\x16\x49",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(54) / L(37)
        "\x1f\x1a\x09\x0e\x10\x1f\x2e\x39\x3d\x28\x39\x1f\x33\x2c\x25\x1d\x2c\x2c\x39\x32\x38\x35\x32\x3b\x0c\x3d\x28\x34\x1f\x33\x31\x2c\x33\x32\x39\x32\x28\x5c",
        // "SHA1_Update" / M(Xor1) / S(149) / L(11)
        "\xc6\xdd\xd4\xa4\xca\xc0\xe5\xf1\xf4\xe1\xf0\x95\xbf\x30\xfa\xcb",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(167) / L(21)
        "\xd6\xfe\xfb\xe9\xc4\xcd\xd8\xfc\xcf\xcf\xdc\xc4\xfe\xdc\xd1\xd1\xff\xdc\xde\xd6\xce\xbd",
        // "" / M(None) / S(0) / L(0)
        "\x22\xf2\x0a\x94\x17\x8f\x8e\xda\xd2\xec\x81\x5c\x14\xdf\x11\x44\x92\x46\x85\x84\xa5\xab\xb3\x68\xd5\x96\xd8\x19\xa7\xf4\xad\x85",
        // "strncmp" / M(Xor3) / S(111) / L(7)
        "\x0c\x0b\x0d\x11\x1c\x12\x0f\x7f\xe1\x0f\xf4\x95\xf5\x7d\x67\x32",
        // "SecKeychainSearchCopyNext" / M(Xor1) / S(186) / L(25)
        "\xe9\xdf\xd9\xf1\xdf\xc3\xd9\xd2\xdb\xd3\xd4\xe9\xdf\xdb\xc8\xd9\xd2\xf9\xd5\xca\xc3\xf4\xdf\xc2\xce\xba\x65\xd0\x5d\x0a\x5d\x7b\xd1\x54",
        // "OBJ_txt2obj" / M(Xor2) / S(198) / L(11)
        "\x99\x94\x9c\x89\xa2\xae\xa2\xe4\xb9\xb4\xbc\xd6\x7f\x0e\xc6\x52",
        // "EVP_DigestFinal" / M(Xor1) / S(218) / L(15)
        "\x9f\x8c\x8a\x85\x9e\xb3\xbd\xbf\xa9\xae\x9c\xb3\xb4\xbb\xb6\xda",
        // "glob_b" / M(Xor1) / S(98) / L(6)
        "\x05\x0e\x0d\x00\x3d\x00\x62\x0c\x9e\xb2\xd6\x88\xdb\x0f\xcb\xcb",
        // "ASN1_INTEGER_get" / M(Rot) / S(248) / L(16)
        "\x39\x4b\x46\x29\x57\x41\x46\x4c\x3d\x3f\x3d\x4a\x57\x5f\x5d\x6c\xf8",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(21) / L(37)
        "\x46\x70\x76\x5e\x70\x6c\x76\x7d\x74\x7c\x7b\x46\x70\x74\x67\x76\x7d\x56\x67\x70\x74\x61\x70\x53\x67\x7a\x78\x54\x61\x61\x67\x7c\x77\x60\x61\x70\x66\x15",
        // "" / M(None) / S(0) / L(0)
        "\x37\x61\x57\xbb\x0b\x0e\xc9\x79\x0d\x6d\x10\xef\xac\x6e\x61\x7b\xb1\x3f\x5d\x56\x79\x3f\x03\x4b\xf2\xfd\x74\x46\x4f\xfc\xae\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x1e\x71\x0d\xf4\xb3\x1d\x9a\x15\x83\x11\xe0\xf8\xb5\x25\xac\x40\x8e\xd5\x4c\x41\xbd\xf9\x28\x5b\x93\x59\xab\x53\x75\x08\x25\x2e",
        // "CFBundleIdentifier" / M(Xor2) / S(252) / L(18)
        "\xac\xa9\xad\x9a\x81\x8b\x83\x8a\xa6\x8b\x8a\x81\x9b\x86\x89\x86\x8a\x9d\xef",
        // "" / M(None) / S(0) / L(0)
        "\x9d\x3b\x76\x3f\x28\x7d\xa6\x79\x36\xc5\x4d\xa6\x81\x9a\xa4\x79\x01\x09\xb0\x18\x90\xd9\xf2\xe5\x17\xb0\xcd\x6f\x4d\xfb\x9b\xa2",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor2) / S(7) / L(37)
        "\x62\x67\x74\x73\x6d\x62\x53\x44\x40\x55\x44\x62\x4e\x51\x58\x60\x51\x51\x44\x4f\x45\x48\x4f\x46\x71\x40\x55\x49\x62\x4e\x4c\x51\x4e\x4f\x44\x4f\x55\x21",
        // "sel_registerName" / M(Xor4) / S(107) / L(16)
        "\x68\x7e\x77\x44\x69\x7e\x7c\x72\x68\x6f\x7e\x69\x55\x7a\x76\x7e\x1b",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(9) / L(40)
        "\x0e\x09\x09\x7d\x0d\x7a\x0e\x0e\x0a\x7b\x0d\x01\x0b\x79\x08\x00\x7e\x7e\x0d\x00\x7c\x09\x0c\x79\x7d\x0a\x0a\x0c\x0d\x0a\x7c\x09\x01\x00\x7c\x7e\x0e\x7b\x0e\x08\x38\x05\x8d\x1e\xb7\xb6\x62\x69\xf4",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(111) / L(50)
        "\x8d\xf1\xdb\xd1\xd6\xc7\xcf\x8d\xee\xcb\xc0\xd0\xc3\xd0\xdb\x8d\xe4\xd0\xc3\xcf\xc7\xd5\xcd\xd0\xc9\xd1\x8d\xe3\xd2\xd2\xe9\xcb\xd6\x8c\xc4\xd0\xc3\xcf\xc7\xd5\xcd\xd0\xc9\x8d\xe3\xd2\xd2\xe9\xcb\xd6\xa2",
        // "kSecClass" / M(Rot) / S(70) / L(9)
        "\xb1\x99\xab\xa9\x89\xb2\xa7\xb9\xb9\x46\x14\xbb\xf8\x3c\x99\x9b",
        // "CFEqual" / M(Xor2) / S(118) / L(7)
        "\x25\x20\x23\x17\x13\x07\x0a\x66\xce\x0e\xdb\xdf\x94\x37\x07\xae",
        // "" / M(None) / S(0) / L(0)
        "\x53\xb3\x59\xaa\x4f\x18\x69\xc1\x78\x60\xb8\xda\x83\x4a\x7c\x00\x5d\x83\x03\xb7\x1d\x1e\x62\x03\x64\x9a\x2b\x73\x66\x96\x32\x5d",
        // "CFBundleShortVersionString" / M(Rot) / S(4) / L(26)
        "\x47\x4a\x46\x79\x72\x68\x70\x69\x57\x6c\x73\x76\x78\x5a\x69\x76\x77\x6d\x73\x72\x57\x78\x76\x6d\x72\x6b\x04\xb2\xf2\x22\x4c\xba\xb4\x0e\x15",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(194) / L(40)
        "\xf4\xf3\xf3\x87\xf7\x80\xf4\xf4\xf0\x81\xf7\xfb\xf1\x83\xf2\xfa\x84\x84\xf7\xfa\x86\xf3\xf6\x83\x87\xf0\xf0\xf6\xf7\xf0\x86\xf3\xfb\xfa\x86\x84\xf4\x81\xf4\xf2\xc2\x37\x18\x22\x63\x5b\x36\x58\x91",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(61) / L(31)
        "\x76\x5e\x5b\x49\x64\x6d\x78\x59\x74\x7e\x69\x74\x72\x73\x7c\x6f\x64\x4b\x7c\x71\x68\x78\x5e\x7c\x71\x71\x5f\x7c\x7e\x76\x6e\x1d",
        // "CFStringCompare" / M(Xor2) / S(198) / L(15)
        "\x95\x90\x85\xa2\xa4\xbf\xb8\xb1\x95\xb9\xbb\xa6\xb7\xa4\xb3\xd6",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(126) / L(19)
        "\x26\x4b\x4e\x47\x21\x19\x1b\x0a\x21\x1b\x06\x0a\x21\x1c\x07\x21\x31\x3c\x34\x7e",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(68) / L(22)
        "\x07\x02\x05\x36\x36\x25\x3d\x03\x21\x30\x12\x25\x28\x31\x21\x05\x30\x0d\x2a\x20\x21\x3c\x44",
        // "CC_SHA1_Init" / M(Xor1) / S(237) / L(12)
        "\xae\xae\xb2\xbe\xa5\xac\xdc\xb2\xa4\x83\x84\x99\xed\x16\x89\x58",
        // "" / M(None) / S(0) / L(0)
        "\x65\x2d\x22\xc3\x0b\x02\x7f\x0b\xb3\xed\x1c\xb4\x82\x3b\xa4\x16\xf4\xfe\x08\xf7\xed\x13\x24\x30\x83\xc0\x24\x07\xa3\x5a\xec\xca",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor3) / S(217) / L(54)
        "\x3f\x43\x69\x63\x64\x75\x7d\x3f\x5c\x79\x72\x62\x71\x62\x69\x3f\x56\x62\x71\x7d\x75\x67\x7f\x62\x7b\x63\x3f\x43\x75\x73\x65\x62\x79\x64\x69\x3e\x76\x62\x71\x7d\x75\x67\x7f\x62\x7b\x3f\x43\x75\x73\x65\x62\x79\x64\x69\x10",
        // "CFDataCreate" / M(Rot) / S(214) / L(12)
        "\x19\x1c\x1a\x37\x4a\x37\x19\x48\x3b\x37\x4a\x3b\xd6\x32\x63\xc8",
        // "kSecMatchSearchList" / M(Xor3) / S(47) / L(19)
        "\x28\x10\x26\x20\x0e\x22\x37\x20\x2b\x10\x26\x22\x31\x20\x2b\x0f\x2a\x30\x37\x43",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(250) / L(25)
        "\x5f\x5a\x58\x75\x7f\x68\x75\x73\x72\x7d\x6e\x65\x5f\x6e\x79\x7d\x68\x79\x51\x69\x68\x7d\x7e\x70\x79\x1c\x04\xec\x05\x5f\xd0\x66\xc5\xfb",
        // "CFDataGetLength" / M(Xor3) / S(11) / L(15)
        "\x58\x5d\x5f\x7a\x6f\x7a\x5c\x7e\x6f\x57\x7e\x75\x7c\x6f\x73\x1b",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(110) / L(50)
        "\x9d\xc1\xe7\xe1\xe2\xd3\xdb\x9d\xba\xd7\xd0\xe0\xcf\xe0\xe7\x9d\xb4\xe0\xcf\xdb\xd3\xe5\xdd\xe0\xd9\xe1\x9d\xaf\xde\xde\xb9\xd7\xe2\x9c\xd4\xe0\xcf\xdb\xd3\xe5\xdd\xe0\xd9\x9d\xaf\xde\xde\xb9\xd7\xe2\x6e",
        // "Apple Root CA" / M(Xor1) / S(68) / L(13)
        "\x05\x34\x34\x28\x21\x64\x16\x2b\x2b\x30\x64\x07\x05\x44\x5a\x9b",
        // "kSecClass" / M(Xor2) / S(151) / L(9)
        "\xec\xd4\xe2\xe4\xc4\xeb\xe6\xf4\xf4\x87\xe6\xec\xfe\xee\x5f\xcd",
        // "Contents/_MASReceipt/receipt" / M(Rot) / S(164) / L(28)
        "\xe7\x13\x12\x18\x09\x12\x18\x17\xd3\x03\xf1\xe5\xf7\xf6\x09\x07\x09\x0d\x14\x18\xd3\x16\x09\x07\x09\x0d\x14\x18\xa4\x92\x03\x56\xe2\xb3\xce\x25\x61",
        // "CFDataAppendBytes" / M(Xor4) / S(82) / L(17)
        "\x87\x82\x80\xa5\xb0\xa5\x85\xb4\xb4\xa1\xaa\xa0\x86\xbd\xb0\xa1\xb7\xc4",
        // "" / M(None) / S(0) / L(0)
        "\xef\xed\x16\x2d\xc9\x85\x99\x75\x97\xac\x81\x11\x5d\x61\xa7\x0b\xec\xd4\xdf\xc7\xa3\xff\x63\x5b\xf2\x41\x37\x1b\x87\xcb\x6a\xac",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(26) / L(57)
        "\x73\x0f\x25\x2f\x28\x39\x31\x73\x10\x35\x3e\x2e\x3d\x2e\x25\x73\x17\x39\x25\x3f\x34\x3d\x35\x32\x2f\x73\x0f\x25\x2f\x28\x39\x31\x0e\x33\x33\x28\x1f\x39\x2e\x28\x35\x3a\x35\x3f\x3d\x28\x39\x2f\x72\x37\x39\x25\x3f\x34\x3d\x35\x32\x5c\xa2\xd7\x78\x68\x28\x2d\xdd\x9d",
        // "CFDictionaryGetValue" / M(Xor3) / S(94) / L(20)
        "\x30\x35\x37\x1a\x10\x07\x1a\x1c\x1d\x12\x01\x0a\x34\x16\x07\x25\x12\x1f\x06\x16\x73",
        // "X509_digest" / M(Xor3) / S(136) / L(11)
        "\xc0\xad\xa8\xa1\xc7\xfc\xf1\xff\xfd\xeb\xec\x98\x3c\xdb\x41\xa5",
        // "CFDataGetLength" / M(Rot) / S(215) / L(15)
        "\x1a\x1d\x1b\x38\x4b\x38\x1e\x3c\x4b\x23\x3c\x45\x3e\x4b\x3f\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x01\x19\x7b\x2b\x1c\xf8\x5c\x9d\x74\x0b\x2f\xa9\xe0\x02\xc9\xb0\x5e\xb1\x0d\xdf\xdd\x91\x65\xea\x79\x7a\x07\xb1\x64\xad\x80\x82",
        // "CFDictionarySetValue" / M(Rot) / S(36) / L(20)
        "\x67\x6a\x68\x8d\x87\x98\x8d\x93\x92\x85\x96\x9d\x77\x89\x98\x7a\x85\x90\x99\x89\x24",
        // "SHA1" / M(Xor3) / S(5) / L(4)
        "\x46\x5d\x54\x24\x15\x5e\xc4\x3b\x8b\x7a\xf8\xeb\x1f\x6d\x9f\xcf",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(50) / L(59)
        "\x40\x47\x4c\x47\x13\x4c\x43\x14\x4c\x40\x40\x4c\x44\x15\x4c\x43\x4f\x4c\x45\x17\x4c\x46\x4e\x4c\x10\x10\x4c\x43\x4e\x4c\x12\x47\x4c\x42\x17\x4c\x13\x44\x4c\x44\x42\x4c\x43\x44\x4c\x12\x47\x4c\x4f\x4e\x4c\x12\x10\x4c\x40\x15\x4c\x40\x46\x76\x33\x52\xde\x69\xcb\x3c\x52\x44",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(111) / L(23)
        "\xaf\x90\x85\x8e\xb3\xb3\xac\xbf\x81\x84\x84\xbf\x81\x8c\x8c\xbf\x84\x89\x87\x85\x93\x94\x93\xe0\x59\x3b\x16\xbd\x01\xb7\x6e\x12",
        // "objc_msgSend" / M(Rot) / S(7) / L(12)
        "\x76\x69\x71\x6a\x66\x74\x7a\x6e\x5a\x6c\x75\x6b\x07\x66\x5e\xc7",
        // "ASN1_INTEGER_free" / M(Xor3) / S(127) / L(17)
        "\xd0\xc2\xdf\xa0\xce\xd8\xdf\xc5\xd4\xd6\xd4\xc3\xce\xf7\xe3\xf4\xf4\x91",
        // "kSecMatchLimit" / M(Xor3) / S(67) / L(14)
        "\x38\x00\x36\x30\x1e\x32\x27\x30\x3b\x1f\x3a\x3e\x3a\x27\x53\x19",
        // "ASN1_get_object" / M(Xor2) / S(239) / L(15)
        "\xbe\xac\xb1\xce\xa0\x98\x9a\x8b\xa0\x90\x9d\x95\x9a\x9c\x8b\xff",
        // "ASN1_INTEGER_free" / M(Xor1) / S(159) / L(17)
        "\xde\xcc\xd1\xae\xc0\xd6\xd1\xcb\xda\xd8\xda\xcd\xc0\xf9\xed\xfa\xfa\x9f",
        // "PKCS7_free" / M(Rot) / S(85) / L(10)
        "\xa5\xa0\x98\xa8\x8c\xb4\xbb\xc7\xba\xba\x55\xbb\x56\x5e\xe2\xa9",
        // "X509_STORE_new" / M(Xor1) / S(205) / L(14)
        "\x95\xf8\xfd\xf4\x92\x9e\x99\x82\x9f\x88\x92\xa3\xa8\xba\xcd\xac",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(187) / L(24)
        "\xb7\x9f\x9a\x98\xbd\xa8\xb9\x9a\xb3\xae\xb1\xbd\xa8\xa8\xb9\xae\x88\xb5\xb1\xb9\x86\xb3\xb2\xb9\xdc\x19\x88\xc5\xcb\x0d\x16\x71\xbf",
        // "%02X:" / M(Xor4) / S(232) / L(5)
        "\xa5\xb0\xb2\xd8\xba\x80\x0e\x9d\x3c\x11\xee\x55\x42\x30\x87\x18",
        // "CFDataGetBytePtr" / M(Xor1) / S(250) / L(16)
        "\xb9\xbc\xbe\x9b\x8e\x9b\xbd\x9f\x8e\xb8\x83\x8e\x9f\xaa\x8e\x88\xfa",
        // "d2i_PKCS7_bio" / M(Xor2) / S(204) / L(13)
        "\xb8\xee\xb5\x83\x8c\x97\x9f\x8f\xeb\x83\xbe\xb5\xb3\xdc\x40\x11",
        // "CFDictionaryAddValue" / M(Xor2) / S(252) / L(20)
        "\xaa\xaf\xad\x80\x8a\x9d\x80\x86\x87\x88\x9b\x90\xa8\x8d\x8d\xbf\x88\x85\x9c\x8c\xe9",
        // "" / M(None) / S(0) / L(0)
        "\x04\x2f\x15\xd3\x5a\x73\x5e\xe9\xdf\xd8\x4d\x8e\xb3\xb8\x2b\x3e\xe3\x57\xdc\xd0\xc2\x33\xb4\x6f\xf0\x52\x34\x46\xb4\xe0\xf3\x98",
        // "SHA1" / M(Rot) / S(75) / L(4)
        "\x9e\x93\x8c\x7c\x4b\x4e\x2b\x31\xbb\x52\xa6\x1d\x9c\xb0\xda\x95",
        // "Contents/_MASReceipt" / M(Xor2) / S(201) / L(20)
        "\x9f\xb3\xb2\xa8\xb9\xb2\xa8\xaf\xf3\x83\x91\x9d\x8f\x8e\xb9\xbf\xb9\xb5\xac\xa8\xdc",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor2) / S(163) / L(54)
        "\xbb\xc7\xed\xe7\xe0\xf1\xf9\xbb\xd8\xfd\xf6\xe6\xf5\xe6\xed\xbb\xd2\xe6\xf5\xf9\xf1\xe3\xfb\xe6\xff\xe7\xbb\xc7\xf1\xf7\xe1\xe6\xfd\xe0\xed\xba\xf2\xe6\xf5\xf9\xf1\xe3\xfb\xe6\xff\xbb\xc7\xf1\xf7\xe1\xe6\xfd\xe0\xed\x94",
        // "_MASReceipt/receipt" / M(Xor1) / S(234) / L(19)
        "\xb5\xa7\xab\xb9\xb8\x8f\x89\x8f\x83\x9a\x9e\xc5\x98\x8f\x89\x8f\x83\x9a\x9e\xea",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(112) / L(23)
        "\x4f\x70\x65\x6e\x53\x53\x4c\x5f\x61\x64\x64\x5f\x61\x6c\x6c\x5f\x64\x69\x67\x65\x73\x74\x73\x00\x88\x1f\xf1\xa8\xda\x49\xf8\xb2",
        // "CFReadStreamOpen" / M(Xor2) / S(219) / L(16)
        "\x89\x8c\x98\xaf\xab\xae\x99\xbe\xb8\xaf\xab\xa7\x85\xba\xaf\xa4\xca",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xb2\x7c\x75\x3f\x6e\xdc\xb9\xb4\x49\x0e\xcc\xba\x6f\xd0\x1c\x07\x8a\xbb\x55\x93\x68\xd9\x21\xdc\x1f\xb4\x2b\x5c\xce\x04\x79",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(50) / L(59)
        "\x40\x47\x4c\x47\x33\x4c\x43\x34\x4c\x40\x40\x4c\x44\x35\x4c\x43\x4f\x4c\x45\x37\x4c\x46\x4e\x4c\x30\x30\x4c\x43\x4e\x4c\x32\x47\x4c\x42\x37\x4c\x33\x44\x4c\x44\x42\x4c\x43\x44\x4c\x32\x47\x4c\x4f\x4e\x4c\x32\x30\x4c\x40\x35\x4c\x40\x46\x76\x7c\x54\x22\x1e\xad\x2c\x58\x01",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(230) / L(37)
        "\xb5\x83\x85\xad\x83\x9f\x85\x8e\x87\x8f\x88\xb5\x83\x87\x94\x85\x8e\xa5\x94\x83\x87\x92\x83\xa0\x94\x89\x8b\xa7\x92\x92\x94\x8f\x84\x93\x92\x83\x95\xe6",
        // "2.0.5" / M(Rot) / S(91) / L(5)
        "\x8d\x89\x8b\x89\x90\x5b\x3b\x4e\xaf\xdd\xd5\x5e\x03\x3f\x15\xe6",
        // "sel_registerName" / M(Xor4) / S(252) / L(16)
        "\xcf\xd9\xd0\xe3\xce\xd9\xdb\xd5\xcf\xc8\xd9\xce\xf2\xdd\xd1\xd9\xbc",
        // "kSecMatchSearchList" / M(Xor2) / S(135) / L(19)
        "\xf8\xc0\xf6\xf0\xde\xf2\xe7\xf0\xfb\xc0\xf6\xf2\xe1\xf0\xfb\xdf\xfa\xe0\xe7\x93",
        // "" / M(None) / S(0) / L(0)
        "\x34\xe2\xf6\x28\xe3\x5d\x44\x5d\x49\x2a\xb6\x0a\x61\x60\xa0\xf3\xba\x88\x9f\x71\x54\xb7\x0e\x33\x02\x0c\xec\xd0\xa4\x16\x8c\xfd",
        // "BIO_write" / M(Xor4) / S(51) / L(9)
        "\x72\x79\x7f\x6f\x47\x42\x59\x44\x55\x30\x05\x24\xae\xdd\x8b\xfd",
        // "CFEqual" / M(Rot) / S(228) / L(7)
        "\x27\x2a\x29\x55\x59\x45\x50\xe4\x3b\x92\xcb\xcb\x08\xb6\x3d\x34",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(195) / L(32)
        "\x9b\x9b\x9b\x9b\xc5\xcf\xc5\xaf\xaf\xc5\xcf\xc5\x86\x86\xc5\xb6\xc5\xaa\xaa\xc5\xd8\xc5\x8f\x8f\xc5\xd8\xc5\x91\x91\xc5\xb8\xc5\xe2",
        // "CFBundleGetIdentifier" / M(Xor4) / S(223) / L(21)
        "\x69\x6c\x68\x5f\x44\x4e\x46\x4f\x6d\x4f\x5e\x63\x4e\x4f\x44\x5e\x43\x4c\x43\x4f\x58\x2a",
        // "CFBundleCopyBundleURL" / M(Rot) / S(190) / L(21)
        "\x01\x04\x00\x33\x2c\x22\x2a\x23\x01\x2d\x2e\x37\x00\x33\x2c\x22\x2a\x23\x13\x10\x0a\xbe",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(46) / L(16)
        "\x4d\x1c\x47\x71\x6f\x7d\x60\x1f\x71\x67\x60\x7a\x6b\x69\x6b\x7c\x2e",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(150) / L(23)
        "\x93\x8b\x92\xa5\xa3\xa5\xa9\xb0\xb4\x92\xa5\xa6\xb2\xa5\xb3\xa8\x92\xa5\xb1\xb5\xa5\xb3\xb4\xc0\xed\x9a\xf8\x68\xeb\xbf\xf0\xe8",
        // "com.treasurebox.gear" / M(Xor4) / S(100) / L(20)
        "\x57\x5b\x59\x1a\x40\x46\x51\x55\x47\x41\x46\x51\x56\x5b\x4c\x1a\x53\x51\x55\x46\x34",
        // "CFDictionaryGetValue" / M(Xor1) / S(155) / L(20)
        "\xd8\xdd\xdf\xf2\xf8\xef\xf2\xf4\xf5\xfa\xe9\xe2\xdc\xfe\xef\xcd\xfa\xf7\xee\xfe\x9b",
        // "CFStringCreateWithBytes" / M(Xor2) / S(124) / L(23)
        "\x1f\x1a\x0f\x28\x2e\x35\x32\x3b\x1f\x2e\x39\x3d\x28\x39\x0b\x35\x28\x34\x1e\x25\x28\x39\x2f\x5c\x22\xf9\x86\x39\x71\x15\x92\xe5",
        // "SHA1" / M(Xor2) / S(137) / L(4)
        "\xca\xd1\xd8\xa8\x99\x37\x74\xa4\x3a\x59\xc0\x8b\x06\x58\x51\x1b",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x6e\x6a\x7f\x65\x0f\xdf\x0a\xbf\xf8\x90\x82\xab\x67\xe0\xf3\x12\xff\x43\x93\x82\x06\x01\xf3\x20\xc7\xd0\x8a\x39\x40\xe5\x87",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(180) / L(59)
        "\xc6\xc1\xca\xc1\xb5\xca\xc5\xb2\xca\xc6\xc6\xca\xc2\xb3\xca\xc5\xc9\xca\xc3\xb1\xca\xc0\xc8\xca\xb6\xb6\xca\xc5\xc8\xca\xb4\xc1\xca\xc4\xb1\xca\xb5\xc2\xca\xc2\xc4\xca\xc5\xc2\xca\xb4\xc1\xca\xc9\xc8\xca\xb4\xb6\xca\xc6\xb3\xca\xc6\xc0\xf0\x2a\xa5\xab\x0f\xda\xb4\xe5\x10",
        // "sk_value" / M(Xor4) / S(210) / L(8)
        "\x53\x4b\x7f\x56\x41\x4c\x55\x45\x20\xfb\x30\xb8\x60\x33\xcb\x92",
        // "CFReadStreamCreateWithFile" / M(Rot) / S(43) / L(26)
        "\x6e\x71\x7d\x90\x8c\x8f\x7e\x9f\x9d\x90\x8c\x98\x6e\x9d\x90\x8c\x9f\x90\x82\x94\x9f\x93\x71\x94\x97\x90\x2b\xb7\x27\x64\x0e\xa5\x29\x6a\xf0",
        // "CFDateCompare" / M(Xor4) / S(4) / L(13)
        "\x03\x06\x04\x21\x34\x25\x03\x2f\x2d\x30\x21\x32\x25\x40\xbb\xe7",
        // "PKCS7_get0_signers" / M(Xor3) / S(248) / L(18)
        "\x5b\x40\x48\x58\x3c\x54\x6c\x6e\x7f\x3b\x54\x78\x62\x6c\x65\x6e\x79\x78\x0b",
        // "CFArrayAppendValue" / M(Xor1) / S(115) / L(18)
        "\x30\x35\x32\x01\x01\x12\x0a\x32\x03\x03\x16\x1d\x17\x25\x12\x1f\x06\x16\x73",
        // "kSecMatchSubjectContains" / M(Rot) / S(206) / L(24)
        "\x39\x21\x33\x31\x1b\x2f\x42\x31\x36\x21\x43\x30\x38\x33\x31\x42\x11\x3d\x3c\x42\x2f\x37\x3c\x41\xce\x18\x47\xce\x5d\xe9\x47\x9c\x1a",
        // "CFDateCreate" / M(Xor2) / S(176) / L(12)
        "\xe3\xe6\xe4\xc1\xd4\xc5\xe3\xd2\xc5\xc1\xd4\xc5\xa0\x61\x54\x63",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x9c\xc9\xbf\xb1\x35\x84\x2c\x73\x15\xdb\x48\xc9\x0e\x0a\xa0\x26\xb9\x9b\x0c\xad\x5f\x65\xb2\xcd\x3e\x2c\x82\x00\x52\x56\xaa",
        // "CFDataCreate" / M(Rot) / S(95) / L(12)
        "\xa2\xa5\xa3\xc0\xd3\xc0\xa2\xd1\xc4\xc0\xd3\xc4\x5f\x0e\x81\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x28\x46\xe6\xa7\x17\x87\x24\x8b\x40\xc0\x54\xa8\x14\x8a\x32\x21\xe2\xb6\xcd\x63\x5b\xbd\x5a\xd4\xb5\x11\x8f\xfd\x11\xee\xa6\xec",
        // "" / M(None) / S(0) / L(0)
        "\xb1\xec\xfb\x5d\x6a\x2a\x3f\x1b\xf6\xc7\x1d\xb7\xb3\x26\xee\x95\x67\xc2\x4c\x3e\x18\xc5\xc2\xe3\xeb\xba\x1c\xcd\xe3\x66\x06\x70",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(81) / L(26)
        "\x12\x17\x03\x34\x30\x35\x02\x25\x23\x34\x30\x3c\x12\x23\x34\x30\x25\x34\x06\x38\x25\x39\x17\x38\x3d\x34\x51\xd2\xf0\x65\x4a\x3b\x0e\xd5\x96",
        // "kSecReturnRef" / M(Rot) / S(72) / L(13)
        "\xb3\x9b\xad\xab\x9a\xad\xbc\xbd\xba\xb6\x9a\xad\xae\x48\x62\x5d",
        // "PKCS7_verify" / M(Xor1) / S(207) / L(12)
        "\x9f\x84\x8c\x9c\xf8\x90\xb9\xaa\xbd\xa6\xa9\xb6\xcf\x06\x18\x99",
        // "SHA1_Init" / M(Xor3) / S(87) / L(9)
        "\x34\x2f\x26\x56\x38\x2e\x09\x0e\x13\x67\x8a\x9c\x53\x8b\x62\x5d",
        // "" / M(None) / S(0) / L(0)
        "\x04\xb4\xb7\x39\x6b\xd4\x73\x2a\x78\xc2\xb9\x5d\x3b\xdc\xae\xb8\xa6\xa4\xc8\xa2\x11\xf1\x03\xc3\xf0\xcb\x11\xe5\xbc\x81\xea\x43",
        // "OBJ_txt2obj" / M(Xor1) / S(0) / L(11)
        "\x4f\x42\x4a\x5f\x74\x78\x74\x32\x6f\x62\x6a\x00\xe3\xd4\x93\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x23\x23\x84\xdb\x11\xe7\x93\x02\x87\x63\x1c\xc6\x62\x9e\x11\x1d\x00\x5d\x0d\xbb\x7c\xf3\x8d\x0f\xba\x25\xe9\xb7\xa7\x5c\x00\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x12\xd6\x5c\x08\xe9\x25\xf4\x69\x01\x82\xd3\xba\xa6\xb1\xa1\x77\x4f\x38\x6b\x42\xb7\x37\xab\xe2\x2e\x16\xb7\x12\xaf\x24\xbb\x86",
        // "_MASReceipt/receipt" / M(Rot) / S(67) / L(19)
        "\xa2\x90\x84\x96\x95\xa8\xa6\xa8\xac\xb3\xb7\x72\xb5\xa8\xa6\xa8\xac\xb3\xb7\x43",
        // "" / M(None) / S(0) / L(0)
        "\x85\x2e\x92\xfd\x5f\xa1\x97\x44\x28\x83\x0a\xfb\xc4\x98\xe8\x87\xf9\x71\xb8\x47\xb3\x16\xe9\xf4\xe2\x18\x84\x26\xd5\x8d\x91\x8a",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(54) / L(29)
        "\x7b\x53\x56\x44\x69\x60\x75\x54\x79\x73\x64\x79\x7f\x7e\x71\x62\x69\x5b\x75\x69\x53\x71\x7c\x7c\x52\x71\x73\x7b\x63\x10\x13\x23\x1c\xe3\xbc\xb3\x57\x83",
        // "exit" / M(Xor2) / S(127) / L(4)
        "\x0a\x17\x06\x1b\x6f\x0c\x76\x7e\x47\xb0\xf9\x05\x5d\x52\x11\x10",
        // "CFDateFormatterSetProperty" / M(Xor3) / S(177) / L(26)
        "\x97\x92\x90\xb5\xa0\xb1\x92\xbb\xa6\xb9\xb5\xa0\xa0\xb1\xa6\x87\xb1\xa0\x84\xa6\xbb\xa4\xb1\xa6\xa0\xad\xd4\x1f\x64\xd2\x5c\x33\x3b\x07\x9c",
        // "CFBundleGetMainBundle" / M(Xor1) / S(133) / L(21)
        "\xc6\xc3\xc7\xf0\xeb\xe1\xe9\xe0\xc2\xe0\xf1\xc8\xe4\xec\xeb\xc7\xf0\xeb\xe1\xe9\xe0\x85",
        // "" / M(None) / S(0) / L(0)
        "\xe7\x76\x66\x75\xd9\x17\xaf\x35\xf3\xde\x9a\x48\x30\xb3\x68\xcc\xc7\xe5\x11\xf2\x3a\x56\xb6\xbc\xb1\x27\x6e\x40\x53\x52\x93\xac",
        // "EVP_get_digestbyname" / M(Xor2) / S(55) / L(20)
        "\x67\x74\x72\x7d\x45\x47\x56\x7d\x46\x4b\x45\x47\x51\x56\x40\x5b\x4c\x43\x4f\x47\x22",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor3) / S(163) / L(37)
        "\x9a\xac\xaa\x82\xac\xb0\xaa\xa1\xa8\xa0\xa7\x9a\xac\xa8\xbb\xaa\xa1\x8a\xbb\xac\xa8\xbd\xac\x8f\xbb\xa6\xa4\x88\xbd\xbd\xbb\xa0\xab\xbc\xbd\xac\xba\xc9",
        // "BIO_free" / M(Xor3) / S(94) / L(8)
        "\x2c\x27\x21\x31\x08\x1c\x0b\x0b\x6e\xe1\x7c\x11\x1a\x94\xc8\x8e",
        // "en0" / M(Xor1) / S(188) / L(3)
        "\xd9\xd2\x8c\xbc\xd7\xf5\x50\x17\xda\x97\xa8\xaa\xb6\x57\xbb\xc7",
        // "EVP_MD_CTX_init" / M(Xor1) / S(83) / L(15)
        "\x16\x05\x03\x0c\x1e\x17\x0c\x10\x07\x0b\x0c\x3a\x3d\x3a\x27\x53",
        // "CFBundleVersion" / M(Xor3) / S(58) / L(15)
        "\x09\x0c\x08\x3f\x24\x2e\x26\x2f\x1c\x2f\x38\x39\x23\x25\x24\x4a",
        // "CFStringCompare" / M(Xor2) / S(182) / L(15)
        "\xe5\xe0\xf5\xd2\xd4\xcf\xc8\xc1\xe5\xc9\xcb\xd6\xc7\xd4\xc3\xa6",
        // "Contents" / M(Xor2) / S(181) / L(8)
        "\xe6\xca\xcb\xd1\xc0\xcb\xd1\xd6\xa5\x85\x5b\x00\x1b\x66\x03\x94",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x6d\x60\xd3\xeb\x66\x3f\xd0\x10\xe5\xf5\xab\xe0\x59\x1c\x38\x82\x41\x29\x49\xb8\x16\x21\x59\x22\x00\x3a\x29\xde\x85\xee\x7d",
        // "" / M(None) / S(0) / L(0)
        "\x9f\x96\x09\x20\xcf\x4f\xb7\x88\xeb\xa9\x16\x98\xda\x18\xc0\x74\x3d\xa5\xb2\x30\x32\xf9\x38\xca\x39\xc0\x4e\x09\x42\x0b\x53\x0c",
        // "alloc" / M(Rot) / S(228) / L(5)
        "\x45\x50\x50\x53\x47\xe4\x4a\xa7\x87\x59\x72\xeb\xe8\xa4\xb9\xde",
        // "CFURLCreateFromFileSystemRepresentation" / M(Rot) / S(6) / L(39)
        "\x49\x4c\x5b\x58\x52\x49\x78\x6b\x67\x7a\x6b\x4c\x78\x75\x73\x4c\x6f\x72\x6b\x59\x7f\x79\x7a\x6b\x73\x58\x6b\x76\x78\x6b\x79\x6b\x74\x7a\x67\x7a\x6f\x75\x74\x06\xdb\xe1\x0f\x8a\xaf\x31\x1d\x48",
        // "" / M(None) / S(0) / L(0)
        "\x1e\x98\x5f\x3e\xbe\xbe\xbc\x18\x15\x23\x51\x29\x0e\xed\x8e\xb2\xad\x82\x19\x27\xd6\xd2\xce\xb5\x2a\x2e\x93\xae\x85\x37\x28\x11",
        // "CFDictionarySetValue" / M(Rot) / S(212) / L(20)
        "\x17\x1a\x18\x3d\x37\x48\x3d\x43\x42\x35\x46\x4d\x27\x39\x48\x2a\x35\x40\x49\x39\xd4",
        // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(30) / L(35)
        "\x7b\x7e\x7c\x59\x4c\x5d\x7e\x57\x4a\x55\x59\x4c\x4c\x5d\x4a\x7b\x4a\x5d\x59\x4c\x5d\x7c\x59\x4c\x5d\x7e\x4a\x57\x55\x6b\x4c\x4a\x51\x56\x5f\x38",
        // "kSecMatchSearchList" / M(Rot) / S(120) / L(19)
        "\xe3\xcb\xdd\xdb\xc5\xd9\xec\xdb\xe0\xcb\xdd\xd9\xea\xdb\xe0\xc4\xe1\xeb\xec\x78",
        // "BIO_s_mem" / M(Xor2) / S(155) / L(9)
        "\xc9\xc2\xc4\xd4\xf8\xd4\xe6\xee\xe6\x8b\x1d\xe9\xc1\x69\x4d\x6e",
        // "setDelegate:" / M(Xor1) / S(11) / L(12)
        "\x78\x6e\x7f\x4f\x6e\x67\x6e\x6c\x6a\x7f\x6e\x31\x0b\xbf\xb2\x2b",
        // "NSApplicationMain" / M(Xor3) / S(39) / L(17)
        "\x77\x6a\x78\x49\x49\x55\x50\x5a\x58\x4d\x50\x56\x57\x74\x58\x50\x57\x39",
        // "" / M(None) / S(0) / L(0)
        "\x29\xf4\x81\x35\x76\x78\xb0\xa1\xf0\xce\x24\x59\xfb\xb5\x8d\xa2\x2f\x36\xd2\x6e\xf8\x63\xc8\x1b\x75\xb5\x82\xff\x35\xf7\x10\xf0",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Rot) / S(144) / L(43)
        "\xd3\xd6\xe5\xe2\xdc\xd3\x02\xf5\xf1\x04\xf5\xe7\xf9\x04\xf8\xd6\xf9\xfc\xf5\xe3\x09\x03\x04\xf5\xfd\xe0\xf1\x04\xf8\xe2\xf5\xfc\xf1\x04\xf9\x06\xf5\xe4\xff\xd2\xf1\x03\xf5\x90\xf8\xa0\x4b\x9d\xfe\x82\x9a\x72",
        // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(136) / L(35)
        "\x63\x66\x73\x54\x52\x49\x4e\x47\x67\x45\x54\x66\x49\x4c\x45\x73\x59\x53\x54\x45\x4d\x72\x45\x50\x52\x45\x53\x45\x4e\x54\x41\x54\x49\x4f\x4e\x20",
        // "CFStringCompare" / M(Rot) / S(62) / L(15)
        "\x81\x84\x91\xb2\xb0\xa7\xac\xa5\x81\xad\xab\xae\x9f\xb0\xa3\x3e",
        // "" / M(None) / S(0) / L(0)
        "\x48\xc7\xb1\xbc\x97\xf3\xca\x21\x8e\x2e\xed\x0f\xc9\xe0\x39\x0e\xe4\xaa\x0e\x7a\x6b\xa8\x9c\xd7\xb7\xba\x2f\xdf\xa2\x60\xe5\x82",
        // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(69) / L(29)
        "\xb0\x88\x8b\x99\xbe\xb5\xaa\x89\xae\xa8\xb9\xae\xb4\xb3\xa6\xb7\xbe\x90\xaa\xbe\x88\xa6\xb1\xb1\x87\xa6\xa8\xb0\xb8\x45\xa4\x9a\x60\x90\xdd\x02\x67\xf4",
        // "objc_msgSend" / M(Xor1) / S(24) / L(12)
        "\x77\x7a\x72\x7b\x47\x75\x6b\x7f\x4b\x7d\x76\x7c\x18\x56\xda\x25",
        // "" / M(None) / S(0) / L(0)
        "\x0c\xd3\x1c\x50\xa1\x30\x5e\x5b\xd9\x7a\xec\xe8\x45\x6e\x37\x94\x30\x99\x81\xfe\xa0\x88\xa4\xd1\xec\xee\x89\xc1\xd2\xf4\xf6\x79",
        // "" / M(None) / S(0) / L(0)
        "\x4c\x24\x3c\xf0\x55\xd3\x33\x2d\xb6\x72\x39\x57\xa0\xe5\xe4\xa9\x5b\xe6\x1e\x88\x40\x36\x46\xff\xfc\xab\x98\x3e\x03\xe8\xac\xe8",
        // "CFDataGetBytePtr" / M(Xor1) / S(125) / L(16)
        "\x3e\x3b\x39\x1c\x09\x1c\x3a\x18\x09\x3f\x04\x09\x18\x2d\x09\x0f\x7d",
        // "kSecClassCertificate" / M(Xor4) / S(225) / L(20)
        "\x1e\x26\x10\x16\x36\x19\x14\x06\x06\x36\x10\x07\x01\x1c\x13\x1c\x16\x14\x01\x10\x75",
        // "kSecClassCertificate" / M(Rot) / S(151) / L(20)
        "\x02\xea\xfc\xfa\xda\x03\xf8\x0a\x0a\xda\xfc\x09\x0b\x00\xfd\x00\xfa\xf8\x0b\xfc\x97",
        // "SecKeychainOpen" / M(Xor1) / S(191) / L(15)
        "\xec\xda\xdc\xf4\xda\xc6\xdc\xd7\xde\xd6\xd1\xf0\xcf\xda\xd1\xbf",
        // "sha1" / M(Xor3) / S(162) / L(4)
        "\xc1\xda\xd3\x83\xb2\xc4\x99\xb8\x2f\x5f\xbd\x97\x11\x87\x4f\x4a",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(201) / L(66)
        "\xf8\x1c\x42\x3c\x3d\x2e\x36\xf8\x15\x32\x2b\x3b\x2a\x3b\x42\xf8\x0f\x3b\x2a\x36\x2e\x40\x38\x3b\x34\x3c\xf8\x0c\x38\x3b\x2e\x0f\x38\x3e\x37\x2d\x2a\x3d\x32\x38\x37\xf7\x2f\x3b\x2a\x36\x2e\x40\x38\x3b\x34\xf8\x0c\x38\x3b\x2e\x0f\x38\x3e\x37\x2d\x2a\x3d\x32\x38\x37\xc9",
        // "sk_value" / M(Xor1) / S(179) / L(8)
        "\xc0\xd8\xec\xc5\xd2\xdf\xc6\xd6\xb3\x72\x40\x87\xb5\x5f\x0e\x6b",
        // "CFArrayGetCount" / M(Xor1) / S(152) / L(15)
        "\xdb\xde\xd9\xea\xea\xf9\xe1\xdf\xfd\xec\xdb\xf7\xed\xf6\xec\x98",
        // "" / M(None) / S(0) / L(0)
        "\x08\xfe\x81\x92\xdf\x73\xf1\x46\xaa\x66\x4e\x1e\x71\x0a\x9a\x27\xa9\xd0\x4f\x4b\x64\xc4\xac\xb6\x34\xbd\xa7\x69\x59\x99\x26\xa8",
        // "" / M(None) / S(0) / L(0)
        "\x97\xc2\xfd\xf4\xba\x1b\x54\x7b\x00\x30\x2b\x14\xb4\x01\xe5\xb7\xcd\x94\x63\xd3\x75\xcb\xae\x81\x48\xf1\x66\x16\x52\x9b\x0b\xf6",
        // "CFRelease" / M(Xor1) / S(197) / L(9)
        "\x86\x83\x97\xa0\xa9\xa0\xa4\xb6\xa0\xc5\x6f\x5b\xdd\xac\xd0\xde",
        // "d2i_PKCS7_bio" / M(Rot) / S(86) / L(13)
        "\xba\x88\xbf\xb5\xa6\xa1\x99\xa9\x8d\xb5\xb8\xbf\xc5\x56\x15\xf9",
        // "" / M(None) / S(0) / L(0)
        "\x61\xc6\xbe\x3f\x3d\xfd\xa6\xab\x85\xa3\xe3\x13\x9a\x90\x39\xcd\x54\x3b\xeb\x8c\x53\x03\x7e\xc1\x96\x31\x23\x60\x1d\x70\x73\x85",
        // "receipt" / M(Xor1) / S(228) / L(7)
        "\x96\x81\x87\x81\x8d\x94\x90\xe4\x63\x7e\x5f\xf8\x02\x24\x57\x59",
        // "BIO_new" / M(Xor3) / S(27) / L(7)
        "\x69\x62\x64\x74\x45\x4e\x5c\x2b\xc4\xe9\xab\xef\x94\xb6\x4e\xb6",
        // "ASN1_INTEGER_free" / M(Rot) / S(163) / L(17)
        "\xe4\xf6\xf1\xd4\x02\xec\xf1\xf7\xe8\xea\xe8\xf5\x02\x09\x15\x08\x08\xa3",
        // "en0" / M(Xor3) / S(72) / L(3)
        "\x3d\x36\x68\x58\x84\x67\x4e\x70\xde\x2c\xc8\x5b\x3d\xe3\x4f\x67",
        // "" / M(None) / S(0) / L(0)
        "\x5a\xfa\xf7\x7a\x19\xd9\x66\x73\x49\xa6\x02\xee\x79\xd0\x3c\x95\x89\xcc\x97\xfb\xfd\x74\xec\xa6\x16\xf3\xc6\x81\x72\xf3\x78\xd4",
        // "kSecMatchSubjectContains" / M(Xor2) / S(40) / L(24)
        "\x62\x5a\x6c\x6a\x44\x68\x7d\x6a\x61\x5a\x7c\x6b\x63\x6c\x6a\x7d\x4a\x66\x67\x7d\x68\x60\x67\x7a\x09\xd9\xa4\x79\x91\x5d\x72\x4d\xba",
        // "CFDataCreate" / M(Xor3) / S(102) / L(12)
        "\x35\x30\x32\x17\x02\x17\x35\x04\x13\x17\x02\x13\x76\xa1\x9a\xe7",
        // "" / M(None) / S(0) / L(0)
        "\xb6\xbc\x69\x62\x8a\xb0\xb2\xd6\x7d\x0c\xab\xd0\xb1\xa0\x17\x48\xd4\xc3\x19\x19\x17\xe5\x38\x73\xba\x22\x83\x13\xc4\xcc\x45\x4e",
        // "CFArrayGetCount" / M(Xor2) / S(231) / L(15)
        "\xb4\xb1\xb6\x85\x85\x96\x8e\xb0\x92\x83\xb4\x98\x82\x99\x83\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x7f\x94\x68\x0e\x35\x86\x2c\x08\x87\x3f\xa3\x9f\x5e\x86\xc3\x00\x62\x9d\xf7\xbf\x32\xf3\x42\xb5\x23\x99\x17\x22\x87\x73\x09\x38",
        // "glob" / M(Xor3) / S(103) / L(4)
        "\x10\x1b\x18\x15\x77\xe6\x85\xc9\xc4\x44\x4e\x21\xe4\x48\xac\x30",
        // "CFBundleCopyBundleURL" / M(Xor2) / S(114) / L(21)
        "\x27\x22\x26\x11\x0a\x00\x08\x01\x27\x0b\x14\x1d\x26\x11\x0a\x00\x08\x01\x31\x36\x28\x64",
        // "setjmp" / M(Xor2) / S(251) / L(6)
        "\x98\x8e\x9f\x81\x86\x9b\xeb\xf5\x4a\xac\x8b\x5e\x64\x9e\xf0\x6d",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(229) / L(14)
        "\xa7\xa1\xb9\xb1\xaa\xb8\xb4\xbc\xbb\xaa\xba\xbb\xb9\xac\xf5\x93",
        // "CFDataCreateMutable" / M(Xor4) / S(11) / L(19)
        "\x9f\x9a\x98\xbd\xa8\xbd\x9f\xae\xb9\xbd\xa8\xb9\x91\xa9\xa8\xbd\xbe\xb0\xb9\xdc",
        // "ASN1_get_object" / M(Xor3) / S(173) / L(15)
        "\xfc\xee\xf3\x8c\xe2\xda\xd8\xc9\xe2\xd2\xdf\xd7\xd8\xde\xc9\xbd",
        // "CFStringCreateWithBytes" / M(Rot) / S(225) / L(23)
        "\x24\x27\x34\x55\x53\x4a\x4f\x48\x24\x53\x46\x42\x55\x46\x38\x4a\x55\x49\x23\x5a\x55\x46\x54\xe1\x69\x98\xd7\x8d\xe7\xeb\x3b\xc9",
        // "dlopen" / M(Rot) / S(74) / L(6)
        "\xae\xb6\xb9\xba\xaf\xb8\x4a\x26\x8e\xa5\x86\xf2\x7b\x5b\x00\x7b",
        // "" / M(None) / S(0) / L(0)
        "\xea\xb7\xe0\x3f\x2b\xb7\xae\x93\x74\x1f\x20\x7a\x66\xf5\xd8\x06\x3e\xb7\x65\x35\xb8\x6c\xdf\x23\x4a\x73\x2d\x09\x06\x0b\x7b\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x99\x99\x01\x12\x97\x6c\x58\x3c\xa7\x4e\xa0\x10\x9c\x70\x9f\x0b\xfc\x70\x4f\xc4\xf5\xf8\x3c\x1e\x5b\x1f\xfe\x6f\xd4\x25\x95\x14",
        // "_MASReceipt" / M(Rot) / S(56) / L(11)
        "\x97\x85\x79\x8b\x8a\x9d\x9b\x9d\xa1\xa8\xac\x38\x85\x06\x18\x8f",
        // "" / M(None) / S(0) / L(0)
        "\x08\xf0\x11\x5f\x7d\x74\x96\x2e\x6f\x36\x8c\x80\x84\x2a\xf8\x53\xe0\x4d\x24\xdb\x91\xd6\xbe\x8c\xbe\x7b\xf2\x86\xe6\xd5\x46\x26",
        // "X509_STORE_free" / M(Xor4) / S(172) / L(15)
        "\x98\xf5\xf0\xf9\x9f\x93\x94\x8f\x92\x85\x9f\xa6\xb2\xa5\xa5\xc0",
        // "CC_SHA1_Final" / M(Xor3) / S(13) / L(13)
        "\x5e\x5e\x42\x4e\x55\x5c\x2c\x42\x5b\x74\x73\x7c\x71\x1d\xf0\x14",
        // "kSecReturnRef" / M(Xor2) / S(197) / L(13)
        "\xbe\x86\xb0\xb6\x87\xb0\xa1\xa0\xa7\xbb\x87\xb0\xb3\xd5\x08\x77",
        // "SecItemCopyMatching" / M(Rot) / S(248) / L(19)
        "\x4b\x5d\x5b\x41\x6c\x5d\x65\x3b\x67\x68\x71\x45\x59\x6c\x5b\x60\x61\x66\x5f\xf8",
        // "CFStringGetFileSystemRepresentation" / M(Rot) / S(228) / L(35)
        "\x27\x2a\x37\x58\x56\x4d\x52\x4b\x2b\x49\x58\x2a\x4d\x50\x49\x37\x5d\x57\x58\x49\x51\x36\x49\x54\x56\x49\x57\x49\x52\x58\x45\x58\x4d\x53\x52\xe4",
        // "kSecMatchLimitAll" / M(Xor4) / S(143) / L(17)
        "\x65\x5d\x6b\x6d\x43\x6f\x7a\x6d\x66\x42\x67\x63\x67\x7a\x4f\x62\x62\x0e",
        // "EVP_DigestFinal" / M(Xor4) / S(80) / L(15)
        "\x45\x56\x50\x5f\x44\x69\x67\x65\x73\x74\x46\x69\x6e\x61\x6c\x00",
        // "getifaddrs" / M(Rot) / S(132) / L(10)
        "\xeb\xe9\xf8\xed\xea\xe5\xe8\xe8\xf6\xf7\x84\xd5\x31\xbb\x4e\x89",
        // "X509_STORE_add_cert" / M(Xor4) / S(160) / L(19)
        "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xe1\xe4\xe4\xdf\xe3\xe5\xf2\xf4\x80",
        // "" / M(None) / S(0) / L(0)
        "\xfd\xa6\x82\x2c\x07\x94\xd0\xbb\xfd\x6b\x88\x51\xae\x32\xd9\x72\x51\x43\x53\x36\x6b\xfc\xae\x45\xb9\x64\x33\x48\xf1\x38\xd9\xf5",
        // "CFBundleShortVersionString" / M(Rot) / S(243) / L(26)
        "\x36\x39\x35\x68\x61\x57\x5f\x58\x46\x5b\x62\x65\x67\x49\x58\x65\x66\x5c\x62\x61\x46\x67\x65\x5c\x61\x5a\xf3\xae\xb3\x72\x27\x6f\xa4\x91\xd6",
        // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(99) / L(25)
        "\x52\x4d\x51\x4d\x5b\x57\x53\x4d\x52\x52\x50\x55\x50\x56\x4d\x52\x53\x53\x4d\x55\x4d\x52\x52\x4d\x52\x63\x23\xcc\x5b\xe0\xdd\x41\xc5\x0a",
        // "sk_value" / M(Xor3) / S(237) / L(8)
        "\x8e\x96\xa2\x8b\x9c\x91\x88\x98\xfd\xeb\x61\x5a\x14\x6a\xbe\xb7",
        // "CC_SHA1_Final" / M(Xor2) / S(56) / L(13)
        "\x6b\x6b\x77\x7b\x60\x69\x19\x77\x6e\x41\x46\x49\x44\x28\x7b\xfa",
        // "kSecMatchSubjectContains" / M(Xor1) / S(196) / L(24)
        "\xaf\x97\xa1\xa7\x89\xa5\xb0\xa7\xac\x97\xb1\xa6\xae\xa1\xa7\xb0\x87\xab\xaa\xb0\xa5\xad\xaa\xb7\xc4\xdf\x83\xd8\x7c\x91\x52\xf3\x0f",
        // "" / M(None) / S(0) / L(0)
        "\xe9\xa0\xe6\x27\x08\xb4\x9a\xab\xb6\x03\x20\x37\xe8\x68\x79\xef\x1c\xb6\x01\xf0\xff\x44\x8f\x51\x68\xf5\xc2\x28\x6a\xde\x18\xeb",
        // "CFDateFormatterCreate" / M(Xor2) / S(177) / L(21)
        "\xe4\xe1\xe3\xc6\xd3\xc2\xe1\xc8\xd5\xca\xc6\xd3\xd3\xc2\xd5\xe4\xd5\xc2\xc6\xd3\xc2\xa7",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(208) / L(50)
        "\x2c\x50\x7a\x70\x77\x66\x6e\x2c\x4f\x6a\x61\x71\x62\x71\x7a\x2c\x45\x71\x62\x6e\x66\x74\x6c\x71\x68\x70\x2c\x42\x73\x73\x48\x6a\x77\x2d\x65\x71\x62\x6e\x66\x74\x6c\x71\x68\x2c\x42\x73\x73\x48\x6a\x77\x03",
        // "Contents" / M(Rot) / S(138) / L(8)
        "\xcd\xf9\xf8\xfe\xef\xf8\xfe\xfd\x8a\xc2\x4a\xab\xe8\x84\x73\xff",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(109) / L(26)
        "\x2e\x2b\x3f\x08\x0c\x09\x3e\x19\x1f\x08\x0c\x00\x2e\x1f\x08\x0c\x19\x08\x3a\x04\x19\x05\x2b\x04\x01\x08\x6d\x0f\xaf\x96\x69\x47\xfc\x55\x68",
        // "CC_SHA1_Update" / M(Xor4) / S(235) / L(14)
        "\xf3\xf3\xef\xe3\xf8\xf1\x81\xef\xe5\xc0\xd4\xd1\xc4\xd5\xb0\x71",
        // "" / M(None) / S(0) / L(0)
        "\xc2\xf5\xb0\x63\xfc\xc1\x0b\x63\xfe\x59\xb1\xcf\x0e\xcf\x0f\xc0\x9b\xdc\x2f\x76\xe4\x43\x65\x27\x46\xc5\xcd\xee\x8d\x63\x20\x2d",
        // "CFArrayCreateMutable" / M(Rot) / S(146) / L(20)
        "\xd5\xd8\xd3\x04\x04\xf3\x0b\xd5\x04\xf7\xf3\x06\xf7\xdf\x07\x06\xf3\xf4\xfe\xf7\x92",
        // "sk_free" / M(Xor4) / S(162) / L(7)
        "\x53\x4b\x7f\x46\x52\x45\x45\x20\xe5\x5f\x8b\x15\x7d\xc7\x1b\x6d",
        // "SecItemCopyMatching" / M(Xor2) / S(33) / L(19)
        "\x66\x50\x56\x7c\x41\x50\x58\x76\x5a\x45\x4c\x78\x54\x41\x56\x5d\x5c\x5b\x52\x35",
        // "alloc" / M(Xor1) / S(118) / L(5)
        "\x17\x1a\x1a\x19\x15\x76\xaa\xa9\xb1\x44\x6e\x89\x1a\x4b\x81\xd9",
        // "BIO_free" / M(Rot) / S(148) / L(8)
        "\xd6\xdd\xe3\xf3\xfa\x06\xf9\xf9\x94\x7f\x6b\x61\x7f\xcb\xd8\x66",
        // "objc_getClass" / M(Rot) / S(36) / L(13)
        "\x93\x86\x8e\x87\x83\x8b\x89\x98\x67\x90\x85\x97\x97\x24\x60\xba",
        // "CC_SHA1_Init" / M(Xor2) / S(16) / L(12)
        "\x43\x43\x5f\x53\x48\x41\x31\x5f\x49\x6e\x69\x74\x00\x14\x45\x55",
        // "CFBundleVersion" / M(Rot) / S(15) / L(15)
        "\x52\x55\x51\x84\x7d\x73\x7b\x74\x65\x74\x81\x82\x78\x7e\x7d\x0f",
        // "" / M(None) / S(0) / L(0)
        "\x9f\xa6\x9b\x53\xca\x5b\x8a\x01\xd1\x78\x59\x68\x37\xc2\x67\x8a\x79\x4f\x14\xb2\x36\x3f\x01\x0f\x5d\xd6\xb2\xbe\x5f\x24\x24\x74",
        // "SecCertificateCopyData" / M(Xor2) / S(232) / L(22)
        "\xac\x9a\x9c\xbc\x9a\x8d\x8b\x96\x99\x96\x9c\x9e\x8b\x9a\xbc\x90\x8f\x86\xbb\x9e\x8b\x9e\xff",
        // "CFArrayGetCount" / M(Rot) / S(24) / L(15)
        "\x5b\x5e\x59\x8a\x8a\x79\x91\x5f\x7d\x8c\x5b\x87\x8d\x86\x8c\x18",
        // "%02x:" / M(Xor4) / S(212) / L(5)
        "\x65\x70\x72\x38\x7a\x40\xe2\xfa\xe4\x26\x19\xd9\xbc\xa2\xbd\xf2",
        // "dlsym" / M(Xor2) / S(134) / L(5)
        "\xf2\xfa\xe5\xef\xfb\x96\x8d\x9d\xa0\x27\xab\x9b\x04\xa5\x6c\x4c",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(38) / L(59)
        "\x5c\x5b\x50\x5b\x0f\x50\x5f\x08\x50\x5c\x5c\x50\x58\x09\x50\x5f\x53\x50\x59\x0b\x50\x5a\x52\x50\x0c\x0c\x50\x5f\x52\x50\x0e\x5b\x50\x5e\x0b\x50\x0f\x58\x50\x58\x5e\x50\x5f\x58\x50\x0e\x5b\x50\x53\x52\x50\x0e\x0c\x50\x5c\x09\x50\x5c\x5a\x6a\x2f\x9a\x42\x90\xe7\x31\x76\x6d",
        // "kSecClass" / M(Rot) / S(170) / L(9)
        "\x15\xfd\x0f\x0d\xed\x16\x0b\x1d\x1d\xaa\x3d\x2e\xf0\x99\x88\xaa",
        // "init" / M(Xor2) / S(51) / L(4)
        "\x4a\x4d\x4a\x57\x23\xc6\x0b\x6f\x8d\xf8\x70\xf2\x67\x26\x76\x85",
        // "" / M(None) / S(0) / L(0)
        "\x34\xfe\xc0\x0c\x2c\x50\xda\xee\x79\x89\xcc\x7d\x1d\x3d\x98\x92\x38\xff\xea\x8d\x75\x9b\xda\xdd\x26\xfa\x3e\x51\x0a\x18\xcc\x1f",
        // "EVP_MD_CTX_init" / M(Xor4) / S(172) / L(15)
        "\x85\x96\x90\x9f\x8d\x84\x9f\x83\x94\x98\x9f\xa9\xae\xa9\xb4\xc0",
        // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(191) / L(24)
        "\xa3\xa6\xa1\x82\x93\x8f\x8c\x95\x94\x85\xb4\x89\x8d\x85\xa7\x85\x94\xa3\x95\x92\x92\x85\x8e\x94\xe0\x36\x27\x8a\x58\x0b\xad\xcb\x93",
        // "" / M(None) / S(0) / L(0)
        "\x49\x1a\x30\x2c\xcc\xa1\xdb\xa3\x0d\x29\xd3\xb9\xf4\xe8\xb9\x91\xa9\x16\xc7\x7c\xfa\x19\xd6\xb9\xf4\xf7\x6e\xfe\xb1\xe0\x6a\x43",
        // "2.0.5" / M(Xor1) / S(35) / L(5)
        "\x11\x0d\x13\x0d\x16\x23\x79\xae\x60\x4e\x2b\xf8\x6c\xc4\xe7\xae",
        // "glob_b" / M(Xor1) / S(12) / L(6)
        "\x6b\x60\x63\x6e\x53\x6e\x0c\xdb\xe4\x1f\x7a\x93\x6a\xb0\xf0\x1d",
        // "BIO_write" / M(Xor3) / S(186) / L(9)
        "\x88\x83\x85\x95\xbd\xb8\xa3\xbe\xaf\xca\x3e\xda\xd6\x79\xc7\x79",
        // "EVP_get_digestbyname" / M(Xor4) / S(134) / L(20)
        "\xbb\xa8\xae\xa1\x99\x9b\x8a\xa1\x9a\x97\x99\x9b\x8d\x8a\x9c\x87\x90\x9f\x93\x9b\xfe",
        // "X509_STORE_add_cert" / M(Xor4) / S(255) / L(19)
        "\xb4\xd9\xdc\xd5\xb3\xbf\xb8\xa3\xbe\xa9\xb3\x8d\x88\x88\xb3\x8f\x89\x9e\x98\xec",
        // "CFDateFormatterSetFormat" / M(Rot) / S(226) / L(24)
        "\x25\x28\x26\x43\x56\x47\x28\x51\x54\x4f\x43\x56\x56\x47\x54\x35\x47\x56\x28\x51\x54\x4f\x43\x56\xe2\x0f\xf3\x1d\x11\xe8\x22\xd4\xac",
        // "X509_digest" / M(Xor3) / S(78) / L(11)
        "\x06\x6b\x6e\x67\x01\x3a\x37\x39\x3b\x2d\x2a\x5e\x00\xd2\x9e\x68",
        // "%02X" / M(Xor1) / S(152) / L(4)
        "\xbd\xa8\xaa\xc0\x98\x99\xd4\xf8\xd2\x32\xc1\xa1\x89\x26\x57\x77",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(89) / L(22)
        "\x76\x2c\x2a\x2b\x76\x35\x30\x3b\x76\x35\x30\x3b\x36\x3b\x33\x3a\x77\x3d\x20\x35\x30\x3b\x59",
        // "OpenSSL_add_all_digests" / M(Xor3) / S(104) / L(23)
        "\xc7\xf8\xed\xe6\xdb\xdb\xc4\xd7\xe9\xec\xec\xd7\xe9\xe4\xe4\xd7\xec\xe1\xef\xed\xfb\xfc\xfb\x88\x60\x43\x81\xd3\xe6\x11\x47\xc5",
        // "CFDataAppendBytes" / M(Xor2) / S(99) / L(17)
        "\x32\x37\x35\x10\x05\x10\x30\x01\x01\x14\x1f\x15\x33\x08\x05\x14\x02\x71",
        // "start" / M(Xor4) / S(171) / L(5)
        "\xc3\xc4\xd1\xc2\xc4\xb0\x91\xfd\x96\xdf\xdc\xd4\x29\x64\xb9\xbf",
        // "CFDictionaryAddValue" / M(Rot) / S(198) / L(20)
        "\x09\x0c\x0a\x2f\x29\x3a\x2f\x35\x34\x27\x38\x3f\x07\x2a\x2a\x1c\x27\x32\x3b\x2b\xc6",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(244) / L(25)
        "\x55\x50\x52\x7f\x75\x62\x7f\x79\x78\x77\x64\x6f\x55\x64\x73\x77\x62\x73\x5b\x63\x62\x77\x74\x7a\x73\x16\x70\x8b\x95\xf6\xa3\x5d\xab\x5a",
        // "kSecReturnRef" / M(Xor3) / S(91) / L(13)
        "\x00\x38\x0e\x08\x39\x0e\x1f\x1e\x19\x05\x39\x0e\x0d\x6b\x53\xff",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(171) / L(29)
        "\xc0\xe8\xed\xff\xd2\xdb\xce\xef\xc2\xc8\xdf\xc2\xc4\xc5\xca\xd9\xd2\xe0\xce\xd2\xe8\xca\xc7\xc7\xe9\xca\xc8\xc0\xd8\xab\x5c\xac\x75\xfc\x9c\x96\xaa\xa7",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(175) / L(40)
        "\x99\x9e\x9e\xca\x9a\xcd\x99\x99\x9d\xcc\x9a\x96\x9c\xce\x9f\x97\xc9\xc9\x9a\x97\xcb\x9e\x9b\xce\xca\x9d\x9d\x9b\x9a\x9d\xcb\x9e\x96\x97\xcb\xc9\x99\xcc\x99\x9f\xaf\x4f\x81\x28\x91\x14\xdf\x3e\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x4f\xc8\x20\x56\xf3\x15\xe9\x2e\x17\xac\xe9\xe2\x43\x1a\x05\x83\x1b\xa4\x08\xfb\xcf\xec\x4c\x6f\xe1\x95\x96\x21\x07\x59\x6a\x5e",
        // "strlen" / M(Xor1) / S(248) / L(6)
        "\x8b\x8c\x8a\x94\x9d\x96\xf8\xb1\x93\x2b\x65\xdc\x4c\x05\x83\xf1",
        // "_MASReceipt" / M(Xor1) / S(97) / L(11)
        "\x3e\x2c\x20\x32\x33\x04\x02\x04\x08\x11\x15\x61\xea\xc3\xe3\xdb",
        // "" / M(None) / S(0) / L(0)
        "\xf5\x60\x6b\x0e\x63\xeb\xb7\xd9\x9c\x37\xe8\x0d\x39\x33\x80\xb3\x89\xd4\xef\xac\x50\x2a\x69\xe8\x04\x25\xc7\x48\xa8\xaa\xd8\x2c",
        // "" / M(None) / S(0) / L(0)
        "\x0c\x80\x93\x77\x39\x63\x52\x3a\x89\xbf\xbb\x72\xb3\x8d\xb6\xde\xa7\x75\x87\x23\x46\xa6\xaa\x50\x11\xcf\x55\xce\x55\xa8\xbd\xaf",
        // "strlen" / M(Xor1) / S(233) / L(6)
        "\x9a\x9d\x9b\x85\x8c\x87\xe9\x17\xb2\x2e\xaa\x0f\x9f\xf3\x7c\xc0",
        // "CFBundleVersion" / M(Xor3) / S(47) / L(15)
        "\x7c\x79\x7d\x4a\x51\x5b\x53\x5a\x69\x5a\x4d\x4c\x56\x50\x51\x3f",
        // "BIO_free" / M(Xor1) / S(128) / L(8)
        "\xc2\xc9\xcf\xdf\xe6\xf2\xe5\xe5\x80\x42\xe4\xa9\xec\x60\xa0\x29",
        // "" / M(None) / S(0) / L(0)
        "\xc6\x00\x9f\x5f\x22\x6c\x47\x4b\x4d\x05\x55\x64\x6f\x8d\x8e\x06\xe9\x08\xaf\xa9\x73\x69\x9d\x1c\x5d\xb6\x60\x11\x15\x16\x66\xe0",
        // "" / M(None) / S(0) / L(0)
        "\xbf\xa5\xfe\x56\x8f\x1c\x9f\x6d\xd7\xfa\xef\xbe\xf8\xeb\x3b\x4b\x52\xed\x07\x21\x9c\xfd\x11\xa2\x4c\xb1\x2c\x98\x07\xaf\x8b\xe0",
        // "SecKeychainOpen" / M(Xor4) / S(36) / L(15)
        "\x13\x25\x23\x0b\x25\x39\x23\x28\x21\x29\x2e\x0f\x30\x25\x2e\x40",
        // "EVP_MD_CTX_init" / M(Rot) / S(175) / L(15)
        "\xf4\x05\xff\x0e\xfc\xf3\x0e\xf2\x03\x07\x0e\x18\x1d\x18\x23\xaf",
        // "kSecMatchLimit" / M(Rot) / S(60) / L(14)
        "\xa7\x8f\xa1\x9f\x89\x9d\xb0\x9f\xa4\x88\xa5\xa9\xa5\xb0\x3c\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x36\x90\x70\xef\x2c\x16\x39\xb8\xaf\xcf\x56\x92\x54\x8e\x32\xe5\x1f\x49\xbc\x91\x13\x04\x62\x7d\x99\xaa\x08\x31\xee\x9a\xce\x4b",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(131) / L(24)
        "\x8b\xd1\xd7\xd6\x8b\xc8\xcd\xc6\x8b\xc8\xcd\xc6\xf7\xdd\xd7\xd0\xc1\xc9\x8a\xc0\xdd\xc8\xcd\xc6\xa4\x6c\x83\x1e\x52\xe0\x86\x51\xde",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(22) / L(24)
        "\x74\x71\x75\x42\x59\x53\x5b\x52\x62\x59\x5b\x58\x56\x53\x72\x4f\x52\x54\x42\x43\x56\x55\x5b\x52\x37\x45\x29\xde\x36\xc4\x60\x86\xf5",
        // "BIO_new" / M(Xor2) / S(171) / L(7)
        "\xf9\xf2\xf4\xe4\xd5\xde\xcc\xbb\x56\x6b\xf8\x64\x4e\x20\xf4\xf5",
        // "CC_SHA1" / M(Xor4) / S(161) / L(7)
        "\x53\x53\x4f\x43\x58\x51\x21\x10\x48\x0e\xa3\xb2\x33\x70\xa6\xd3",
        // "" / M(None) / S(0) / L(0)
        "\x13\x65\xde\x84\x6b\xcb\x61\xac\x4c\x75\xb3\xdd\x23\x55\x14\x2f\xfc\x6d\x6f\x50\x94\x5e\x1a\x2b\xba\xad\x99\xaa\xdd\x42\x01\x2d",
        // "PKCS7_get0_signers" / M(Xor1) / S(207) / L(18)
        "\x9f\x84\x8c\x9c\xf8\x90\xa8\xaa\xbb\xff\x90\xbc\xa6\xa8\xa1\xaa\xbd\xbc\xcf",
        // "CFDictionaryGetValue" / M(Xor2) / S(249) / L(20)
        "\xaf\xaa\xa8\x85\x8f\x98\x85\x83\x82\x8d\x9e\x95\xab\x89\x98\xba\x8d\x80\x99\x89\xec",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(102) / L(25)
        "\xd0\xbd\xb8\xb1\xd7\xc6\xc9\xc5\xcd\xd7\xef\xed\xfc\xd7\xfc\xed\xf0\xfc\xd7\xea\xf1\xd7\xc6\xc1\xcc\x88\x34\xc8\x60\x05\xca\x0a\x8c\xd6",
        // "CFBundleCopyBundleURL" / M(Xor4) / S(246) / L(21)
        "\x67\x62\x66\x51\x4a\x40\x48\x41\x67\x4b\x54\x5d\x66\x51\x4a\x40\x48\x41\x71\x76\x68\x24",
        // "setDelegate:" / M(Xor2) / S(215) / L(12)
        "\xb4\xa2\xb3\x83\xa2\xab\xa2\xa0\xa6\xb3\xa2\xfd\xc7\x7d\x64\x2a",
        // "Contents" / M(Rot) / S(219) / L(8)
        "\x1e\x4a\x49\x4f\x40\x49\x4f\x4e\xdb\xa0\x40\x5c\xbc\x90\x2d\x5f",
        // "" / M(None) / S(0) / L(0)
        "\xd1\x6f\xb7\xee\x43\x74\xe6\x93\xb7\xfe\x1a\xdb\xeb\xf1\xbf\xfd\xc4\x56\xf1\xde\x2a\x5f\x4c\x30\xac\x5b\x88\xb7\x1c\x51\xa8\xbe",
        // "CFStringCreateWithCString" / M(Xor4) / S(192) / L(25)
        "\xc3\xc6\xd3\xf4\xf2\xe9\xee\xe7\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xc3\xd3\xf4\xf2\xe9\xee\xe7\x80\x03\x96\xce\x72\x32\x1e\xc7\x30",
        // "Apple Root CA" / M(Xor1) / S(81) / L(13)
        "\x10\x21\x21\x3d\x34\x71\x03\x3e\x3e\x25\x71\x12\x10\x51\xa2\xb9",
        // "" / M(None) / S(0) / L(0)
        "\x5e\x4f\x0c\xb8\x05\x15\xcd\x8d\xaf\x52\x21\x1e\x08\x85\xd5\xb5\x0c\xa6\x04\x66\xce\x78\xd4\xf0\x13\x42\xe8\xe2\xd3\x09\x1b\xa5",
        // "" / M(None) / S(0) / L(0)
        "\x1e\xa5\xc6\xe0\x97\x12\xc3\xa5\xc9\x06\x54\xfb\x83\x44\x63\x80\xee\x79\xec\x1e\x50\xf7\xf1\x72\xd4\xf4\x45\x4c\x8c\x7c\x1f\x3a",
        // "" / M(None) / S(0) / L(0)
        "\x15\x94\x3b\xc3\x1e\x69\x1e\x9f\xdf\xde\x23\xeb\x11\x24\x80\xbf\x4d\xfe\x77\x61\xf8\x73\xc0\xbd\x3e\xaa\x96\x3b\xd1\xa5\xeb\x4c",
        // "sk_num" / M(Xor3) / S(70) / L(6)
        "\x25\x3d\x09\x38\x23\x3b\x56\xe0\x9a\x0f\xbb\x6d\xd0\x1b\x9d\x35",
        // "globfree" / M(Xor4) / S(244) / L(8)
        "\x27\x2c\x2f\x22\x26\x32\x25\x25\x40\xfc\x69\xa4\x5a\x28\xd2\xcb",
        // "SecCertificateCopyData" / M(Xor2) / S(37) / L(22)
        "\x61\x57\x51\x71\x57\x40\x46\x5b\x54\x5b\x51\x53\x46\x57\x71\x5d\x42\x4b\x76\x53\x46\x53\x32",
        // "CFArrayCreateMutable" / M(Xor2) / S(150) / L(20)
        "\xc0\xc5\xc2\xf1\xf1\xe2\xfa\xc0\xf1\xe6\xe2\xf7\xe6\xce\xf6\xf7\xe2\xe1\xef\xe6\x83",
        // "" / M(None) / S(0) / L(0)
        "\xec\xe3\x8c\xc8\x48\xe1\x61\x1f\xac\x59\x9d\x23\x61\x3e\xba\x7b\x0f\x64\x28\x33\x08\x2c\x16\xd3\x03\xd0\xdf\xd4\x3f\xdf\x13\x44",
        // "com.treasurebox.gear" / M(Xor2) / S(241) / L(20)
        "\x87\x8b\x89\xca\x90\x96\x81\x85\x97\x91\x96\x81\x86\x8b\x9c\xca\x83\x81\x85\x96\xe4",
        // "dlopen" / M(Xor3) / S(53) / L(6)
        "\x21\x29\x2a\x35\x20\x2b\x45\x54\x66\xd1\x75\x1e\x3c\xe7\x3e\xd2",
        // "CFDateCompare" / M(Rot) / S(201) / L(13)
        "\x0c\x0f\x0d\x2a\x3d\x2e\x0c\x38\x36\x39\x2a\x3b\x2e\xc9\x7e\x40",
        // "" / M(None) / S(0) / L(0)
        "\x89\x84\x66\xcc\x88\x06\xd5\x1f\xb2\xf5\x10\x97\xc6\x63\xa0\x0e\xe3\x95\x44\x6a\x82\x7b\x2c\x7e\xe3\x6a\xd5\x32\x89\xa1\x51\x01",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(160) / L(22)
        "\xcf\x15\x13\x12\xcf\x0c\x09\x02\xcf\x0c\x09\x02\x0f\x02\x0a\x03\xce\x04\x19\x0c\x09\x02\xa0",
        // "sk_num" / M(Rot) / S(147) / L(6)
        "\x06\xfe\xf2\x01\x08\x00\x93\x2e\x45\x65\x90\xaf\xab\xe4\x82\x31",
        // "" / M(None) / S(0) / L(0)
        "\x72\x92\x7c\x25\x1f\x15\x06\x5b\x9f\xe4\x37\xc7\x4e\x8a\xfe\xfb\x61\x25\x0c\x56\x4f\x98\x74\xf6\x38\xc9\x5a\x86\xad\x60\x1d\xa9",
        // "CFStringCreateWithCString" / M(Xor2) / S(46) / L(25)
        "\x4f\x4a\x5f\x78\x7e\x65\x62\x6b\x4f\x7e\x69\x6d\x78\x69\x5b\x65\x78\x64\x4f\x5f\x78\x7e\x65\x62\x6b\x0c\x78\x58\xbd\xc1\x05\x37\xe9\x7e",
        // "" / M(None) / S(0) / L(0)
        "\x5d\x88\xe1\x74\xe1\x7c\xfc\xd4\xa2\x49\xaa\x89\xbc\x1a\xa4\xd1\xa3\xf5\xe6\xf3\x24\xc7\xce\x02\x4d\x18\x51\xb0\x81\x8a\x34\x84",
        // "" / M(None) / S(0) / L(0)
        "\x66\x42\xf7\xc0\x74\x53\x75\x90\x03\xc7\x50\x6b\x99\x89\x99\x49\x8f\xf7\x8f\x24\x7d\x63\x8f\x0c\x0d\x2d\xf0\xb4\x35\x0e\xee\x89",
        // "" / M(None) / S(0) / L(0)
        "\x41\x38\x9d\xa1\x2e\xed\xe3\x06\x38\xbd\xb0\xbd\xf0\x76\x24\x48\x6a\xd0\x8f\x97\x53\x9d\x89\x39\x2a\x08\xab\x74\x50\x28\xd0\x1f",
        // "kCFBundleIdentifierKey" / M(Xor3) / S(165) / L(22)
        "\xd7\xff\xfa\xfe\xc9\xd2\xd8\xd0\xd9\xf5\xd8\xd9\xd2\xc8\xd5\xda\xd5\xd9\xce\xf7\xd9\xc5\xbc",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(18) / L(36)
        "\x74\x71\x75\x42\x59\x53\x5b\x52\x70\x52\x43\x61\x56\x5b\x42\x52\x71\x58\x45\x7e\x59\x51\x58\x73\x5e\x54\x43\x5e\x58\x59\x56\x45\x4e\x7c\x52\x4e\x37",
        // "." / M(Xor1) / S(95) / L(1)
        "\x71\x5f\x7b\x6c\xf8\xde\x2a\x1c\xff\x6e\xb9\x9e\x99\x57\x22\xa3",
        // "ASN1_get_object" / M(Xor1) / S(206) / L(15)
        "\x8f\x9d\x80\xff\x91\xa9\xab\xba\x91\xa1\xac\xa4\xab\xad\xba\xce",
        // "alloc" / M(Xor3) / S(199) / L(5)
        "\xb6\xbb\xbb\xb8\xb4\xd7\x1f\x7c\x3b\xf3\x09\x62\xd2\xdc\x1e\x8a",
        // "PKCS7_free" / M(Xor3) / S(58) / L(10)
        "\x1a\x01\x09\x19\x7d\x15\x2c\x38\x2f\x2f\x4a\x7d\xf6\xd3\xbd\x13",
        // "" / M(None) / S(0) / L(0)
        "\x10\x23\x3f\xc0\x72\xab\xba\xbb\x73\x04\xfd\x1a\xc7\x52\xf7\x42\x00\x6d\x31\x07\xaa\xe7\x72\x6a\x5a\x4e\xe9\x95\x71\xb6\x3d\xb5",
        // "CFNumberCreate" / M(Xor3) / S(115) / L(14)
        "\xc0\xc5\xcd\xf6\xee\xe1\xe6\xf1\xc0\xf1\xe6\xe2\xf7\xe6\x83\xde",
        // "kCFBundleIdentifierKey" / M(Xor3) / S(253) / L(22)
        "\x7f\x57\x52\x56\x61\x7a\x70\x78\x71\x5d\x70\x71\x7a\x60\x7d\x72\x7d\x71\x66\x5f\x71\x6d\x14",
        // "" / M(None) / S(0) / L(0)
        "\xe7\x6d\xa3\x40\x94\x99\x28\x39\x48\xa2\x41\xe3\x52\x81\x8e\x0a\x1e\x6f\x4b\x82\xd3\x15\x88\x9b\xd0\x5f\x91\x5e\x2d\xba\xfb\x22",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(208) / L(19)
        "\x9c\xf1\xf4\xfd\x9b\xa3\xa1\xb0\x9b\xa1\xbc\xb0\x9b\xa6\xbd\x9b\x8b\x86\x8e\xc4",
        // "" / M(None) / S(0) / L(0)
        "\xa0\x06\x58\xb9\x3d\x0b\x8f\xae\x01\xbe\x27\x16\x7f\x67\xde\xbd\xa0\x9c\x43\x93\x91\x54\xe9\x36\x86\x3d\x1a\xf5\xc8\x71\x59\x31",
        // "ASN1_OBJECT_free" / M(Xor1) / S(121) / L(16)
        "\x38\x2a\x37\x48\x26\x36\x3b\x33\x3c\x3a\x2d\x26\x1f\x0b\x1c\x1c\x79",
        // "" / M(None) / S(0) / L(0)
        "\xf5\xa2\xa6\xcd\xf6\x7e\x1e\x1c\x21\xa1\xbb\x4d\x45\x05\x05\x2c\x92\x6e\x6e\xf4\x70\xed\x48\x8c\x84\xa9\xf7\x4f\xaa\xfc\x5d\xab",
        // "SecCertificateCopyData" / M(Xor4) / S(213) / L(22)
        "\x70\x46\x40\x60\x46\x51\x57\x4a\x45\x4a\x40\x42\x57\x46\x60\x4c\x53\x5a\x67\x42\x57\x42\x23",
        // "NSApplicationMain" / M(Xor4) / S(108) / L(17)
        "\xd6\xcb\xd9\xe8\xe8\xf4\xf1\xfb\xf9\xec\xf1\xf7\xf6\xd5\xf9\xf1\xf6\x98",
        // "CFDateCreate" / M(Xor4) / S(237) / L(12)
        "\x93\x96\x94\xb1\xa4\xb5\x93\xa2\xb5\xb1\xa4\xb5\xd0\xf3\x7b\xd3",
        // "CFDataAppendBytes" / M(Xor3) / S(160) / L(17)
        "\xf1\xf4\xf6\xd3\xc6\xd3\xf3\xc2\xc2\xd7\xdc\xd6\xf0\xcb\xc6\xd7\xc1\xb2",
    };
    
    // Table for storing pointers
    static void *ReceiptValidation_Pointers[585] = {
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strcmp),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) glob),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) ASN1_OBJECT_free),
        ((void *) SHA1_Final),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) strcmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) strcmp),
        ((void *) SHA1_Final),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) EVP_DigestFinal),
        ((void *) glob_b),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) ASN1_INTEGER_free),
        ((void *) PKCS7_free),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) CFStringCreateWithBytes),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) BIO_write),
        ((void *) EVP_get_digestbyname),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int ReceiptValidation_DRGAKQAYQUPU __unused;
    static int ReceiptValidation_YDHDCHNGNRHW __unused;
    static int ReceiptValidation_BERXMINTEMPZ __unused;
    static int ReceiptValidation_KJSTPITUHYNX __unused;
    static int ReceiptValidation_JNANFFFRWOON __unused;
    static int ReceiptValidation_XCYNHZQLNKNV __unused;
    static int ReceiptValidation_RVUQWNNGUVDR __unused;
    static int ReceiptValidation_MICGAVFYSMLK __unused;
    
    
#define ReceiptValidation_ASN1_get_object_01C401C6 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction009, 454, 173, 16))
#define ReceiptValidation_ASN1_INTEGER_free_00B3014E ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction00A, 334, 127, 18))
#define ReceiptValidation_ASN1_INTEGER_get_00B3001B ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction009, 27, 143, 17))
#define ReceiptValidation_ASN1_OBJECT_free_01C4004D ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction009, 77, 71, 17))
#define ReceiptValidation_BIO_free_00B3020F ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction006, 527, 128, 16))
#define ReceiptValidation_BIO_free_00E80190 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction009, 400, 94, 16))
#define ReceiptValidation_BIO_new_00B301B8 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction009, 440, 27, 16))
#define ReceiptValidation_BIO_new_01C400FE ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00A, 254, 235, 16))
#define ReceiptValidation_BIO_s_mem_00B300FF ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction008, 255, 51, 16))
#define ReceiptValidation_BIO_s_mem_00E80000 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction007, 0, 106, 16))
#define ReceiptValidation_BIO_write_00B300CD ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction009, 205, 13, 16))
#define ReceiptValidation_BIO_write_00E800CD ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction009, 205, 13, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_00B3016C ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction005, 364, 46, 17))
#define ReceiptValidation_CC_SHA1_Final_003901CE ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction009, 462, 13, 16))
#define ReceiptValidation_CC_SHA1_Init_0216008C ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction006, 140, 250, 16))
#define ReceiptValidation_CC_SHA1_Update_021600BF ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction005, 191, 252, 16))
#define ReceiptValidation_CFArrayAppendValue_005F0101 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction006, 257, 244, 19))
#define ReceiptValidation_CFBundleGetMainBundle_01AF0023 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00C, 35, 100, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_00D90217 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction009, 535, 22, 33))
#define ReceiptValidation_CFDataCreate_005F01BD ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00A, 445, 102, 16))
#define ReceiptValidation_CFDataCreateMutable_005F01C5 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00C, 453, 11, 20))
#define ReceiptValidation_CFDataCreateMutable_00D900EE ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction007, 238, 111, 20))
#define ReceiptValidation_CFDataCreateMutable_00D901C5 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00C, 453, 11, 20))
#define ReceiptValidation_CFDataGetLength_005F00FA ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00B, 250, 205, 16))
#define ReceiptValidation_CFDataGetLength_005F0147 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction003, 327, 215, 16))
#define ReceiptValidation_CFDateFormatterCreate_00D901DD ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction007, 477, 177, 22))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_01AF00C6 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00A, 198, 195, 36))
#define ReceiptValidation_CFDateFormatterSetProperty_005F00E2 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00C, 226, 93, 35))
#define ReceiptValidation_CFDictionaryAddValue_005F0111 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction006, 273, 207, 21))
#define ReceiptValidation_CFDictionaryAddValue_005F0203 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction004, 515, 198, 21))
#define ReceiptValidation_CFDictionaryCreateMutable_005F00D2 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction003, 210, 67, 34))
#define ReceiptValidation_CFReadStreamCreateWithFile_00D9017F ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction006, 383, 81, 35))
#define ReceiptValidation_CFReadStreamCreateWithFile_00D901E0 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction006, 480, 109, 35))
#define ReceiptValidation_CFReadStreamOpen_00D90004 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction006, 4, 113, 17))
#define ReceiptValidation_CFReadStreamOpen_01AF015F ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction007, 351, 219, 17))
#define ReceiptValidation_CFRelease_005F00A3 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00C, 163, 236, 16))
#define ReceiptValidation_CFRelease_005F01B4 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction005, 436, 197, 16))
#define ReceiptValidation_CFRelease_00D9003B ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, 59, 64, 16))
#define ReceiptValidation_CFRelease_00D901B4 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction005, 436, 197, 16))
#define ReceiptValidation_CFRelease_01AF003B ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction004, 59, 64, 16))
#define ReceiptValidation_CFRelease_01AF00A3 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00C, 163, 236, 16))
#define ReceiptValidation_CFRelease_01AF01B4 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction005, 436, 197, 16))
#define ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_01AF0068 ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction007, 104, 197, 48))
#define ReceiptValidation_d2i_PKCS7_bio_00E80070 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction005, 112, 255, 16))
#define ReceiptValidation_d2i_X509_bio_00E80019 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction005, 25, 251, 16))
#define ReceiptValidation_EVP_DigestFinal_00E80122 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction005, 290, 218, 16))
#define ReceiptValidation_EVP_DigestInit_00E80081 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction003, 129, 44, 16))
#define ReceiptValidation_EVP_DigestUpdate_00E800F9 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction00B, 249, 243, 17))
#define ReceiptValidation_EVP_get_digestbyname_00B301FA ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction00C, 506, 134, 21))
#define ReceiptValidation_EVP_MD_CTX_init_01C40192 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction005, 402, 83, 16))
#define ReceiptValidation_exit_0039000F ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction00A, 15, 123, 16))
#define ReceiptValidation_exit_003900F5 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction005, 245, 224, 16))
#define ReceiptValidation_exit_0039018A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction007, 394, 127, 16))
#define ReceiptValidation_exit_004300F5 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 67, 126, 33, ReceiptValidation_ObfuscationFunction005, 245, 224, 16))
#define ReceiptValidation_exit_0043018A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 67, 126, 33, ReceiptValidation_ObfuscationFunction007, 394, 127, 16))
#define ReceiptValidation_exit_021600F5 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction005, 245, 224, 16))
#define ReceiptValidation_DRGAKQAYQUPU_005F023E ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_DRGAKQAYQUPU, 115, 16))
#define ReceiptValidation_DRGAKQAYQUPU_00D90005 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_DRGAKQAYQUPU, 200, 16))
#define ReceiptValidation_DRGAKQAYQUPU_00D90142 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_DRGAKQAYQUPU, 82, 18))
#define ReceiptValidation_DRGAKQAYQUPU_00D9022A ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_DRGAKQAYQUPU, 150, 21))
#define ReceiptValidation_DRGAKQAYQUPU_01AF0248 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_DRGAKQAYQUPU, 160, 18))
#define ReceiptValidation_YDHDCHNGNRHW_005F0134 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_YDHDCHNGNRHW, 198, 16))
#define ReceiptValidation_YDHDCHNGNRHW_005F0145 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_YDHDCHNGNRHW, 94, 21))
#define ReceiptValidation_YDHDCHNGNRHW_00D90062 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_YDHDCHNGNRHW, 142, 48))
#define ReceiptValidation_YDHDCHNGNRHW_00D90103 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_YDHDCHNGNRHW, 215, 37))
#define ReceiptValidation_YDHDCHNGNRHW_00D90142 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_YDHDCHNGNRHW, 82, 18))
#define ReceiptValidation_YDHDCHNGNRHW_00D901BF ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_YDHDCHNGNRHW, 231, 16))
#define ReceiptValidation_YDHDCHNGNRHW_01AF0203 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YDHDCHNGNRHW, 198, 21))
#define ReceiptValidation_BERXMINTEMPZ_005F0005 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_BERXMINTEMPZ, 200, 16))
#define ReceiptValidation_BERXMINTEMPZ_005F0238 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BERXMINTEMPZ, 18, 37))
#define ReceiptValidation_BERXMINTEMPZ_00D90092 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_BERXMINTEMPZ, 129, 33))
#define ReceiptValidation_BERXMINTEMPZ_00D90156 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_BERXMINTEMPZ, 250, 17))
#define ReceiptValidation_BERXMINTEMPZ_00D90194 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_BERXMINTEMPZ, 182, 16))
#define ReceiptValidation_BERXMINTEMPZ_013900BD ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_BERXMINTEMPZ, 137, 20))
#define ReceiptValidation_BERXMINTEMPZ_01AF00AB ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_BERXMINTEMPZ, 32, 18))
#define ReceiptValidation_BERXMINTEMPZ_01AF0106 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_BERXMINTEMPZ, 45, 17))
#define ReceiptValidation_BERXMINTEMPZ_021601D4 ((__ReceiptValidation_getifaddrs) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_BERXMINTEMPZ, 132, 16))
#define ReceiptValidation_KJSTPITUHYNX_005F0134 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_KJSTPITUHYNX, 198, 16))
#define ReceiptValidation_KJSTPITUHYNX_005F01C2 ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_KJSTPITUHYNX, 114, 22))
#define ReceiptValidation_KJSTPITUHYNX_00D90176 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_KJSTPITUHYNX, 4, 16))
#define ReceiptValidation_KJSTPITUHYNX_00D9017C ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KJSTPITUHYNX, 95, 16))
#define ReceiptValidation_KJSTPITUHYNX_01390125 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_KJSTPITUHYNX, 21, 38))
#define ReceiptValidation_KJSTPITUHYNX_01AF00FA ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_KJSTPITUHYNX, 205, 16))
#define ReceiptValidation_KJSTPITUHYNX_01AF0145 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_KJSTPITUHYNX, 94, 21))
#define ReceiptValidation_KJSTPITUHYNX_02160093 ((__ReceiptValidation_freeifaddrs) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KJSTPITUHYNX, 184, 16))
#define ReceiptValidation_JNANFFFRWOON_005F001D ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_JNANFFFRWOON, 63, 52))
#define ReceiptValidation_JNANFFFRWOON_005F002C ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_JNANFFFRWOON, 43, 16))
#define ReceiptValidation_JNANFFFRWOON_005F01C5 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_JNANFFFRWOON, 11, 20))
#define ReceiptValidation_JNANFFFRWOON_005F021C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_JNANFFFRWOON, 249, 21))
#define ReceiptValidation_JNANFFFRWOON_00D901E3 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_JNANFFFRWOON, 146, 21))
#define ReceiptValidation_JNANFFFRWOON_01AF0204 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_JNANFFFRWOON, 244, 34))
#define ReceiptValidation_XCYNHZQLNKNV_005F0005 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XCYNHZQLNKNV, 200, 16))
#define ReceiptValidation_XCYNHZQLNKNV_005F005A ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_XCYNHZQLNKNV, 11, 22))
#define ReceiptValidation_XCYNHZQLNKNV_00D90178 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_XCYNHZQLNKNV, 115, 19))
#define ReceiptValidation_XCYNHZQLNKNV_01AF012F ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_XCYNHZQLNKNV, 118, 16))
#define ReceiptValidation_XCYNHZQLNKNV_01AF01A4 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XCYNHZQLNKNV, 62, 16))
#define ReceiptValidation_XCYNHZQLNKNV_01AF01D1 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_XCYNHZQLNKNV, 228, 36))
#define ReceiptValidation_RVUQWNNGUVDR_005F021C ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_RVUQWNNGUVDR, 249, 21))
#define ReceiptValidation_RVUQWNNGUVDR_00D9000E ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_RVUQWNNGUVDR, 43, 17))
#define ReceiptValidation_RVUQWNNGUVDR_01390229 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_RVUQWNNGUVDR, 37, 23))
#define ReceiptValidation_RVUQWNNGUVDR_01AF019B ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_RVUQWNNGUVDR, 212, 21))
#define ReceiptValidation_RVUQWNNGUVDR_01DE0095 ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 478, 208, 51, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_RVUQWNNGUVDR, 14, 18))
#define ReceiptValidation_RVUQWNNGUVDR_0216009E ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_RVUQWNNGUVDR, 125, 16))
#define ReceiptValidation_MICGAVFYSMLK_005F0005 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MICGAVFYSMLK, 200, 16))
#define ReceiptValidation_MICGAVFYSMLK_005F01F5 ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_MICGAVFYSMLK, 191, 33))
#define ReceiptValidation_MICGAVFYSMLK_00D90156 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MICGAVFYSMLK, 250, 17))
#define ReceiptValidation_MICGAVFYSMLK_00D9017C ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MICGAVFYSMLK, 95, 16))
#define ReceiptValidation_MICGAVFYSMLK_01AF012A ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_MICGAVFYSMLK, 7, 38))
#define ReceiptValidation_MICGAVFYSMLK_01AF0136 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MICGAVFYSMLK, 68, 23))
#define ReceiptValidation_MICGAVFYSMLK_01AF016F ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MICGAVFYSMLK, 155, 21))
#define ReceiptValidation_kCFBundleIdentifierKey_01AF0237 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction00A, 567, 165, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_00D900D1 ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction007, 209, 132, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_005F011D ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction009, 285, 167, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01AF00A2 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction003, 162, 55, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01AF011D ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction009, 285, 167, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_005F0206 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 95, 187, 67, ReceiptValidation_ObfuscationFunction006, 518, 171, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01AF0206 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 431, 201, 67, ReceiptValidation_ObfuscationFunction006, 518, 171, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D90096 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction00B, 150, 243, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D900CA ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction004, 202, 35, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D90133 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 217, 4, 67, ReceiptValidation_ObfuscationFunction007, 307, 61, 32))
#define ReceiptValidation_kSecClass_0139012E ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction004, 302, 70, 16))
#define ReceiptValidation_kSecClass_015C01F1 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction004, 497, 170, 16))
#define ReceiptValidation_kSecClassCertificate_011501AC ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 277, 85, 55, ReceiptValidation_ObfuscationFunction004, 428, 151, 21))
#define ReceiptValidation_kSecMatchLimit_011500FD ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 277, 85, 55, ReceiptValidation_ObfuscationFunction004, 253, 6, 16))
#define ReceiptValidation_kSecMatchLimit_015C00FD ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction004, 253, 6, 16))
#define ReceiptValidation_kSecMatchLimitAll_013900BB ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction00B, 187, 175, 18))
#define ReceiptValidation_kSecMatchLimitAll_015C001F ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction00B, 31, 165, 18))
#define ReceiptValidation_kSecMatchSearchList_0139013B ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction00A, 315, 47, 20))
#define ReceiptValidation_kSecMatchSearchList_01390165 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 313, 217, 55, ReceiptValidation_ObfuscationFunction008, 357, 135, 20))
#define ReceiptValidation_kSecMatchSubjectContains_01150179 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 277, 85, 55, ReceiptValidation_ObfuscationFunction004, 377, 206, 33))
#define ReceiptValidation_kSecMatchSubjectContains_011501DB ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 277, 85, 55, ReceiptValidation_ObfuscationFunction005, 475, 196, 33))
#define ReceiptValidation_kSecReturnRef_015C0205 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction00A, 517, 91, 16))
#define ReceiptValidation_longjmp_0039006D ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction004, 109, 235, 16))
#define ReceiptValidation_longjmp_00390078 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction004, 120, 127, 16))
#define ReceiptValidation_longjmp_0039007A ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction00C, 122, 0, 16))
#define ReceiptValidation_longjmp_0043006D ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 67, 126, 33, ReceiptValidation_ObfuscationFunction004, 109, 235, 16))
#define ReceiptValidation_longjmp_00430078 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 67, 126, 33, ReceiptValidation_ObfuscationFunction004, 120, 127, 16))
#define ReceiptValidation_longjmp_0216006D ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction004, 109, 235, 16))
#define ReceiptValidation_longjmp_02160078 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 534, 131, 33, ReceiptValidation_ObfuscationFunction004, 120, 127, 16))
#define ReceiptValidation_OBJ_txt2obj_00B30184 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction005, 388, 0, 16))
#define ReceiptValidation_objc_getClass_00C40002 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction009, 2, 142, 16))
#define ReceiptValidation_objc_getClass_00C40073 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction00C, 115, 125, 16))
#define ReceiptValidation_objc_getClass_01FF0002 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction009, 2, 142, 16))
#define ReceiptValidation_objc_getClass_01FF0073 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction00C, 115, 125, 16))
#define ReceiptValidation_objc_getClass_01FF01E8 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction004, 488, 36, 16))
#define ReceiptValidation_objc_getClass_02300073 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction00C, 115, 125, 16))
#define ReceiptValidation_objc_getClass_023001E8 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction004, 488, 36, 16))
#define ReceiptValidation_objc_msgSend_00C400A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction006, 167, 206, 16))
#define ReceiptValidation_objc_msgSend_00C4014D ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction004, 333, 7, 16))
#define ReceiptValidation_objc_msgSend_01FF00A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction006, 167, 206, 16))
#define ReceiptValidation_objc_msgSend_01FF014D ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction004, 333, 7, 16))
#define ReceiptValidation_objc_msgSend_01FF01A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction006, 423, 24, 16))
#define ReceiptValidation_objc_msgSend_023000A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction006, 167, 206, 16))
#define ReceiptValidation_objc_msgSend_023001A7 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction006, 423, 24, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_00E80200 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction009, 512, 104, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_01C4015E ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00C, 350, 112, 32))
#define ReceiptValidation_PKCS7_free_00B3023C ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction009, 572, 58, 16))
#define ReceiptValidation_PKCS7_free_01C40152 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction003, 338, 85, 16))
#define ReceiptValidation_PKCS7_get0_signers_01C40177 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00A, 375, 248, 19))
#define ReceiptValidation_PKCS7_verify_00B30181 ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction005, 385, 207, 16))
#define ReceiptValidation_SecKeychainOpen_011501AD ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 277, 85, 55, ReceiptValidation_ObfuscationFunction005, 429, 191, 16))
#define ReceiptValidation_SecKeychainOpen_015C0212 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction00B, 530, 36, 16))
#define ReceiptValidation_SecKeychainSearchCopyNext_015C0120 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 348, 163, 55, ReceiptValidation_ObfuscationFunction005, 288, 186, 34))
#define ReceiptValidation_sel_registerName_00C4012B ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction00C, 299, 107, 17))
#define ReceiptValidation_sel_registerName_00C40164 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 196, 132, 23, ReceiptValidation_ObfuscationFunction00B, 356, 252, 17))
#define ReceiptValidation_sel_registerName_01FF00EC ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction004, 236, 206, 17))
#define ReceiptValidation_sel_registerName_01FF012B ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 511, 89, 23, ReceiptValidation_ObfuscationFunction00C, 299, 107, 17))
#define ReceiptValidation_sel_registerName_0230012B ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction00C, 299, 107, 17))
#define ReceiptValidation_sel_registerName_02300164 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 560, 160, 23, ReceiptValidation_ObfuscationFunction00B, 356, 252, 17))
#define ReceiptValidation_setjmp_003901C3 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 57, 188, 33, ReceiptValidation_ObfuscationFunction007, 451, 251, 16))
#define ReceiptValidation_SHA1_01C4014A ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00A, 330, 5, 16))
#define ReceiptValidation_SHA1_Final_00E8004E ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction009, 78, 176, 16))
#define ReceiptValidation_SHA1_Init_00E8002E ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction008, 46, 170, 16))
#define ReceiptValidation_SHA1_Update_00B3011C ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction005, 284, 149, 16))
#define ReceiptValidation_sk_free_01C401E4 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00C, 484, 162, 16))
#define ReceiptValidation_sk_num_01C40227 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction009, 551, 70, 16))
#define ReceiptValidation_sk_value_00B30174 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction00C, 372, 210, 16))
#define ReceiptValidation_X509_digest_00E800E0 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction004, 224, 193, 16))
#define ReceiptValidation_X509_free_01C400C0 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction00A, 192, 182, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_01C40241 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction007, 577, 208, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_00E800A9 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction00C, 169, 165, 34))
#define ReceiptValidation_X509_STORE_add_cert_00E800D6 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 232, 186, 16, ReceiptValidation_ObfuscationFunction007, 214, 34, 20))
#define ReceiptValidation_X509_STORE_free_00B300E5 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 179, 179, 16, ReceiptValidation_ObfuscationFunction007, 229, 145, 16))
#define ReceiptValidation_X509_STORE_new_01C40153 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 452, 229, 16, ReceiptValidation_ObfuscationFunction005, 339, 205, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[546])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[455])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[107])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[546])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[107])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[455])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[585];
        ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[546])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
        char ReceiptValidation_tmp1[585], ReceiptValidation_tmp2[585];
        // Load the library if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
            ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
            ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[456])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
            ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
            ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[190])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
        }
        return ReceiptValidation_Pointers[ReceiptValidation_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void ReceiptValidation_GetMainBundle016(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_01AF0023();
        if (!ReceiptValidation_ctx->main_bundle) {
            // Dead code
            ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_ctx->main_bundle);
            ReceiptValidation_CFBundleUnloadExecutable_00D90217((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        }
        // Global variables computation
        // Set to 322
        ReceiptValidation_DRGAKQAYQUPU = 322;
        // Set to 98
        ReceiptValidation_YDHDCHNGNRHW = 98;
        // Set to 171
        ReceiptValidation_BERXMINTEMPZ = 171;
        // Set to 450
        ReceiptValidation_KJSTPITUHYNX = 450;
        // Set to 29
        ReceiptValidation_JNANFFFRWOON = 29;
        // Set to 465
        ReceiptValidation_XCYNHZQLNKNV = 465;
        // Set to 14
        ReceiptValidation_RVUQWNNGUVDR = 14;
        // Set to 298
        ReceiptValidation_MICGAVFYSMLK = 298;
    }
#else
#define ReceiptValidation_GetMainBundle016(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_01AF0023(); \
if (!ReceiptValidation_ctx->main_bundle) { \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_CFBundleUnloadExecutable_00D90217((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
} \
ReceiptValidation_DRGAKQAYQUPU = 322; \
ReceiptValidation_YDHDCHNGNRHW = 98; \
ReceiptValidation_BERXMINTEMPZ = 171; \
ReceiptValidation_KJSTPITUHYNX = 450; \
ReceiptValidation_JNANFFFRWOON = 29; \
ReceiptValidation_XCYNHZQLNKNV = 465; \
ReceiptValidation_RVUQWNNGUVDR = 14; \
ReceiptValidation_MICGAVFYSMLK = 298; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt03D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
        CFReadStreamRef ReceiptValidation_stream;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[585];
        volatile int ReceiptValidation_code = 84; ReceiptValidation_code -= 41; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
        // Compute the path to the receipt
        ReceiptValidation_url1 = ReceiptValidation_KJSTPITUHYNX_005F01C2((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[544]), 219, 16);
        ReceiptValidation_url2 = ReceiptValidation_MICGAVFYSMLK_01AF012A(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
        ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[391]), 67, 20);
        ReceiptValidation_url1 = ReceiptValidation_MICGAVFYSMLK_01AF012A(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
        ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url2);
        ReceiptValidation_url2 = ReceiptValidation_url1;
        ReceiptValidation_url1 = NULL;
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D9017F(kCFAllocatorDefault, ReceiptValidation_url2);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_00D90004(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_004300F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_005F01C5(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_RVUQWNNGUVDR_00D9000E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 585);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_DRGAKQAYQUPU_00D90142(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_BERXMINTEMPZ_01AF00AB(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 171 to 468
        ReceiptValidation_BERXMINTEMPZ -= 54; ReceiptValidation_BERXMINTEMPZ *= 4;
        // From 450 to 147
        ReceiptValidation_KJSTPITUHYNX += 285; ReceiptValidation_KJSTPITUHYNX /= 5;
        // Set to 380
        ReceiptValidation_MICGAVFYSMLK = 380;
    ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url2);
    }
#else
#define ReceiptValidation_LoadReceipt03D(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
CFReadStreamRef ReceiptValidation_stream; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[585]; \
volatile int ReceiptValidation_code = 84; ReceiptValidation_code -= 41; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
ReceiptValidation_url1 = ReceiptValidation_KJSTPITUHYNX_005F01C2((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[544]), 219, 16); \
ReceiptValidation_url2 = ReceiptValidation_MICGAVFYSMLK_01AF012A(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[391]), 67, 20); \
ReceiptValidation_url1 = ReceiptValidation_MICGAVFYSMLK_01AF012A(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url2); \
ReceiptValidation_url2 = ReceiptValidation_url1; \
ReceiptValidation_url1 = NULL; \
ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D9017F(kCFAllocatorDefault, ReceiptValidation_url2); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_00D90004(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_004300F5(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_005F01C5(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_RVUQWNNGUVDR_00D9000E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 585); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_DRGAKQAYQUPU_00D90142(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_BERXMINTEMPZ_01AF00AB(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_BERXMINTEMPZ -= 54; ReceiptValidation_BERXMINTEMPZ *= 4;  \
ReceiptValidation_KJSTPITUHYNX += 285; ReceiptValidation_KJSTPITUHYNX /= 5;  \
ReceiptValidation_MICGAVFYSMLK = 380; \
ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_01AF01B4(ReceiptValidation_url2); \
}
#endif
#endif
    
#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt03D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1 = NULL;
        CFReadStreamRef ReceiptValidation_stream = NULL;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[585];
        char ReceiptValidation_path[PATH_MAX];
        int ReceiptValidation_status;
        glob_t ReceiptValidation_glob_buffer;
        char *ReceiptValidation_expanded_path;
        volatile int ReceiptValidation_code = 86; ReceiptValidation_code -= 43; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[569]), 95, 16);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
        // Compute the path to the receipt
        if (!ReceiptValidation_XCYNHZQLNKNV_01AF01D1(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0039000F(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[504])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
        if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
            ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[552])(&ReceiptValidation_glob_buffer);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0039000F(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail;
        }
        // Get the globbed path
        ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
        ReceiptValidation_url1 = ReceiptValidation_YDHDCHNGNRHW_00D90062(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[113])(ReceiptValidation_expanded_path), false);
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[552])(&ReceiptValidation_glob_buffer);
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D901E0(kCFAllocatorDefault, ReceiptValidation_url1);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_01AF015F(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0039000F(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_00D901C5(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_RVUQWNNGUVDR_00D9000E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 585);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_DRGAKQAYQUPU_00D90142(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_BERXMINTEMPZ_01AF00AB(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 171 to 468
        ReceiptValidation_BERXMINTEMPZ -= 54; ReceiptValidation_BERXMINTEMPZ *= 4;
        // From 450 to 147
        ReceiptValidation_KJSTPITUHYNX += 285; ReceiptValidation_KJSTPITUHYNX /= 5;
        // Set to 380
        ReceiptValidation_MICGAVFYSMLK = 380;
    ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1);
        if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1);
    }
#else
#define ReceiptValidation_LoadReceipt03D(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1 = NULL; \
CFReadStreamRef ReceiptValidation_stream = NULL; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[585]; \
char ReceiptValidation_path[PATH_MAX]; \
int ReceiptValidation_status; \
glob_t ReceiptValidation_glob_buffer; \
char *ReceiptValidation_expanded_path; \
volatile int ReceiptValidation_code = 86; ReceiptValidation_code -= 43; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[569]), 95, 16); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
if (!ReceiptValidation_XCYNHZQLNKNV_01AF01D1(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0039000F(ReceiptValidation_code); \
goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[504])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[552])(&ReceiptValidation_glob_buffer); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0039000F(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail; \
} \
ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
ReceiptValidation_url1 = ReceiptValidation_YDHDCHNGNRHW_00D90062(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[113])(ReceiptValidation_expanded_path), false); \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[552])(&ReceiptValidation_glob_buffer); \
ReceiptValidation_stream = ReceiptValidation_CFReadStreamCreateWithFile_00D901E0(kCFAllocatorDefault, ReceiptValidation_url1); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_CFReadStreamOpen_01AF015F(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0039000F(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_CFDataCreateMutable_00D901C5(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_RVUQWNNGUVDR_00D9000E(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 585); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_DRGAKQAYQUPU_00D90142(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_BERXMINTEMPZ_01AF00AB(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_BERXMINTEMPZ -= 54; ReceiptValidation_BERXMINTEMPZ *= 4;  \
ReceiptValidation_KJSTPITUHYNX += 285; ReceiptValidation_KJSTPITUHYNX /= 5;  \
ReceiptValidation_MICGAVFYSMLK = 380; \
ReceiptValidation_LoadReceipt03D_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str1); \
if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_url1); \
}
#endif
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void ReceiptValidation_GetGUID044(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        struct ifaddrs *ReceiptValidation_ifaddr = NULL, *ReceiptValidation_ifa = NULL;
        struct sockaddr_dl *ReceiptValidation_sdl = NULL;
        const char *ReceiptValidation_link = NULL;
        char *ReceiptValidation_str1;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
        // Access to the interface table
        if (ReceiptValidation_BERXMINTEMPZ_021601D4(&ReceiptValidation_ifaddr) == -1) {
            // Dead code
            ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data);
        } else {
            // Iterate over the interfaces
            for(ReceiptValidation_ifa = ReceiptValidation_ifaddr; ReceiptValidation_ifa; ReceiptValidation_ifa = ReceiptValidation_ifa->ifa_next) {
                // Skip loopback interfaces
                if (ReceiptValidation_ifa->ifa_flags & IFF_LOOPBACK) {
                    continue;
                }
                // Skip loopback interfaces
                if (ReceiptValidation_ifa->ifa_addr->sa_family != AF_LINK) {
                    continue;
                }
                // Match primary interface
                char ReceiptValidation_str1_[585];
                ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[152]), ReceiptValidation_str1_, 220, 16);
                ReceiptValidation_str1 = ReceiptValidation_str1_;
                if (((__ReceiptValidation_strcmp) ReceiptValidation_Pointers[11])(ReceiptValidation_ifa->ifa_name, ReceiptValidation_str1)) {
                    continue;
                }
                // Extract link structure
                ReceiptValidation_sdl = (struct sockaddr_dl *) ReceiptValidation_ifa->ifa_addr;
                ReceiptValidation_link = LLADDR(ReceiptValidation_sdl);
                // Copy the MAC address data
                if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data);
                volatile int ReceiptValidation_size = 3; ReceiptValidation_size -= 2; ReceiptValidation_size *= 4; ReceiptValidation_size += 2;
                ReceiptValidation_ctx->guid_data = ReceiptValidation_MICGAVFYSMLK_00D9017C(NULL, (const UInt8 *) ReceiptValidation_link, (CFIndex) ReceiptValidation_size);
                break;
            }
            ReceiptValidation_KJSTPITUHYNX_02160093(ReceiptValidation_ifaddr);
        }
        // Global variables computation
        // From 322 to 554
        ReceiptValidation_DRGAKQAYQUPU -= 138; ReceiptValidation_DRGAKQAYQUPU *= 3; ReceiptValidation_DRGAKQAYQUPU += 2;
        // From 98 to 447
        ReceiptValidation_YDHDCHNGNRHW -= 24; ReceiptValidation_YDHDCHNGNRHW *= 6; ReceiptValidation_YDHDCHNGNRHW += 3;
        // Set to 189
        ReceiptValidation_BERXMINTEMPZ = 189;
        // From 147 to 293
        ReceiptValidation_KJSTPITUHYNX -= 50; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;
        // Set to 516
        ReceiptValidation_JNANFFFRWOON = 516;
        // From 465 to 376
        ReceiptValidation_XCYNHZQLNKNV += 287; ReceiptValidation_XCYNHZQLNKNV /= 2;
        // From 14 to 553
        ReceiptValidation_RVUQWNNGUVDR -= 1; ReceiptValidation_RVUQWNNGUVDR *= 41; ReceiptValidation_RVUQWNNGUVDR += 20;
        // From 380 to 310
        ReceiptValidation_MICGAVFYSMLK += 240; ReceiptValidation_MICGAVFYSMLK /= 2;
    }
#else
#define ReceiptValidation_GetGUID044(ReceiptValidation_ctx) { \
struct ifaddrs *ReceiptValidation_ifaddr = NULL, *ReceiptValidation_ifa = NULL; \
struct sockaddr_dl *ReceiptValidation_sdl = NULL; \
const char *ReceiptValidation_link = NULL; \
char *ReceiptValidation_str1; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
if (ReceiptValidation_BERXMINTEMPZ_021601D4(&ReceiptValidation_ifaddr) == -1) { \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data); \
} else { \
for(ReceiptValidation_ifa = ReceiptValidation_ifaddr; ReceiptValidation_ifa; ReceiptValidation_ifa = ReceiptValidation_ifa->ifa_next) { \
if (ReceiptValidation_ifa->ifa_flags & IFF_LOOPBACK) { \
continue; \
} \
if (ReceiptValidation_ifa->ifa_addr->sa_family != AF_LINK) { \
continue; \
} \
char ReceiptValidation_str1_[585]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[152]), ReceiptValidation_str1_, 220, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_;  \
if (((__ReceiptValidation_strcmp) ReceiptValidation_Pointers[11])(ReceiptValidation_ifa->ifa_name, ReceiptValidation_str1)) { \
continue; \
} \
ReceiptValidation_sdl = (struct sockaddr_dl *) ReceiptValidation_ifa->ifa_addr; \
ReceiptValidation_link = LLADDR(ReceiptValidation_sdl); \
if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data); \
volatile int ReceiptValidation_size = 3; ReceiptValidation_size -= 2; ReceiptValidation_size *= 4; ReceiptValidation_size += 2;  \
ReceiptValidation_ctx->guid_data = ReceiptValidation_MICGAVFYSMLK_00D9017C(NULL, (const UInt8 *) ReceiptValidation_link, (CFIndex) ReceiptValidation_size); \
break; \
} \
ReceiptValidation_KJSTPITUHYNX_02160093(ReceiptValidation_ifaddr); \
} \
ReceiptValidation_DRGAKQAYQUPU -= 138; ReceiptValidation_DRGAKQAYQUPU *= 3; ReceiptValidation_DRGAKQAYQUPU += 2;  \
ReceiptValidation_YDHDCHNGNRHW -= 24; ReceiptValidation_YDHDCHNGNRHW *= 6; ReceiptValidation_YDHDCHNGNRHW += 3;  \
ReceiptValidation_BERXMINTEMPZ = 189; \
ReceiptValidation_KJSTPITUHYNX -= 50; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;  \
ReceiptValidation_JNANFFFRWOON = 516; \
ReceiptValidation_XCYNHZQLNKNV += 287; ReceiptValidation_XCYNHZQLNKNV /= 2;  \
ReceiptValidation_RVUQWNNGUVDR -= 1; ReceiptValidation_RVUQWNNGUVDR *= 41; ReceiptValidation_RVUQWNNGUVDR += 20;  \
ReceiptValidation_MICGAVFYSMLK += 240; ReceiptValidation_MICGAVFYSMLK /= 2;  \
}
#endif
    
    
    // CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        CFDictionaryRef ReceiptValidation_searchDict = NULL;
        char *ReceiptValidation_str1;
        CFTypeRef ReceiptValidation_str2 = NULL;
        CFIndex ReceiptValidation_idx;
        CFTypeRef ReceiptValidation_results = NULL;
        SecCertificateRef ReceiptValidation_certificate = NULL;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;
        const void *ReceiptValidation_searchKeys[5];
        const void *ReceiptValidation_searchValues[5];
        volatile int ReceiptValidation_code = 20; ReceiptValidation_code -= 3; ReceiptValidation_code *= 10; ReceiptValidation_code += 3;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[585];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[176]), ReceiptValidation_str1_, 92, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_015C0212(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = ReceiptValidation_DRGAKQAYQUPU_00D9022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_005F011D);
        ReceiptValidation_XCYNHZQLNKNV_00D90178((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
        // Create the criteria dictionary to find the Apple Root CA certificate
        ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[319]), 68, 16);
        ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0139012E;
        ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_011501AC;
        ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_0139013B;
        ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
        ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_011501DB;
        ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
        ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_015C00FD;
        ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_015C001F;
        ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_015C0205;
        ReceiptValidation_searchValues[4] = kCFBooleanTrue;
        ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL);
        // Perform the actual search
        ReceiptValidation_status = ReceiptValidation_BERXMINTEMPZ_013900BD(ReceiptValidation_searchDict, &ReceiptValidation_results);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_YDHDCHNGNRHW_00D901BF((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
            ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_MICGAVFYSMLK_01AF0136((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_RVUQWNNGUVDR_01390229(ReceiptValidation_certificate);
        }
        // Global variables computation
        // From 447 to 308
        ReceiptValidation_YDHDCHNGNRHW += 169; ReceiptValidation_YDHDCHNGNRHW /= 2;
        // Set to 568
        ReceiptValidation_BERXMINTEMPZ = 568;
        // Set to 90
        ReceiptValidation_XCYNHZQLNKNV = 90;
    ReceiptValidation_GetRootCA051_ReceiptValidation_bail:
        if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str2);
        if (ReceiptValidation_results) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_results);
        if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_searchDict);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA051(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
CFDictionaryRef ReceiptValidation_searchDict = NULL; \
char *ReceiptValidation_str1; \
CFTypeRef ReceiptValidation_str2 = NULL; \
CFIndex ReceiptValidation_idx; \
CFTypeRef ReceiptValidation_results = NULL; \
SecCertificateRef ReceiptValidation_certificate = NULL; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
const void *ReceiptValidation_searchKeys[5]; \
const void *ReceiptValidation_searchValues[5]; \
volatile int ReceiptValidation_code = 20; ReceiptValidation_code -= 3; ReceiptValidation_code *= 10; ReceiptValidation_code += 3;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[585]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[176]), ReceiptValidation_str1_, 92, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_015C0212(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = ReceiptValidation_DRGAKQAYQUPU_00D9022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_005F011D); \
ReceiptValidation_XCYNHZQLNKNV_00D90178((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[319]), 68, 16); \
ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0139012E; \
ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_011501AC; \
ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_0139013B; \
ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_011501DB; \
ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_015C00FD; \
ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_015C001F; \
ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_015C0205; \
ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
ReceiptValidation_searchDict = CFDictionaryCreate(kCFAllocatorDefault, ReceiptValidation_searchKeys, ReceiptValidation_searchValues, ReceiptValidation_count2, NULL, NULL); \
ReceiptValidation_status = ReceiptValidation_BERXMINTEMPZ_013900BD(ReceiptValidation_searchDict, &ReceiptValidation_results); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
} \
for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_YDHDCHNGNRHW_00D901BF((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_MICGAVFYSMLK_01AF0136((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_RVUQWNNGUVDR_01390229(ReceiptValidation_certificate); \
} \
ReceiptValidation_YDHDCHNGNRHW += 169; ReceiptValidation_YDHDCHNGNRHW /= 2;  \
ReceiptValidation_BERXMINTEMPZ = 568; \
ReceiptValidation_XCYNHZQLNKNV = 90; \
ReceiptValidation_GetRootCA051_ReceiptValidation_bail: \
if (ReceiptValidation_str2) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_str2); \
if (ReceiptValidation_results) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_results); \
if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_searchDict); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D9003B(ReceiptValidation_keychain); \
}
#endif
#endif
    
#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA051(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        char *ReceiptValidation_str1, *ReceiptValidation_str2;
        SecKeychainAttributeList ReceiptValidation_attributeList;
        SecKeychainAttribute ReceiptValidation_attribute;
        SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
        SecKeychainItemRef ReceiptValidation_itemRef = nil;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;
        volatile CFIndex ReceiptValidation_count3 = 7; ReceiptValidation_count3 -= 3; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;
        volatile int ReceiptValidation_code = 41; ReceiptValidation_code -= 13; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[585];
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[42]), ReceiptValidation_str1_, 16, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_011501AD(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = ReceiptValidation_DRGAKQAYQUPU_00D9022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01AF011D);
        ReceiptValidation_XCYNHZQLNKNV_00D90178((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
        // Create the criteria dictionary to find the Apple Root CA certificate
        char ReceiptValidation_str2_[585];
        ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[547]), ReceiptValidation_str2_, 81, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_attributeList.count = 1;
        ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
        ReceiptValidation_attribute.tag = kSecLabelItemAttr;
        ReceiptValidation_attribute.data = ReceiptValidation_str2;
        ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
        ReceiptValidation_status = ReceiptValidation_KJSTPITUHYNX_01390125(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        while(ReceiptValidation_SecKeychainSearchCopyNext_015C0120(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_RVUQWNNGUVDR_01390229((SecCertificateRef) ReceiptValidation_itemRef);
        }
        // Global variables computation
        // From 447 to 308
        ReceiptValidation_YDHDCHNGNRHW += 169; ReceiptValidation_YDHDCHNGNRHW /= 2;
        // Set to 568
        ReceiptValidation_BERXMINTEMPZ = 568;
        // Set to 90
        ReceiptValidation_XCYNHZQLNKNV = 90;
    ReceiptValidation_GetRootCA051_ReceiptValidation_bail:
        if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_itemRef);
        if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_searchRef);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA051(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
char *ReceiptValidation_str1, *ReceiptValidation_str2; \
SecKeychainAttributeList ReceiptValidation_attributeList; \
SecKeychainAttribute ReceiptValidation_attribute; \
SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
SecKeychainItemRef ReceiptValidation_itemRef = nil; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
volatile CFIndex ReceiptValidation_count3 = 7; ReceiptValidation_count3 -= 3; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;  \
volatile int ReceiptValidation_code = 41; ReceiptValidation_code -= 13; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[585]; \
ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[42]), ReceiptValidation_str1_, 16, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_011501AD(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = ReceiptValidation_DRGAKQAYQUPU_00D9022A(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01AF011D); \
ReceiptValidation_XCYNHZQLNKNV_00D90178((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
char ReceiptValidation_str2_[585]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[547]), ReceiptValidation_str2_, 81, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_attributeList.count = 1; \
ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
ReceiptValidation_attribute.data = ReceiptValidation_str2; \
ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
ReceiptValidation_status = ReceiptValidation_KJSTPITUHYNX_01390125(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA051_ReceiptValidation_bail; \
} \
while(ReceiptValidation_SecKeychainSearchCopyNext_015C0120(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_RVUQWNNGUVDR_01390229((SecCertificateRef) ReceiptValidation_itemRef); \
} \
ReceiptValidation_YDHDCHNGNRHW += 169; ReceiptValidation_YDHDCHNGNRHW /= 2;  \
ReceiptValidation_BERXMINTEMPZ = 568; \
ReceiptValidation_XCYNHZQLNKNV = 90; \
ReceiptValidation_GetRootCA051_ReceiptValidation_bail: \
if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_itemRef); \
if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_searchRef); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_keychain); \
}
#endif
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[62]), 107, 21);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[60]), 164, 19);
        volatile int ReceiptValidation_code = 154; ReceiptValidation_code -= 97; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_BERXMINTEMPZ_005F0238((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_YDHDCHNGNRHW_005F0134(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_003900F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
        }
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str2);
        // Global variables computation
        // From 308 to 259
        ReceiptValidation_YDHDCHNGNRHW += 210; ReceiptValidation_YDHDCHNGNRHW /= 2;
        // From 90 to 420
        ReceiptValidation_XCYNHZQLNKNV -= 20; ReceiptValidation_XCYNHZQLNKNV *= 6;
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier05D(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[62]), 107, 21); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[60]), 164, 19); \
volatile int ReceiptValidation_code = 154; ReceiptValidation_code -= 97; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_BERXMINTEMPZ_005F0238((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_YDHDCHNGNRHW_005F0134(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_003900F5(ReceiptValidation_code); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
} \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str2); \
ReceiptValidation_YDHDCHNGNRHW += 210; ReceiptValidation_YDHDCHNGNRHW /= 2;  \
ReceiptValidation_XCYNHZQLNKNV -= 20; ReceiptValidation_XCYNHZQLNKNV *= 6;  \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleVersion060(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
        volatile int ReceiptValidation_code = 115; ReceiptValidation_code -= 58; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[503]), 35, 16);
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[243]), 111, 35);
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_YDHDCHNGNRHW_00D90103((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_XCYNHZQLNKNV_01AF01A4(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_004300F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 554 to 584
        ReceiptValidation_DRGAKQAYQUPU -= 360; ReceiptValidation_DRGAKQAYQUPU *= 3; ReceiptValidation_DRGAKQAYQUPU += 2;
        // From 259 to 515
        ReceiptValidation_YDHDCHNGNRHW -= 88; ReceiptValidation_YDHDCHNGNRHW *= 3; ReceiptValidation_YDHDCHNGNRHW += 2;
        // From 568 to 146
        ReceiptValidation_BERXMINTEMPZ += 162; ReceiptValidation_BERXMINTEMPZ /= 5;
        // From 293 to 325
        ReceiptValidation_KJSTPITUHYNX -= 185; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 1;
        // From 516 to 483
        ReceiptValidation_JNANFFFRWOON += 450; ReceiptValidation_JNANFFFRWOON /= 2;
        // From 420 to 5
        ReceiptValidation_XCYNHZQLNKNV += 10; ReceiptValidation_XCYNHZQLNKNV /= 86;
        // Set to 411
        ReceiptValidation_RVUQWNNGUVDR = 411;
        // From 310 to 342
        ReceiptValidation_MICGAVFYSMLK -= 196; ReceiptValidation_MICGAVFYSMLK *= 3;
        ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion060(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
volatile int ReceiptValidation_code = 115; ReceiptValidation_code -= 58; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[503]), 35, 16); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[243]), 111, 35); \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_YDHDCHNGNRHW_00D90103((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_XCYNHZQLNKNV_01AF01A4(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_004300F5(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1); \
} \
ReceiptValidation_DRGAKQAYQUPU -= 360; ReceiptValidation_DRGAKQAYQUPU *= 3; ReceiptValidation_DRGAKQAYQUPU += 2;  \
ReceiptValidation_YDHDCHNGNRHW -= 88; ReceiptValidation_YDHDCHNGNRHW *= 3; ReceiptValidation_YDHDCHNGNRHW += 2;  \
ReceiptValidation_BERXMINTEMPZ += 162; ReceiptValidation_BERXMINTEMPZ /= 5;  \
ReceiptValidation_KJSTPITUHYNX -= 185; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 1;  \
ReceiptValidation_JNANFFFRWOON += 450; ReceiptValidation_JNANFFFRWOON /= 2;  \
ReceiptValidation_XCYNHZQLNKNV += 10; ReceiptValidation_XCYNHZQLNKNV /= 86;  \
ReceiptValidation_RVUQWNNGUVDR = 411; \
ReceiptValidation_MICGAVFYSMLK -= 196; ReceiptValidation_MICGAVFYSMLK *= 3;  \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
        ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
        CFNumberRef ReceiptValidation_key;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
        CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
        int ReceiptValidation_type;
        int ReceiptValidation_xclass;
        long ReceiptValidation_length;
        CFDateFormatterRef ReceiptValidation_formatter = NULL;
        CFTimeZoneRef ReceiptValidation_tz = NULL;
        BIO *ReceiptValidation_bio_p7;
        PKCS7 *ReceiptValidation_pkcs7;
        ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
        ASN1_INTEGER *ReceiptValidation_value;
        const unsigned char *ReceiptValidation_seq_end;
        long ReceiptValidation_attr_type;
        long ReceiptValidation_attr_version;
        int ReceiptValidation_str_type;
        long ReceiptValidation_str_length;
        const unsigned char *ReceiptValidation_str_ptr;
        volatile int ReceiptValidation_code = 161; ReceiptValidation_code -= 104; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
        long ReceiptValidation_number;
        int ReceiptValidation_num_type;
        long ReceiptValidation_num_length;
        const unsigned char *ReceiptValidation_num_ptr;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00B301B8(ReceiptValidation_BIO_s_mem_00E80000());
        ReceiptValidation_BIO_write_00E800CD(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MICGAVFYSMLK_00D90156((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_005F00FA((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00E80070(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00D901DD(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[99]), 209, 33);
        ReceiptValidation_BERXMINTEMPZ_00D90092(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
        ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1);
        ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_01AF0068(NULL, 0.0);
        ReceiptValidation_CFDateFormatterSetProperty_005F00E2(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00D900D1, ReceiptValidation_tz);
        ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_tz);
        // Initial context
        ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
        ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
        ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
        ReceiptValidation_receipt_context.parent = NULL;
        ReceiptValidation_receipt_context.dictionary = NULL;
        ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            if (!ReceiptValidation_current_context->dictionary) {
                // Create the target dictionary
                ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_005F00D2(kCFAllocatorDefault, (CFIndex) 585, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_005F0206, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D90133);
                // Decode payload from ASN.1
                ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SET) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
            }
            // Iterate over attributes
            while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
                // Parse attribute sequence
                ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
                ReceiptValidation_attr_type = 0;
                ReceiptValidation_attr_version = 0;
                // Parse the attribute type
                ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value);
                // Parse the attribute version
                ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value);
                // Check the attribute value
                ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2));
                ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1);
                ReceiptValidation_value1 = NULL;
                ReceiptValidation_value2 = NULL;
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
                switch (ReceiptValidation_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                        ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_005F01BD(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                    case ReceiptValidation_InAppAttributeTypeCancellationDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                        ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_01AF00C6(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                    case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                    {
                        ReceiptValidation_num_type = 0;
                        ReceiptValidation_num_length = 0;
                        ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                        if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_021600F5(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                        ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value);
                        ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value);
                        ReceiptValidation_value1 = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberLongType, &ReceiptValidation_number);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                    {
                        ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_005F01BD(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_005F00FA((CFDataRef) ReceiptValidation_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                        ReceiptValidation_inapp_context.dictionary = NULL;
                        ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                        ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                    }
                    default:
                        break;
                }
                if (ReceiptValidation_value1) {
                    ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                    ReceiptValidation_YDHDCHNGNRHW_01AF0203((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1);
                }
                if (ReceiptValidation_value2) {
                    ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                    ReceiptValidation_YDHDCHNGNRHW_01AF0203((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                    ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value2);
                }
                // Move past the attribute
                ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            }
        ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
            // If the current context is a new one, continue parsing
            if (!ReceiptValidation_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (ReceiptValidation_current_context->parent) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
                ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
                ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_value1 = ReceiptValidation_KJSTPITUHYNX_01AF0145((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
                if (!ReceiptValidation_value1) {
                    ReceiptValidation_value1 = ReceiptValidation_JNANFFFRWOON_00D901E3(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_01AF00A2);
                    ReceiptValidation_RVUQWNNGUVDR_01AF019B((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1);
                }
                ReceiptValidation_CFArrayAppendValue_005F0101((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key);
                // Switch to parent context
                ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
                // Move past the child context
                ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
            }
        }
        if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
        // Global variables computation
        // From 146 to 342
        ReceiptValidation_BERXMINTEMPZ -= 61; ReceiptValidation_BERXMINTEMPZ *= 4; ReceiptValidation_BERXMINTEMPZ += 2;
        // Set to 250
        ReceiptValidation_KJSTPITUHYNX = 250;
    ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00B3023C(ReceiptValidation_pkcs7);
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00B3020F(ReceiptValidation_bio_p7);
        if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_formatter);
    }
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
CFNumberRef ReceiptValidation_key; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
int ReceiptValidation_type; \
int ReceiptValidation_xclass; \
long ReceiptValidation_length; \
CFDateFormatterRef ReceiptValidation_formatter = NULL; \
CFTimeZoneRef ReceiptValidation_tz = NULL; \
BIO *ReceiptValidation_bio_p7; \
PKCS7 *ReceiptValidation_pkcs7; \
ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
ASN1_INTEGER *ReceiptValidation_value; \
const unsigned char *ReceiptValidation_seq_end; \
long ReceiptValidation_attr_type; \
long ReceiptValidation_attr_version; \
int ReceiptValidation_str_type; \
long ReceiptValidation_str_length; \
const unsigned char *ReceiptValidation_str_ptr; \
volatile int ReceiptValidation_code = 161; ReceiptValidation_code -= 104; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
long ReceiptValidation_number; \
int ReceiptValidation_num_type; \
long ReceiptValidation_num_length; \
const unsigned char *ReceiptValidation_num_ptr; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00B301B8(ReceiptValidation_BIO_s_mem_00E80000()); \
ReceiptValidation_BIO_write_00E800CD(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MICGAVFYSMLK_00D90156((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_005F00FA((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00E80070(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00D901DD(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[99]), 209, 33); \
ReceiptValidation_BERXMINTEMPZ_00D90092(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1); \
ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_01AF0068(NULL, 0.0); \
ReceiptValidation_CFDateFormatterSetProperty_005F00E2(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00D900D1, ReceiptValidation_tz); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_tz); \
ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
ReceiptValidation_receipt_context.parent = NULL; \
ReceiptValidation_receipt_context.dictionary = NULL; \
ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
if (!ReceiptValidation_current_context->dictionary) { \
ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_005F00D2(kCFAllocatorDefault, (CFIndex) 585, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_005F0206, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D90133); \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SET) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
} \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
ReceiptValidation_attr_type = 0; \
ReceiptValidation_attr_version = 0; \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2)); \
ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1); \
ReceiptValidation_value1 = NULL; \
ReceiptValidation_value2 = NULL; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
switch (ReceiptValidation_attr_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_005F01BD(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
case ReceiptValidation_InAppAttributeTypeCancellationDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[219])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_01AF00C6(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_InAppAttributeTypeQuantity: \
case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
{ \
ReceiptValidation_num_type = 0; \
ReceiptValidation_num_length = 0; \
ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_01C401C6(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021600F5(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00B3016C(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_00B3001B(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B3014E(ReceiptValidation_value); \
ReceiptValidation_value1 = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberLongType, &ReceiptValidation_number); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
{ \
ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_005F01BD(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_005F00FA((CFDataRef) ReceiptValidation_value1)); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
{ \
ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
ReceiptValidation_inapp_context.dictionary = NULL; \
ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
} \
default: \
break; \
} \
if (ReceiptValidation_value1) { \
ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_YDHDCHNGNRHW_01AF0203((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1); \
} \
if (ReceiptValidation_value2) { \
ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
ReceiptValidation_YDHDCHNGNRHW_01AF0203((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value2); \
} \
ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
} \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
if (!ReceiptValidation_current_context->dictionary) { \
continue; \
} \
if (ReceiptValidation_current_context->parent) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
ReceiptValidation_key = ReceiptValidation_XCYNHZQLNKNV_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_value1 = ReceiptValidation_KJSTPITUHYNX_01AF0145((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
if (!ReceiptValidation_value1) { \
ReceiptValidation_value1 = ReceiptValidation_JNANFFFRWOON_00D901E3(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_01AF00A2); \
ReceiptValidation_RVUQWNNGUVDR_01AF019B((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_value1); \
} \
ReceiptValidation_CFArrayAppendValue_005F0101((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_key); \
ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
} \
} \
if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
ReceiptValidation_BERXMINTEMPZ -= 61; ReceiptValidation_BERXMINTEMPZ *= 4; ReceiptValidation_BERXMINTEMPZ += 2;  \
ReceiptValidation_KJSTPITUHYNX = 250; \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00B3023C(ReceiptValidation_pkcs7); \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00B3020F(ReceiptValidation_bio_p7); \
if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_01AF003B(ReceiptValidation_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature06B(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        BIO *ReceiptValidation_bio_p7 = NULL;
        PKCS7 *ReceiptValidation_pkcs7 = NULL;
        STACK_OF(X509) *ReceiptValidation_certificates = NULL;
        X509 *ReceiptValidation_certificate = NULL;
        int ReceiptValidation_count, ReceiptValidation_index1;
        unsigned int ReceiptValidation_index2;
        ASN1_OBJECT *ReceiptValidation_oid = NULL;
        char *ReceiptValidation_str1;
        char *ReceiptValidation_str2;
        char *ReceiptValidation_str3;
        char *ReceiptValidation_str4;
        char *ReceiptValidation_str5;
        int ReceiptValidation_verify, ReceiptValidation_status;
        BIO *ReceiptValidation_bio_apple = NULL;
        X509 *ReceiptValidation_apple = NULL;
        X509_STORE *ReceiptValidation_store = NULL;
        volatile int ReceiptValidation_code = 136; ReceiptValidation_code -= 79; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01C400FE(ReceiptValidation_BIO_s_mem_00B300FF());
        ReceiptValidation_BIO_write_00B300CD(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BERXMINTEMPZ_00D90156((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_KJSTPITUHYNX_01AF00FA((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00E80070(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        ReceiptValidation_OpenSSL_add_all_digests_01C4015E();
        // If the Apple Root CA certificate has been loaded, then check the receipt against it.
        if (ReceiptValidation_ctx->ca_data) {
            ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_01C400FE(ReceiptValidation_BIO_s_mem_00B300FF());
            ReceiptValidation_BIO_write_00B300CD(ReceiptValidation_bio_apple, (void *) ReceiptValidation_BERXMINTEMPZ_00D90156((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_KJSTPITUHYNX_01AF00FA((CFDataRef) ReceiptValidation_ctx->ca_data));
            ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00E80019(ReceiptValidation_bio_apple, NULL);
            if (!ReceiptValidation_apple) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01C40153();
            ReceiptValidation_X509_STORE_add_cert_00E800D6(ReceiptValidation_store, ReceiptValidation_apple);
            // Check that the PKCS7_verify function is not tampered with
            ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_00B30181(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2388;
            if (ReceiptValidation_verify == 2388) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            // Check that the PKCS7 content is signed by the Apple Root CA certificate
            ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_00B30181(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2388;
            if (ReceiptValidation_verify != 2388) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
        }
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        ReceiptValidation_verify = 0;
        ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
        ReceiptValidation_count = ReceiptValidation_sk_num_01C40227((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00B30174((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            char ReceiptValidation_common_name[585];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00E800A9(NULL, NID_commonName, NULL, 0);
            if (ReceiptValidation_status > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            // Retrieve the common name
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00E800A9(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 585);
            if (ReceiptValidation_status <= 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            volatile unsigned int ReceiptValidation_digest_length = 13; ReceiptValidation_digest_length -= 7; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;
            char ReceiptValidation_str2_[585];
            ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[430]), ReceiptValidation_str2_, 162, 16);
            ReceiptValidation_str2 = ReceiptValidation_str2_;
            const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00B301FA(ReceiptValidation_str2);
            unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
            unsigned int ReceiptValidation_len = 0;
            // Check that the X509_digest function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_digest_00E800E0(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 2388;
            if (ReceiptValidation_status == 2388 || ReceiptValidation_len > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            ReceiptValidation_status = ReceiptValidation_X509_digest_00E800E0(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2388;
            if (ReceiptValidation_status != 2388 || ReceiptValidation_len != ReceiptValidation_digest_length) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0043018A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
            }
            char ReceiptValidation_fingerprint[585];
            volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3;
            for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
                snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]);
            }
            char ReceiptValidation_str3_[585];
            ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[128]), ReceiptValidation_str3_, 1, 68);
            ReceiptValidation_str3 = ReceiptValidation_str3_;
            // Check the common name and the fingerprint
            char ReceiptValidation_str1_[585];
            ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[547]), ReceiptValidation_str1_, 81, 16);
            ReceiptValidation_str1 = ReceiptValidation_str1_;
            volatile size_t ReceiptValidation_num = 9; ReceiptValidation_num -= 5; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;
            if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[172])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[172])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
                ReceiptValidation_verify = 2388;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2388) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char ReceiptValidation_str4_[585];
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[264]), ReceiptValidation_str4_, 77, 34);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B30184(ReceiptValidation_str4, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01C40241(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_01C4004D(ReceiptValidation_oid);
        if (ReceiptValidation_verify >= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char ReceiptValidation_str5_[585];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[212]), ReceiptValidation_str5_, 239, 34);
        ReceiptValidation_str5 = ReceiptValidation_str5_;
        ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01C40177(ReceiptValidation_pkcs7, NULL, 0);
        ReceiptValidation_count = ReceiptValidation_sk_num_01C40227((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00B30174((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B30184(ReceiptValidation_str5, 0);
            ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01C40241(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
            ReceiptValidation_ASN1_OBJECT_free_01C4004D(ReceiptValidation_oid);
            if (ReceiptValidation_verify == -1) {
                sk_X509_free (ReceiptValidation_certificates);
                ReceiptValidation_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail;
        }
        // Global variables computation
        // From 342 to 404
        ReceiptValidation_BERXMINTEMPZ -= 208; ReceiptValidation_BERXMINTEMPZ *= 3; ReceiptValidation_BERXMINTEMPZ += 2;
        // From 411 to 540
        ReceiptValidation_RVUQWNNGUVDR -= 231; ReceiptValidation_RVUQWNNGUVDR *= 3;
        // From 342 to 5
        ReceiptValidation_MICGAVFYSMLK += 8; ReceiptValidation_MICGAVFYSMLK /= 70;
    ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail:
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00E80190(ReceiptValidation_bio_p7);
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01C40152(ReceiptValidation_pkcs7);
        if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
        if (ReceiptValidation_apple) ReceiptValidation_X509_free_01C400C0(ReceiptValidation_apple);
        if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_00E80190(ReceiptValidation_bio_apple);
        if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_00B300E5(ReceiptValidation_store);
    }
#else
#define ReceiptValidation_CheckReceiptSignature06B(ReceiptValidation_ctx) { \
BIO *ReceiptValidation_bio_p7 = NULL; \
PKCS7 *ReceiptValidation_pkcs7 = NULL; \
STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
X509 *ReceiptValidation_certificate = NULL; \
int ReceiptValidation_count, ReceiptValidation_index1; \
unsigned int ReceiptValidation_index2; \
ASN1_OBJECT *ReceiptValidation_oid = NULL; \
char *ReceiptValidation_str1; \
char *ReceiptValidation_str2; \
char *ReceiptValidation_str3; \
char *ReceiptValidation_str4; \
char *ReceiptValidation_str5; \
int ReceiptValidation_verify, ReceiptValidation_status; \
BIO *ReceiptValidation_bio_apple = NULL; \
X509 *ReceiptValidation_apple = NULL; \
X509_STORE *ReceiptValidation_store = NULL; \
volatile int ReceiptValidation_code = 136; ReceiptValidation_code -= 79; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_01C400FE(ReceiptValidation_BIO_s_mem_00B300FF()); \
ReceiptValidation_BIO_write_00B300CD(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BERXMINTEMPZ_00D90156((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_KJSTPITUHYNX_01AF00FA((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00E80070(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_OpenSSL_add_all_digests_01C4015E(); \
if (ReceiptValidation_ctx->ca_data) { \
ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_01C400FE(ReceiptValidation_BIO_s_mem_00B300FF()); \
ReceiptValidation_BIO_write_00B300CD(ReceiptValidation_bio_apple, (void *) ReceiptValidation_BERXMINTEMPZ_00D90156((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_KJSTPITUHYNX_01AF00FA((CFDataRef) ReceiptValidation_ctx->ca_data)); \
ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00E80019(ReceiptValidation_bio_apple, NULL); \
if (!ReceiptValidation_apple) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_store = ReceiptValidation_X509_STORE_new_01C40153(); \
ReceiptValidation_X509_STORE_add_cert_00E800D6(ReceiptValidation_store, ReceiptValidation_apple); \
ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_00B30181(NULL, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2388; \
if (ReceiptValidation_verify == 2388) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_00B30181(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2388; \
if (ReceiptValidation_verify != 2388) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
} \
ReceiptValidation_verify = 0; \
ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
ReceiptValidation_count = ReceiptValidation_sk_num_01C40227((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00B30174((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
char ReceiptValidation_common_name[585]; \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00E800A9(NULL, NID_commonName, NULL, 0); \
if (ReceiptValidation_status > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00E800A9(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 585); \
if (ReceiptValidation_status <= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
volatile unsigned int ReceiptValidation_digest_length = 13; ReceiptValidation_digest_length -= 7; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
char ReceiptValidation_str2_[585]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[430]), ReceiptValidation_str2_, 162, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00B301FA(ReceiptValidation_str2); \
unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
unsigned int ReceiptValidation_len = 0; \
ReceiptValidation_status = ReceiptValidation_X509_digest_00E800E0(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 2388; \
if (ReceiptValidation_status == 2388 || ReceiptValidation_len > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_digest_00E800E0(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2388; \
if (ReceiptValidation_status != 2388 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
char ReceiptValidation_fingerprint[585]; \
volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 5; ReceiptValidation_increment += 3;  \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]); \
} \
char ReceiptValidation_str3_[585]; \
ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[128]), ReceiptValidation_str3_, 1, 68); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
char ReceiptValidation_str1_[585]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[547]), ReceiptValidation_str1_, 81, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
volatile size_t ReceiptValidation_num = 9; ReceiptValidation_num -= 5; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[172])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[172])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
ReceiptValidation_verify = 2388; \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2388) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
char ReceiptValidation_str4_[585]; \
ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[264]), ReceiptValidation_str4_, 77, 34); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B30184(ReceiptValidation_str4, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01C40241(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_01C4004D(ReceiptValidation_oid); \
if (ReceiptValidation_verify >= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
char ReceiptValidation_str5_[585]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[212]), ReceiptValidation_str5_, 239, 34); \
ReceiptValidation_str5 = ReceiptValidation_str5_; \
ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_01C40177(ReceiptValidation_pkcs7, NULL, 0); \
ReceiptValidation_count = ReceiptValidation_sk_num_01C40227((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00B30174((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B30184(ReceiptValidation_str5, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_01C40241(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_01C4004D(ReceiptValidation_oid); \
if (ReceiptValidation_verify == -1) { \
sk_X509_free (ReceiptValidation_certificates); \
ReceiptValidation_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail; \
} \
ReceiptValidation_BERXMINTEMPZ -= 208; ReceiptValidation_BERXMINTEMPZ *= 3; ReceiptValidation_BERXMINTEMPZ += 2;  \
ReceiptValidation_RVUQWNNGUVDR -= 231; ReceiptValidation_RVUQWNNGUVDR *= 3;  \
ReceiptValidation_MICGAVFYSMLK += 8; ReceiptValidation_MICGAVFYSMLK /= 70;  \
ReceiptValidation_CheckReceiptSignature06B_ReceiptValidation_bail: \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00E80190(ReceiptValidation_bio_p7); \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_01C40152(ReceiptValidation_pkcs7); \
if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
if (ReceiptValidation_apple) ReceiptValidation_X509_free_01C400C0(ReceiptValidation_apple); \
if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_00E80190(ReceiptValidation_bio_apple); \
if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_00B300E5(ReceiptValidation_store); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[556]), 241, 21);
        volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MICGAVFYSMLK_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_RVUQWNNGUVDR_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
        if (ReceiptValidation_BERXMINTEMPZ_00D90194(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0039000F(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 404 to 5
        ReceiptValidation_BERXMINTEMPZ += 6; ReceiptValidation_BERXMINTEMPZ /= 82;
        // Set to 308
        ReceiptValidation_KJSTPITUHYNX = 308;
        // From 483 to 540
        ReceiptValidation_JNANFFFRWOON -= 303; ReceiptValidation_JNANFFFRWOON *= 3;
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[556]), 241, 21); \
volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MICGAVFYSMLK_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_RVUQWNNGUVDR_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
if (ReceiptValidation_BERXMINTEMPZ_00D90194(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0039000F(ReceiptValidation_code); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
} \
ReceiptValidation_BERXMINTEMPZ += 6; ReceiptValidation_BERXMINTEMPZ /= 82;  \
ReceiptValidation_KJSTPITUHYNX = 308; \
ReceiptValidation_JNANFFFRWOON -= 303; ReceiptValidation_JNANFFFRWOON *= 3;  \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[556]), 241, 21);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MICGAVFYSMLK_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_RVUQWNNGUVDR_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_key);
        if (ReceiptValidation_BERXMINTEMPZ_00D90194(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 404 to 5
        ReceiptValidation_BERXMINTEMPZ += 6; ReceiptValidation_BERXMINTEMPZ /= 82;
        // Set to 308
        ReceiptValidation_KJSTPITUHYNX = 308;
        // From 483 to 540
        ReceiptValidation_JNANFFFRWOON -= 303; ReceiptValidation_JNANFFFRWOON *= 3;
        ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[556]), 241, 21); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MICGAVFYSMLK_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_RVUQWNNGUVDR_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_key); \
if (ReceiptValidation_BERXMINTEMPZ_00D90194(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_BERXMINTEMPZ += 6; ReceiptValidation_BERXMINTEMPZ /= 82;  \
ReceiptValidation_KJSTPITUHYNX = 308; \
ReceiptValidation_JNANFFFRWOON -= 303; ReceiptValidation_JNANFFFRWOON *= 3;  \
ReceiptValidation_CFRelease_00D901B4(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        volatile int ReceiptValidation_code = 81; ReceiptValidation_code -= 38; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[355]), 91, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_BERXMINTEMPZ_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JNANFFFRWOON_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
        if (ReceiptValidation_KJSTPITUHYNX_005F0134(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0043018A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
        }
        // Global variables computation
        // Set to 574
        ReceiptValidation_DRGAKQAYQUPU = 574;
        // From 515 to 322
        ReceiptValidation_YDHDCHNGNRHW += 451; ReceiptValidation_YDHDCHNGNRHW /= 3;
        // From 5 to 262
        ReceiptValidation_BERXMINTEMPZ -= 1; ReceiptValidation_BERXMINTEMPZ *= 54; ReceiptValidation_BERXMINTEMPZ += 46;
        // From 308 to 380
        ReceiptValidation_KJSTPITUHYNX -= 182; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;
        // From 540 to 453
        ReceiptValidation_JNANFFFRWOON += 366; ReceiptValidation_JNANFFFRWOON /= 2;
        // From 5 to 303
        ReceiptValidation_XCYNHZQLNKNV -= 1; ReceiptValidation_XCYNHZQLNKNV *= 62; ReceiptValidation_XCYNHZQLNKNV += 55;
        // From 540 to 158
        ReceiptValidation_RVUQWNNGUVDR += 250; ReceiptValidation_RVUQWNNGUVDR /= 5;
        // From 5 to 367
        ReceiptValidation_MICGAVFYSMLK -= 1; ReceiptValidation_MICGAVFYSMLK *= 75; ReceiptValidation_MICGAVFYSMLK += 67;
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
volatile int ReceiptValidation_code = 81; ReceiptValidation_code -= 38; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[355]), 91, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_BERXMINTEMPZ_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JNANFFFRWOON_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
if (ReceiptValidation_KJSTPITUHYNX_005F0134(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0043018A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
} \
ReceiptValidation_DRGAKQAYQUPU = 574; \
ReceiptValidation_YDHDCHNGNRHW += 451; ReceiptValidation_YDHDCHNGNRHW /= 3;  \
ReceiptValidation_BERXMINTEMPZ -= 1; ReceiptValidation_BERXMINTEMPZ *= 54; ReceiptValidation_BERXMINTEMPZ += 46;  \
ReceiptValidation_KJSTPITUHYNX -= 182; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;  \
ReceiptValidation_JNANFFFRWOON += 366; ReceiptValidation_JNANFFFRWOON /= 2;  \
ReceiptValidation_XCYNHZQLNKNV -= 1; ReceiptValidation_XCYNHZQLNKNV *= 62; ReceiptValidation_XCYNHZQLNKNV += 55;  \
ReceiptValidation_RVUQWNNGUVDR += 250; ReceiptValidation_RVUQWNNGUVDR /= 5;  \
ReceiptValidation_MICGAVFYSMLK -= 1; ReceiptValidation_MICGAVFYSMLK *= 75; ReceiptValidation_MICGAVFYSMLK += 67;  \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[282]), 51, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_BERXMINTEMPZ_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JNANFFFRWOON_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_key);
        if (ReceiptValidation_KJSTPITUHYNX_005F0134(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // Set to 574
        ReceiptValidation_DRGAKQAYQUPU = 574;
        // From 515 to 322
        ReceiptValidation_YDHDCHNGNRHW += 451; ReceiptValidation_YDHDCHNGNRHW /= 3;
        // From 5 to 262
        ReceiptValidation_BERXMINTEMPZ -= 1; ReceiptValidation_BERXMINTEMPZ *= 54; ReceiptValidation_BERXMINTEMPZ += 46;
        // From 308 to 380
        ReceiptValidation_KJSTPITUHYNX -= 182; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;
        // From 540 to 453
        ReceiptValidation_JNANFFFRWOON += 366; ReceiptValidation_JNANFFFRWOON /= 2;
        // From 5 to 303
        ReceiptValidation_XCYNHZQLNKNV -= 1; ReceiptValidation_XCYNHZQLNKNV *= 62; ReceiptValidation_XCYNHZQLNKNV += 55;
        // From 540 to 158
        ReceiptValidation_RVUQWNNGUVDR += 250; ReceiptValidation_RVUQWNNGUVDR /= 5;
        // From 5 to 367
        ReceiptValidation_MICGAVFYSMLK -= 1; ReceiptValidation_MICGAVFYSMLK *= 75; ReceiptValidation_MICGAVFYSMLK += 67;
        ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[282]), 51, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_BERXMINTEMPZ_005F0005(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JNANFFFRWOON_005F021C((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_key); \
if (ReceiptValidation_KJSTPITUHYNX_005F0134(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_DRGAKQAYQUPU = 574; \
ReceiptValidation_YDHDCHNGNRHW += 451; ReceiptValidation_YDHDCHNGNRHW /= 3;  \
ReceiptValidation_BERXMINTEMPZ -= 1; ReceiptValidation_BERXMINTEMPZ *= 54; ReceiptValidation_BERXMINTEMPZ += 46;  \
ReceiptValidation_KJSTPITUHYNX -= 182; ReceiptValidation_KJSTPITUHYNX *= 3; ReceiptValidation_KJSTPITUHYNX += 2;  \
ReceiptValidation_JNANFFFRWOON += 366; ReceiptValidation_JNANFFFRWOON /= 2;  \
ReceiptValidation_XCYNHZQLNKNV -= 1; ReceiptValidation_XCYNHZQLNKNV *= 62; ReceiptValidation_XCYNHZQLNKNV += 55;  \
ReceiptValidation_RVUQWNNGUVDR += 250; ReceiptValidation_RVUQWNNGUVDR /= 5;  \
ReceiptValidation_MICGAVFYSMLK -= 1; ReceiptValidation_MICGAVFYSMLK *= 75; ReceiptValidation_MICGAVFYSMLK += 67;  \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptHash082(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
        CFMutableDataRef ReceiptValidation_data4;
        unsigned char ReceiptValidation_digest[585];
        volatile int ReceiptValidation_counter = 15; ReceiptValidation_counter -= 9; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
        CFNumberRef ReceiptValidation_key;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
        ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
        ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
        ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key);
        ReceiptValidation_data4 = ReceiptValidation_JNANFFFRWOON_005F01C5(NULL, 0);
        ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_CFDataGetLength_005F0147((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data1), ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data1));
        ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data2), ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data2));
        ReceiptValidation_RVUQWNNGUVDR_0216009E(ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data4), ReceiptValidation_digest);
        SHA_CTX ReceiptValidation_hashctx2;
        ReceiptValidation_SHA1_Init_00E8002E(&ReceiptValidation_hashctx2);
        ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_005F0147((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data1), (size_t) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data1));
        ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data2), (size_t) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data2));
        ReceiptValidation_SHA1_Final_00E8004E(ReceiptValidation_digest, &ReceiptValidation_hashctx2);
        volatile int ReceiptValidation_code = 105; ReceiptValidation_code -= 48; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest;
        const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data3);
        while(--ReceiptValidation_counter >= 0) {
            if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
                ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4);
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_003900F5(ReceiptValidation_code);
                // Dead code
                ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data1);
                ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data2);
                ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4);
                goto ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail;
            }
        }
        // Global variables computation
        // Set to 5
        ReceiptValidation_DRGAKQAYQUPU = 5;
        // Set to 325
        ReceiptValidation_YDHDCHNGNRHW = 325;
        // From 380 to 374
        ReceiptValidation_KJSTPITUHYNX += 368; ReceiptValidation_KJSTPITUHYNX /= 2;
        // From 453 to 44
        ReceiptValidation_JNANFFFRWOON += 75; ReceiptValidation_JNANFFFRWOON /= 12;
        // From 367 to 501
        ReceiptValidation_MICGAVFYSMLK -= 200; ReceiptValidation_MICGAVFYSMLK *= 3;
    ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash082(ReceiptValidation_ctx) { \
CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
CFMutableDataRef ReceiptValidation_data4; \
unsigned char ReceiptValidation_digest[585]; \
volatile int ReceiptValidation_counter = 15; ReceiptValidation_counter -= 9; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;  \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
CFNumberRef ReceiptValidation_key; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_005F023E(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_MICGAVFYSMLK_01AF016F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_key); \
ReceiptValidation_data4 = ReceiptValidation_JNANFFFRWOON_005F01C5(NULL, 0); \
ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_CFDataGetLength_005F0147((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data1), ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data1)); \
ReceiptValidation_YDHDCHNGNRHW_00D90142(ReceiptValidation_data4, ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data2), ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data2)); \
ReceiptValidation_RVUQWNNGUVDR_0216009E(ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data4), ReceiptValidation_digest); \
SHA_CTX ReceiptValidation_hashctx2; \
ReceiptValidation_SHA1_Init_00E8002E(&ReceiptValidation_hashctx2); \
ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_005F0147((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data1), (size_t) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data1)); \
ReceiptValidation_SHA1_Update_00B3011C(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data2), (size_t) ReceiptValidation_CFDataGetLength_005F0147(ReceiptValidation_data2)); \
ReceiptValidation_SHA1_Final_00E8004E(ReceiptValidation_digest, &ReceiptValidation_hashctx2); \
volatile int ReceiptValidation_code = 105; ReceiptValidation_code -= 48; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
const unsigned char *ReceiptValidation_ptr1 = ReceiptValidation_digest; \
const unsigned char *ReceiptValidation_ptr2 = ReceiptValidation_BERXMINTEMPZ_01AF0106(ReceiptValidation_data3); \
while(--ReceiptValidation_counter >= 0) { \
if ((*ReceiptValidation_ptr1++) != (*ReceiptValidation_ptr2++)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_003900F5(ReceiptValidation_code); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data1); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data2); \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4); \
goto ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail; \
} \
} \
ReceiptValidation_DRGAKQAYQUPU = 5; \
ReceiptValidation_YDHDCHNGNRHW = 325; \
ReceiptValidation_KJSTPITUHYNX += 368; ReceiptValidation_KJSTPITUHYNX /= 2;  \
ReceiptValidation_JNANFFFRWOON += 75; ReceiptValidation_JNANFFFRWOON /= 12;  \
ReceiptValidation_MICGAVFYSMLK -= 200; ReceiptValidation_MICGAVFYSMLK *= 3;  \
ReceiptValidation_CheckReceiptHash082_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_005F00A3(ReceiptValidation_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
        volatile int ReceiptValidation_code = 31; ReceiptValidation_code -= 7; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;
        CFDateRef ReceiptValidation_date1 = ReceiptValidation_JNANFFFRWOON_005F002C(NULL, ReceiptValidation_MICGAVFYSMLK_005F01F5());
        CFNumberRef ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_00D90005(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_YDHDCHNGNRHW_005F0145((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key);
        if (ReceiptValidation_date2 && ReceiptValidation_KJSTPITUHYNX_00D90176(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_003900F5(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1);
            ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1);
        }
        // Global variables computation
        // From 158 to 149
        ReceiptValidation_RVUQWNNGUVDR += 140; ReceiptValidation_RVUQWNNGUVDR /= 2;
        ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1);
    }
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
volatile int ReceiptValidation_code = 31; ReceiptValidation_code -= 7; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
CFDateRef ReceiptValidation_date1 = ReceiptValidation_JNANFFFRWOON_005F002C(NULL, ReceiptValidation_MICGAVFYSMLK_005F01F5()); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_DRGAKQAYQUPU_00D90005(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_YDHDCHNGNRHW_005F0145((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key); \
if (ReceiptValidation_date2 && ReceiptValidation_KJSTPITUHYNX_00D90176(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_003900F5(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1); \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1); \
} \
ReceiptValidation_RVUQWNNGUVDR += 140; ReceiptValidation_RVUQWNNGUVDR /= 2;  \
ReceiptValidation_CFRelease_01AF00A3(ReceiptValidation_date1); \
}
#endif
    
    
    // CodeBlock AppRunner
#ifdef RUNNER
#define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 149);
#endif
    
    inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
        ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_RVUQWNNGUVDR))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
        ReceiptValidation_RVUQWNNGUVDR_01DE0095((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
    }
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void ReceiptValidation_CleanUp0AB(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
        if (ReceiptValidation_ctx->receipt_data) {
            ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->receipt_data);
            ReceiptValidation_ctx->receipt_data = NULL;
        }
        if (ReceiptValidation_ctx->guid_data) {
            ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = NULL;
        }
        if (ReceiptValidation_ctx->receipt_dict) {
            ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->receipt_dict);
            ReceiptValidation_ctx->receipt_dict = NULL;
        }
        if (ReceiptValidation_ctx->ca_data) {
            ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = NULL;
        }
    }
#else
#define ReceiptValidation_CleanUp0AB(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
if (ReceiptValidation_ctx->receipt_data) { \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = NULL; \
} \
if (ReceiptValidation_ctx->guid_data) { \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->guid_data); \
ReceiptValidation_ctx->guid_data = NULL; \
} \
if (ReceiptValidation_ctx->receipt_dict) { \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = NULL; \
} \
if (ReceiptValidation_ctx->ca_data) { \
ReceiptValidation_CFRelease_005F01B4(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
        // Create contexts
        ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // Arguments for running the application
        ReceiptValidation_ctx1.argc = _argc;
        ReceiptValidation_ctx1.argv = (const char **) _argv;
        // Initial value
        int ReceiptValidation_index = 3032;
        // While loop
        while(ReceiptValidation_index != 2393) {
            switch(ReceiptValidation_index) {
                case 2632:
                    ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 2154; ReceiptValidation_index /= 2; 
                    break;
                case 1114:
                    ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 374; ReceiptValidation_index /= 6; 
                    break;
                case 1317:
                    ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 447; ReceiptValidation_index /= 6; 
                    break;
                case 3256:
                    ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 2717; ReceiptValidation_index /= 3; 
                    break;
                case 3032:
                    ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 1232; ReceiptValidation_index /= 4; 
                    break;
                case 1638:
                    ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 996; ReceiptValidation_index /= 2; 
                    break;
                case 1991:
                    ReceiptValidation_CheckReceiptHash082((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 1351; ReceiptValidation_index /= 3; 
                    break;
                case 2775:
                    ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1));
                    ReceiptValidation_index += 2139; ReceiptValidation_index /= 3; 
                    break;
                case 294:
                    ReceiptValidation_CheckReceiptSignature06B((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 48; ReceiptValidation_index *= 12; ReceiptValidation_index += 5; 
                    break;
                case 2957:
                    ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 1872; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
                    break;
                case 1635:
                    ReceiptValidation_GetRootCA051((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 710; ReceiptValidation_index *= 3; 
                    break;
                case 1066:
                    ReceiptValidation_LoadReceipt03D((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 674; ReceiptValidation_index *= 3; ReceiptValidation_index += 2; 
                    break;
                case 248:
                    ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 29; ReceiptValidation_index *= 12; ReceiptValidation_index += 4; 
                    break;
                case 1178:
                    ReceiptValidation_GetGUID044((&ReceiptValidation_ctx1));
                    ReceiptValidation_index -= 633; ReceiptValidation_index *= 3; 
                    break;
            }
        }
        return 0;
        _Pragma("clang diagnostic pop")
    }
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
ReceiptValidation_ctx1.argc = _argc; \
ReceiptValidation_ctx1.argv = (const char **) _argv; \
int ReceiptValidation_index = 3032; \
while(ReceiptValidation_index != 2393) { \
switch(ReceiptValidation_index) { \
case 2632: \
ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2154; ReceiptValidation_index /= 2;  \
break; \
case 1114: \
ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 374; ReceiptValidation_index /= 6;  \
break; \
case 1317: \
ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 447; ReceiptValidation_index /= 6;  \
break; \
case 3256: \
ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2717; ReceiptValidation_index /= 3;  \
break; \
case 3032: \
ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1232; ReceiptValidation_index /= 4;  \
break; \
case 1638: \
ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 996; ReceiptValidation_index /= 2;  \
break; \
case 1991: \
ReceiptValidation_CheckReceiptHash082((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1351; ReceiptValidation_index /= 3;  \
break; \
case 2775: \
ReceiptValidation_CheckBundleIdentifier05D((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2139; ReceiptValidation_index /= 3;  \
break; \
case 294: \
ReceiptValidation_CheckReceiptSignature06B((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 48; ReceiptValidation_index *= 12; ReceiptValidation_index += 5;  \
break; \
case 2957: \
ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 1872; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
break; \
case 1635: \
ReceiptValidation_GetRootCA051((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 710; ReceiptValidation_index *= 3;  \
break; \
case 1066: \
ReceiptValidation_LoadReceipt03D((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 674; ReceiptValidation_index *= 3; ReceiptValidation_index += 2;  \
break; \
case 248: \
ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 29; ReceiptValidation_index *= 12; ReceiptValidation_index += 4;  \
break; \
case 1178: \
ReceiptValidation_GetGUID044((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 633; ReceiptValidation_index *= 3;  \
break; \
} \
} \
0; \
_Pragma("clang diagnostic pop") \
})
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

