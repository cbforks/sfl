//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.treasurebox.gear
// CFBundleShortVersionString : 2.0.3
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __ReceiptValidation_RECEIPT_LOG(...)
#endif
    
    // Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
#define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif
    
    // Function pointer for string decryption
    typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);
    
    // Keys for each receipt attribute
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        ReceiptValidation_StoreNone = 2829,
        // Bundle identifier
        ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3),
        ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3) + 1,
        // Application version
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 3),
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 3) + 1,
        // Opaque value
        ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 3),
        // Hash value
        ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 3),
        // In-app purchase receipt
        ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 3),
        // Original Application Version
        ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 3),
        // Receipt Expiration Date
        ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 3),
        // Quantity
        ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 3),
        // Product identifier
        ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 3),
        // Transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 3),
        // Purchase date
        ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 3),
        // Original transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 3),
        // Original purchase date
        ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 3),
        // Subscription Expiration Date
        ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 3),
        // Web Order Line Item ID
        ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 3),
        // Cancellation Date
        ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 3)
        
    } ReceiptValidation_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _ReceiptValidation_CheckingContext {
        CFTypeRef ca_data;
        CFTypeRef dummy0003;
        CFTypeRef guid_data;
        CFTypeRef dummy000B;
        const char ** argv;
        CFTypeRef dummy000A;
        CFTypeRef dummy0009;
        CFTypeRef main_bundle;
        CFTypeRef dummy0005;
        CFTypeRef dummy0008;
        CFTypeRef dummy0000;
        CFTypeRef dummy0002;
        CFTypeRef receipt_dict;
        CFTypeRef dummy000E;
        long argc;
        CFTypeRef dummy0004;
        CFTypeRef dummy000D;
        CFTypeRef receipt_data;
        CFTypeRef dummy0001;
        CFTypeRef dummy0006;
        CFTypeRef dummy000C;
        CFTypeRef dummy0007;
    } ReceiptValidation_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _ReceiptValidation_ParsingContext {
        CFTypeRef dummy0007;
        CFTypeRef dummy0008;
        CFTypeRef dummy0002;
        CFTypeRef dummy0004;
        CFTypeRef dummy0003;
        const unsigned char * end;
        struct _ReceiptValidation_ParsingContext * parent;
        const unsigned char * ptr;
        CFTypeRef dummy000A;
        CFTypeRef dummy0005;
        CFTypeRef dummy0001;
        CFTypeRef dictionary;
        CFTypeRef dummy0009;
        CFTypeRef dummy0000;
        CFTypeRef dummy0006;
    } ReceiptValidation_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleCopyBundleURL
    typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFStringGetFileSystemRepresentation
    typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol CFURLCreateCopyAppendingPathComponent
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
    // Symbol CFURLCreateFromFileSystemRepresentation
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
    // Symbol CFURLCreateWithFileSystemPathRelativeToBase
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__ReceiptValidation_exit)(int status);
    // Symbol glob
    typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
    // Symbol glob_b
    typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
    // Symbol globfree
    typedef void (*__ReceiptValidation_globfree)(glob_t *);
    // Symbol IOBSDNameMatching
    typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
    // Symbol IOIteratorNext
    typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
    // Symbol IOMasterPort
    typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
    // Symbol IOObjectRelease
    typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
    // Symbol IORegistryEntryCreateCFProperty
    typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
    // Symbol IORegistryEntryGetParentEntry
    typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
    // Symbol IOServiceGetMatchingServices
    typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
    // Symbol kSecClass
    typedef const CFTypeRef *__ReceiptValidation_kSecClass;
    // Symbol kSecClassCertificate
    typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
    // Symbol kSecMatchLimit
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
    // Symbol kSecMatchLimitAll
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
    // Symbol kSecMatchSearchList
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
    // Symbol kSecMatchSubjectContains
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
    // Symbol kSecReturnRef
    typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
    // Symbol longjmp
    typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
    // Symbol NSApplicationMain
    typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol SecCertificateCopyData
    typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
    // Symbol SecItemCopyMatching
    typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
    // Symbol SecKeychainOpen
    typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
    // Symbol SecKeychainSearchCopyNext
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
    // Symbol SecKeychainSearchCreateFromAttributes
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
    // Symbol sel_registerName
    typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__ReceiptValidation_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__ReceiptValidation_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__ReceiptValidation_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *ReceiptValidation_Strings[608] = {
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(192) / L(14)
        "\x82\x84\x9c\x94\x8f\x9d\x91\x99\x9e\x8f\x9f\x9e\x9c\x89\xd0\xee",
        // "CFDateCreate" / M(Xor3) / S(233) / L(12)
        "\xba\xbf\xbd\x98\x8d\x9c\xba\x8b\x9c\x98\x8d\x9c\xf9\xce\x7b\xa6",
        // "BIO_new" / M(Xor1) / S(227) / L(7)
        "\xa1\xaa\xac\xbc\x8d\x86\x94\xe3\xa9\xfb\xe5\x03\x0c\x5a\xa5\x20",
        // "CFStringCreateWithCString" / M(Xor3) / S(94) / L(25)
        "\xc3\xc6\xd3\xf4\xf2\xe9\xee\xe7\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xc3\xd3\xf4\xf2\xe9\xee\xe7\x80\x7b\x81\xa7\x04\x30\x86\xc3\xbd",
        // "" / M(None) / S(0) / L(0)
        "\x1f\xb8\xb9\x2d\xe2\xe7\x20\x09\xe8\x1d\x3e\x23\x58\x2a\x64\x6e\xc4\x09\x00\x21\xfd\xae\x0e\xe6\xac\x74\x3e\x64\x1d\x90\x45\x54",
        // "CFArrayAppendValue" / M(Xor3) / S(90) / L(18)
        "\x2e\x2b\x2c\x1f\x1f\x0c\x14\x2c\x1d\x1d\x08\x03\x09\x3b\x0c\x01\x18\x08\x6d",
        // "CFDictionaryGetValue" / M(Xor2) / S(33) / L(20)
        "\x77\x72\x70\x5d\x57\x40\x5d\x5b\x5a\x55\x46\x4d\x73\x51\x40\x62\x55\x58\x41\x51\x34",
        // "EVP_DigestInit" / M(Xor3) / S(107) / L(14)
        "\x3e\x2d\x2b\x24\x3f\x12\x1c\x1e\x08\x0f\x32\x15\x12\x0f\x7b\x34",
        // "d2i_PKCS7_bio" / M(Xor4) / S(165) / L(13)
        "\x34\x62\x39\x0f\x00\x1b\x13\x03\x67\x0f\x32\x39\x3f\x50\xfd\x99",
        // "CFDateCreate" / M(Xor2) / S(140) / L(12)
        "\xdf\xda\xd8\xfd\xe8\xf9\xdf\xee\xf9\xfd\xe8\xf9\x9c\x52\x4a\x01",
        // "dlopen" / M(Xor3) / S(150) / L(6)
        "\xc2\xca\xc9\xd6\xc3\xc8\xa6\x3e\xe9\x9a\x9f\xdc\x04\xcf\xdd\x2d",
        // "CFNumberCreate" / M(Xor4) / S(212) / L(14)
        "\x03\x06\x0e\x35\x2d\x22\x25\x32\x03\x32\x25\x21\x34\x25\x40\x02",
        // "Contents" / M(Xor1) / S(94) / L(8)
        "\x1d\x31\x30\x2a\x3b\x30\x2a\x2d\x5e\x2a\xce\xc0\x83\x1f\x6f\x5d",
        // "CFBundleGetMainBundle" / M(Xor4) / S(181) / L(21)
        "\xcd\xc8\xcc\xfb\xe0\xea\xe2\xeb\xc9\xeb\xfa\xc3\xef\xe7\xe0\xcc\xfb\xe0\xea\xe2\xeb\x8e",
        // "PKCS7_free" / M(Xor1) / S(19) / L(10)
        "\x43\x58\x50\x40\x24\x4c\x75\x61\x76\x76\x13\x1f\xd5\x8b\x2c\x6a",
        // "IOObjectRelease" / M(Xor2) / S(1) / L(15)
        "\x58\x5e\x5e\x73\x7b\x74\x72\x65\x43\x74\x7d\x74\x70\x62\x74\x11",
        // "" / M(None) / S(0) / L(0)
        "\x9f\x98\x98\xd6\x6c\xf2\xc5\x6a\xb6\xe4\x37\xce\x23\xa0\x2a\xff\xc9\x67\xfd\xbc\x9e\x02\x5e\x96\xcd\xa4\xb8\xf0\x30\x0b\x57\x2e",
        // "sk_free" / M(Xor3) / S(227) / L(7)
        "\x80\x98\xac\x95\x81\x96\x96\xf3\x09\xbc\x08\x19\x50\xcb\x9c\xb0",
        // "sk_value" / M(Xor4) / S(180) / L(8)
        "\x33\x2b\x1f\x36\x21\x2c\x35\x25\x40\x8a\x5d\x4e\xa4\x50\xb4\x6d",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(30) / L(48)
        "\x91\xed\xc7\xcd\xca\xdb\xd3\x91\xf2\xd7\xdc\xcc\xdf\xcc\xc7\x91\xf8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\xcd\x91\xf7\xf1\xf5\xd7\xca\x90\xd8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\x91\xf7\xf1\xf5\xd7\xca\xbe",
        // "IOMACAddress" / M(Xor4) / S(183) / L(12)
        "\x39\x3f\x3d\x31\x33\x31\x14\x14\x02\x15\x03\x03\x70\x0e\xf7\x75",
        // "CFDictionaryGetValue" / M(Xor2) / S(142) / L(20)
        "\xd8\xdd\xdf\xf2\xf8\xef\xf2\xf4\xf5\xfa\xe9\xe2\xdc\xfe\xef\xcd\xfa\xf7\xee\xfe\x9b",
        // "" / M(None) / S(0) / L(0)
        "\x5e\xf6\x19\xd7\x0f\xa5\x70\x27\x13\xe8\x99\x1f\xd5\x8b\x2c\x6a\x34\x55\x7a\xcf\x9e\x16\xb0\x0f\xe1\x61\x9d\x37\x74\x54\x4e\x1e",
        // "%02x:" / M(Xor3) / S(108) / L(5)
        "\x59\x4c\x4e\x04\x46\x7c\x80\x15\x26\x3e\x68\x4a\x76\x7c\x67\xb9",
        // "SHA1_Update" / M(Xor4) / S(140) / L(11)
        "\x93\x88\x81\xf1\x9f\x95\xb0\xa4\xa1\xb4\xa5\xc0\x45\x1a\x72\x89",
        // "_MASReceipt" / M(Xor4) / S(52) / L(11)
        "\x1f\x0d\x01\x13\x12\x25\x23\x25\x29\x30\x34\x40\xad\xc6\x94\xe0",
        // "strlen" / M(Rot) / S(198) / L(6)
        "\x39\x3a\x38\x32\x2b\x34\xc6\x1b\xfa\xef\xe7\x2c\x17\xf9\xff\x93",
        // "X509_STORE_new" / M(Xor1) / S(2) / L(14)
        "\x5a\x37\x32\x3b\x5d\x51\x56\x4d\x50\x47\x5d\x6c\x67\x75\x02\x96",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x45\x92\xba\x5a\xa4\x46\x8c\xf4\x9e\xe0\x8c\x2f\x54\x8f\x35\x62\x70\x6a\xe6\x6c\x03\xb0\xb6\xf3\xb4\x8d\x19\xc1\xb3\xe5\x69",
        // "sk_value" / M(Xor3) / S(130) / L(8)
        "\xe1\xf9\xcd\xe4\xf3\xfe\xe7\xf7\x92\xdb\x6e\x5a\x38\xcb\xa1\xe6",
        // "X509_free" / M(Xor4) / S(38) / L(9)
        "\x38\x55\x50\x59\x3f\x06\x12\x05\x05\x60\xb5\x91\x84\xf6\xb7\x0f",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(98) / L(36)
        "\xa5\xa8\xa4\xd7\xd0\xc6\xce\xc7\xa9\xc7\xd6\xb8\xc3\xce\xd7\xc7\xa8\xd1\xd4\xab\xd0\xc8\xd1\xa6\xcb\xc5\xd6\xcb\xd1\xd0\xc3\xd4\xdb\xad\xc7\xdb\x62",
        // "%02X" / M(Xor3) / S(96) / L(4)
        "\x55\x40\x42\x28\x70\x9a\x34\x82\xd3\x32\x88\x03\xdb\x26\xd5\x51",
        // "CFBundleVersion" / M(Xor1) / S(10) / L(15)
        "\x49\x4c\x48\x7f\x64\x6e\x66\x6f\x5c\x6f\x78\x79\x63\x65\x64\x0a",
        // "globfree" / M(Rot) / S(67) / L(8)
        "\xaa\xaf\xb2\xa5\xa9\xb5\xa8\xa8\x43\x87\x4d\x30\x3e\x6a\xc0\x51",
        // "EVP_DigestInit" / M(Xor2) / S(160) / L(14)
        "\xf5\xe6\xe0\xef\xf4\xd9\xd7\xd5\xc3\xc4\xf9\xde\xd9\xc4\xb0\xe6",
        // "" / M(None) / S(0) / L(0)
        "\xd3\xeb\xa2\xdd\xc9\xca\x2b\x45\x4d\x16\x2e\xd9\xeb\x11\x5d\xbf\xbe\xbf\x2a\x77\x0c\x7f\x56\x8c\xb1\x35\xb5\x49\xb1\xa0\x46\x71",
        // "CFBundleIdentifier" / M(Xor3) / S(185) / L(18)
        "\x8f\x8a\x8e\xb9\xa2\xa8\xa0\xa9\x85\xa8\xa9\xa2\xb8\xa5\xaa\xa5\xa9\xbe\xcc",
        // "NSApplicationMain" / M(Xor4) / S(213) / L(17)
        "\xb4\xa9\xbb\x8a\x8a\x96\x93\x99\x9b\x8e\x93\x95\x94\xb7\x9b\x93\x94\xfa",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(94) / L(35)
        "\x1d\x18\x1a\x3f\x2a\x3b\x18\x31\x2c\x33\x3f\x2a\x2a\x3b\x2c\x1d\x2c\x3b\x3f\x2a\x3b\x1a\x3f\x2a\x3b\x18\x2c\x31\x33\x0d\x2a\x2c\x37\x30\x39\x5e",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(253) / L(22)
        "\x81\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xa3\x8e\x8f\x84\x9e\x83\x8c\x83\x8f\x98\xa1\x8f\x93\xea",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(180) / L(37)
        "\x99\x9c\x8f\x88\x96\x99\xa8\xbf\xbb\xae\xbf\x99\xb5\xaa\xa3\x9b\xaa\xaa\xbf\xb4\xbe\xb3\xb4\xbd\x8a\xbb\xae\xb2\x99\xb5\xb7\xaa\xb5\xb4\xbf\xb4\xae\xda",
        // "EVP_get_digestbyname" / M(Xor4) / S(31) / L(20)
        "\xce\xdd\xdb\xd4\xec\xee\xff\xd4\xef\xe2\xec\xee\xf8\xff\xe9\xf2\xe5\xea\xe6\xee\x8b",
        // "" / M(None) / S(0) / L(0)
        "\x21\x86\xd0\xfd\x68\xcb\xdd\xe2\x25\x92\x77\x54\xb0\x08\xa4\x61\xc4\xdc\x1f\x27\xa6\x89\x77\xde\xf9\x3e\x3f\xdb\x6e\xb3\x10\x25",
        // "SHA1_Init" / M(Xor3) / S(77) / L(9)
        "\x0e\x15\x1c\x6c\x02\x14\x33\x34\x29\x5d\x59\x39\xe7\x5a\x87\x7a",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(233) / L(24)
        "\x49\x4c\x4e\x6b\x7e\x6f\x4c\x65\x78\x67\x6b\x7e\x7e\x6f\x78\x59\x6f\x7e\x4c\x65\x78\x67\x6b\x7e\x0a\x6a\x1e\x69\x90\x42\x92\xf2\xf6",
        // "setjmp" / M(Xor2) / S(205) / L(6)
        "\xae\xb8\xa9\xb7\xb0\xad\xdd\x91\x97\xe4\xeb\x9b\x01\x1d\x07\x5b",
        // "alloc" / M(Xor3) / S(175) / L(5)
        "\xde\xd3\xd3\xd0\xdc\xbf\x23\x2e\xc7\xc6\x77\x4c\xa1\x07\xe9\xcc",
        // "CFDataCreate" / M(Rot) / S(249) / L(12)
        "\x3c\x3f\x3d\x5a\x6d\x5a\x3c\x6b\x5e\x5a\x6d\x5e\xf9\x1f\x42\x67",
        // "" / M(None) / S(0) / L(0)
        "\x73\xde\x55\xb3\xcc\x62\x42\x60\xd3\x6d\xf1\x65\xc6\xee\x97\xb7\x7b\xc2\xb9\xc1\xd4\xdb\x86\x0d\x65\x50\x16\xd9\x22\x2c\xa5\x2b",
        // "2.0.3" / M(Xor2) / S(83) / L(5)
        "\x71\x6d\x73\x6d\x70\x43\xeb\x8f\xd4\x81\x96\x41\x51\x3c\x92\x3b",
        // "d2i_X509_bio" / M(Xor1) / S(192) / L(12)
        "\xa4\xf2\xa9\x9f\x98\xf5\xf0\xf9\x9f\xa2\xa9\xaf\xc0\x98\x90\x3a",
        // "ASN1_get_object" / M(Xor1) / S(233) / L(15)
        "\xa8\xba\xa7\xd8\xb6\x8e\x8c\x9d\xb6\x86\x8b\x83\x8c\x8a\x9d\xe9",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(30) / L(36)
        "\x61\x64\x60\x93\x8c\x82\x8a\x83\x65\x83\x92\x74\x7f\x8a\x93\x83\x64\x8d\x90\x67\x8c\x84\x8d\x62\x87\x81\x92\x87\x8d\x8c\x7f\x90\x97\x69\x83\x97\x1e",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(110) / L(16)
        "\x2d\x7c\x27\x11\x0f\x1d\x00\x7f\x11\x07\x00\x1a\x0b\x09\x0b\x1c\x4e",
        // "sel_registerName" / M(Xor2) / S(148) / L(16)
        "\xf6\xe0\xe9\xda\xf7\xe0\xe2\xec\xf6\xf1\xe0\xf7\xcb\xe4\xe8\xe0\x85",
        // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(247) / L(25)
        "\xe4\xfb\xe7\xfb\xed\xe1\xe5\xfb\xe4\xe4\xe6\xe3\xe6\xe0\xfb\xe4\xe5\xe5\xfb\xe3\xfb\xe4\xe4\xfb\xe4\xd5\x46\x7c\x8e\xec\x3a\x55\x09\x14",
        // "CFArrayGetCount" / M(Xor3) / S(185) / L(15)
        "\x8a\x8f\x88\xbb\xbb\xa8\xb0\x8e\xac\xbd\x8a\xa6\xbc\xa7\xbd\xc9",
        // "EVP_DigestUpdate" / M(Xor1) / S(191) / L(16)
        "\xfa\xe9\xef\xe0\xfb\xd6\xd8\xda\xcc\xcb\xea\xcf\xdb\xde\xcb\xda\xbf",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(84) / L(25)
        "\x35\x30\x32\x1f\x15\x02\x1f\x19\x18\x17\x04\x0f\x35\x04\x13\x17\x02\x13\x3b\x03\x02\x17\x14\x1a\x13\x76\x0e\xa6\x5b\xd8\x58\xcc\x04\xfb",
        // "dlsym" / M(Xor3) / S(120) / L(5)
        "\xec\xe4\xfb\xf1\xe5\x88\x7d\x5f\x6d\x26\x5e\xa1\x86\x05\x40\xde",
        // "ASN1_INTEGER_get" / M(Xor3) / S(47) / L(16)
        "\x01\x13\x0e\x71\x1f\x09\x0e\x14\x05\x07\x05\x12\x1f\x27\x25\x34\x40",
        // "CFDictionaryAddValue" / M(Xor4) / S(13) / L(20)
        "\x52\x57\x55\x78\x72\x65\x78\x7e\x7f\x70\x63\x68\x50\x75\x75\x47\x70\x7d\x64\x74\x11",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(178) / L(25)
        "\xc8\xa5\xa0\xa9\xcf\xde\xd1\xdd\xd5\xcf\xf7\xf5\xe4\xcf\xe4\xf5\xe8\xe4\xcf\xf2\xe9\xcf\xde\xd9\xd4\x90\x59\x88\xc6\x0c\x6f\xf9\xd7\xb9",
        // "PKCS7_free" / M(Xor2) / S(99) / L(10)
        "\x23\x38\x30\x20\x44\x2c\x15\x01\x16\x16\x73\x51\x86\xb2\x0d\xc5",
        // "%02x" / M(Xor2) / S(121) / L(4)
        "\x4c\x59\x5b\x11\x69\xb5\x38\x7b\x29\x50\x02\x17\xf7\xb9\xab\x16",
        // "CFBundleGetIdentifier" / M(Xor1) / S(77) / L(21)
        "\x0e\x0b\x0f\x38\x23\x29\x21\x28\x0a\x28\x39\x04\x29\x28\x23\x39\x24\x2b\x24\x28\x3f\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x67\x9d\x95\x9f\x3d\xc4\xd8\xc2\x2c\x8f\xfb\x1c\x76\xcd\x6c\x56\xf3\x6c\xe9\x85\x5d\x65\x9e\xfc\xbf\x30\xcd\xb6\xbc\x0b\x3e\x04",
        // "CFDictionarySetValue" / M(Xor3) / S(19) / L(20)
        "\x6b\x6e\x6c\x41\x4b\x5c\x41\x47\x46\x49\x5a\x51\x7b\x4d\x5c\x7e\x49\x44\x5d\x4d\x28",
        // "CFStringCompare" / M(Xor4) / S(132) / L(15)
        "\x03\x06\x13\x34\x32\x29\x2e\x27\x03\x2f\x2d\x30\x21\x32\x25\x40",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(133) / L(24)
        "\x66\x63\x61\x44\x51\x40\x63\x4a\x57\x48\x44\x51\x51\x40\x57\x76\x40\x51\x63\x4a\x57\x48\x44\x51\x25\x73\xec\x2c\xb1\xad\xa0\x15\xf1",
        // "" / M(None) / S(0) / L(0)
        "\xff\x31\xcb\xe3\xc3\xa8\x12\x44\xe1\x8e\x82\xaa\x9a\x9c\xf8\xf5\xb1\xc8\x27\x1f\xbd\xda\x51\x4f\x4f\x16\xd1\x9b\x69\xfb\x66\x89",
        // "" / M(None) / S(0) / L(0)
        "\x74\xa7\x54\x2e\x2b\x8e\x4b\x0e\x60\x93\x3c\x2a\xbe\x69\x02\x6c\x15\xa1\xbc\x96\x83\x82\x5b\x00\x15\x72\x05\x6a\x1f\xd2\x77\xf9",
        // "2.0.3" / M(Xor4) / S(18) / L(5)
        "\x12\x0e\x10\x0e\x13\x20\x7e\x55\xfd\x7f\x93\x50\x8b\x1b\x8c\x5d",
        // "" / M(None) / S(0) / L(0)
        "\x1d\xdd\x5d\x0f\xfa\xd7\xc8\x5e\x9b\x61\xdf\x1b\x45\xa0\x7d\x40\x0f\xc8\x71\xbd\x0f\x20\x33\x8e\x94\xa2\x82\x90\x2b\x00\x9f\x41",
        // "sha1" / M(Xor3) / S(115) / L(4)
        "\xf0\xeb\xe2\xb2\x83\x2e\x8d\x56\x4f\xd3\x74\x75\x80\x0c\xd7\x33",
        // "IORegistryEntryGetParentEntry" / M(Xor3) / S(103) / L(29)
        "\xc4\xc2\xdf\xe8\xea\xe4\xfe\xf9\xff\xf4\xc8\xe3\xf9\xff\xf4\xca\xe8\xf9\xdd\xec\xff\xe8\xe3\xf9\xc8\xe3\xf9\xff\xf4\x8d\x30\x6c\xe2\x29\x57\x6f\xa7\x3d",
        // "" / M(None) / S(0) / L(0)
        "\x30\xc5\x69\xc7\x45\x40\x4c\x70\xee\x8d\x6b\xa9\xe3\xeb\xe0\x7f\xd9\xcb\x2e\x1d\x2c\x81\x38\xa5\x4d\xce\xd3\xf1\xb4\xd8\xb4\xc0",
        // "NSApplicationMain" / M(Xor1) / S(126) / L(17)
        "\x30\x2d\x3f\x0e\x0e\x12\x17\x1d\x1f\x0a\x17\x11\x10\x33\x1f\x17\x10\x7e",
        // "IORegistryEntryCreateCFProperty" / M(Rot) / S(205) / L(31)
        "\x16\x1c\x1f\x32\x34\x36\x40\x41\x3f\x46\x12\x3b\x41\x3f\x46\x10\x3f\x32\x2e\x41\x32\x10\x13\x1d\x3f\x3c\x3d\x32\x3f\x41\x46\xcd",
        // "" / M(None) / S(0) / L(0)
        "\x4c\xd3\xfb\xac\xba\x5e\x0c\x52\x24\x8a\xf9\x8f\xc7\x1a\xd0\x39\x50\x35\xba\x4d\x44\x00\xe0\xee\x82\x39\xfe\x1b\x89\x61\xf9\xeb",
        // "" / M(None) / S(0) / L(0)
        "\xd3\x8a\x5d\x4e\xa4\x50\xb4\x6d\x5b\x69\xc1\xed\x69\x70\x6a\x3e\xbc\x8e\x7c\x5d\x9c\xbd\xac\x9b\x71\xf1\xb4\x6c\xca\x6a\x26\xad",
        // "CFBundleGetIdentifier" / M(Xor2) / S(34) / L(21)
        "\x77\x72\x76\x41\x5a\x50\x58\x51\x73\x51\x40\x7d\x50\x51\x5a\x40\x5d\x52\x5d\x51\x46\x34",
        // "" / M(None) / S(0) / L(0)
        "\x09\xcd\x3f\xea\xfd\xa6\xf5\x20\x81\x55\x41\x5f\xb0\x6a\xba\x31\x63\x7c\xb1\x50\x22\x9e\x40\xb1\xe9\x36\x5b\x9f\xc8\x4d\x5c\x87",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(194) / L(36)
        "\x81\x84\x80\xb7\xac\xa6\xae\xa7\x85\xa7\xb6\x94\xa3\xae\xb7\xa7\x84\xad\xb0\x8b\xac\xa4\xad\x86\xab\xa1\xb6\xab\xad\xac\xa3\xb0\xbb\x89\xa7\xbb\xc2",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x16\xb5\x91\x84\xf6\xb7\x0f\x5f\x1d\x3f\xb6\xe5\x1d\xdb\xa5\x88\xef\xa2\x13\x2d\xad\x25\x14\x5c\x22\x9d\x15\xb1\xa4\xa1\xb6",
        // "" / M(None) / S(0) / L(0)
        "\xf1\xac\x23\xad\x75\x19\x14\x0e\x2a\x9b\x87\x52\xe1\xae\xe4\x96\xaf\xe5\x46\x6f\xf0\x48\x67\x4f\x69\x3e\xe9\xec\xf5\xbe\xd9\xcb",
        // "CFBundleUnloadExecutable" / M(Rot) / S(38) / L(24)
        "\x69\x6c\x68\x9b\x94\x8a\x92\x8b\x7b\x94\x92\x95\x87\x8a\x6b\x9e\x8b\x89\x9b\x9a\x87\x88\x92\x8b\x26\x03\x20\xad\xd6\x42\xf0\xa3\x37",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x4e\x65\xf9\xac\xfc\x5b\x5f\x96\xb8\xf4\xdc\x1e\xfe\x15\xd0\xb7\x94\x63\x91\x04\x0d\x0f\xc4\x03\xab\xd6\xbd\xbc\xba\xc7\xc3",
        // "CFStringCreateWithBytes" / M(Rot) / S(59) / L(23)
        "\x7e\x81\x8e\xaf\xad\xa4\xa9\xa2\x7e\xad\xa0\x9c\xaf\xa0\x92\xa4\xaf\xa3\x7d\xb4\xaf\xa0\xae\x3b\xa2\x7c\x18\x5d\x0f\xbf\xaf\x8a",
        // "" / M(None) / S(0) / L(0)
        "\xbe\x9f\x45\x1d\x0e\x5b\xe8\x6a\x27\x8d\x65\x1a\x2e\xdc\x02\x16\x94\xf5\x9c\x96\x1e\x2a\x2f\x58\x3b\xe2\xd8\xbf\xe2\xc5\x6d\xd4",
        // "CFDateFormatterSetProperty" / M(Xor3) / S(168) / L(26)
        "\x88\x8d\x8f\xaa\xbf\xae\x8d\xa4\xb9\xa6\xaa\xbf\xbf\xae\xb9\x98\xae\xbf\x9b\xb9\xa4\xbb\xae\xb9\xbf\xb2\xcb\xb1\x89\x5a\x2e\x2d\xf5\xc0\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x82\x71\xeb\x84\xde\xf2\x61\x8a\xbf\x6c\xb6\x7f\x5a\x3c\x6f\x70\x05\x53\x7e\x55\xfd\x7f\x93\x50\x8b\x1b\x8c\x5d\x69\x26\x1a\x83",
        // "CFDataGetLength" / M(Xor1) / S(121) / L(15)
        "\x3a\x3f\x3d\x18\x0d\x18\x3e\x1c\x0d\x35\x1c\x17\x1e\x0d\x11\x79",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x66\xfd\x4e\x21\x69\x9e\xb0\xe3\x8b\xa8\x95\x28\xc9\x0c\xf3\x9a\x7f\xd1\x74\xc5\xf8\x9e\x25\x00\x7d\x34\x9a\x0b\x18\x54\x8e",
        // "BIO_free" / M(Xor3) / S(250) / L(8)
        "\x48\x43\x45\x55\x6c\x78\x6f\x6f\x0a\x2f\x50\x78\xd9\xb6\xca\x16",
        // "" / M(None) / S(0) / L(0)
        "\x41\x89\xd7\xa1\xbd\x25\x8e\x1a\x6d\x41\xdd\xa1\x2f\xb5\x36\x5a\xfd\x2f\x53\x9b\xf3\xb1\x17\x4b\xc5\x19\xc8\x6e\x88\xdd\xe5\xf9",
        // "" / M(None) / S(0) / L(0)
        "\x4b\x56\x2e\x40\x88\xb5\x72\x99\x5c\xe9\xd3\x2c\x5e\x1a\xae\x28\xa6\xbe\xa4\x46\x5e\x82\x19\x1f\x44\x84\x03\xb0\x8e\x31\x6f\xe7",
        // "SecCertificateCopyData" / M(Rot) / S(248) / L(22)
        "\x4b\x5d\x5b\x3b\x5d\x6a\x6c\x61\x5e\x61\x5b\x59\x6c\x5d\x3b\x67\x68\x71\x3c\x59\x6c\x59\xf8",
        // "IORegistryEntryGetParentEntry" / M(Xor1) / S(192) / L(29)
        "\x89\x8f\x92\xa5\xa7\xa9\xb3\xb4\xb2\xb9\x85\xae\xb4\xb2\xb9\x87\xa5\xb4\x90\xa1\xb2\xa5\xae\xb4\x85\xae\xb4\xb2\xb9\xc0\x33\x04\x22\x77\xd3\x34\x85\x54",
        // "IOMACAddress" / M(Xor1) / S(245) / L(12)
        "\xbc\xba\xb8\xb4\xb6\xb4\x91\x91\x87\x90\x86\x86\xf5\x20\x4c\xa3",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(242) / L(40)
        "\x64\x63\x63\x37\x67\x30\x64\x64\x60\x31\x67\x6b\x61\x33\x62\x6a\x34\x34\x67\x6a\x36\x63\x66\x33\x37\x60\x60\x66\x67\x60\x36\x63\x6b\x6a\x36\x34\x64\x31\x64\x62\x52\x54\x55\xb7\xff\x6b\x19\xee\xab",
        // "alloc" / M(Rot) / S(48) / L(5)
        "\x91\x9c\x9c\x9f\x93\x30\xbf\x6d\x09\x0a\xf9\xc9\x9c\xf3\x0e\xff",
        // "Contents" / M(Rot) / S(53) / L(8)
        "\x78\xa4\xa3\xa9\x9a\xa3\xa9\xa8\x35\xd9\x64\x9c\x21\xe6\xef\x6b",
        // "" / M(None) / S(0) / L(0)
        "\x28\xac\x8f\x1c\x86\x81\x12\x91\x83\xa8\xc4\xeb\x41\x50\xcb\xc1\xe6\xf4\xdc\xf6\xa3\x0d\x47\x58\xc5\xbf\x2f\x74\x01\x0a\x1c\x67",
        // "" / M(None) / S(0) / L(0)
        "\xfd\xdf\x6c\x3d\xbb\xf7\x2d\x51\xdd\x99\x38\xa8\xd9\xd4\x92\x2c\x8f\xd8\xed\x3a\x1c\xdb\xc7\xeb\x0f\xb2\x3b\xb4\xb3\xb4\x4b\xd1",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(4) / L(25)
        "\xb9\xa6\xba\xa6\xb0\xbc\xb8\xa6\xb9\xb9\xbb\xbe\xbb\xbd\xa6\xb9\xb8\xb8\xa6\xbe\xa6\xb9\xb9\xa6\xb9\x88\x4f\x6f\xb6\xab\x8c\xe0\x98\xe5",
        // "exit" / M(Xor4) / S(200) / L(4)
        "\xe5\xf8\xe9\xf4\x80\xfd\x07\x09\x53\x1b\x5f\xf1\x51\x73\x8a\x9b",
        // "SHA1_Update" / M(Xor2) / S(230) / L(11)
        "\xa5\xbe\xb7\xc7\xa9\xa3\x86\x92\x97\x82\x93\xf6\x2c\x81\x38\xa5",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(240) / L(24)
        "\xb3\xb6\xb1\x92\x83\x9f\x9c\x85\x84\x95\xa4\x99\x9d\x95\xb7\x95\x84\xb3\x85\x82\x82\x95\x9e\x84\xf0\xf3\xcb\xf6\x56\x9e\x3f\x51\x8f",
        // "longjmp" / M(Rot) / S(191) / L(7)
        "\x2b\x2e\x2d\x26\x29\x2c\x2f\xbf\xe7\x82\x52\xa9\xe6\x4f\xe2\x68",
        // "X509_STORE_add_cert" / M(Xor3) / S(181) / L(19)
        "\x91\xfc\xf9\xf0\x96\x9a\x9d\x86\x9b\x8c\x96\xa8\xad\xad\x96\xaa\xac\xbb\xbd\xc9",
        // "glob" / M(Xor1) / S(37) / L(4)
        "\x42\x49\x4a\x47\x25\x39\xe8\x2e\x62\x7d\x56\xd9\xa4\xcc\xd5\xe1",
        // "IOBSDNameMatching" / M(Xor4) / S(196) / L(17)
        "\x81\x87\x8a\x9b\x8c\x86\xa9\xa5\xad\x85\xa9\xbc\xab\xa0\xa1\xa6\xaf\xc8",
        // "EVP_MD_CTX_init" / M(Xor4) / S(232) / L(15)
        "\xc5\xd6\xd0\xdf\xcd\xc4\xdf\xc3\xd4\xd8\xdf\xe9\xee\xe9\xf4\x80",
        // "dlopen" / M(Rot) / S(113) / L(6)
        "\xd5\xdd\xe0\xe1\xd6\xdf\x71\x03\xf0\x94\x7e\xcb\xcc\x61\x01\x84",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(46) / L(39)
        "\x6d\x68\x7b\x7c\x62\x6d\x5c\x4b\x4f\x5a\x4b\x68\x5c\x41\x43\x68\x47\x42\x4b\x7d\x57\x5d\x5a\x4b\x43\x7c\x4b\x5e\x5c\x4b\x5d\x4b\x40\x5a\x4f\x5a\x47\x41\x40\x2e\xf7\xe5\x80\xb6\x08\x2a\x60\xa3",
        // "PKCS7_verify" / M(Xor3) / S(237) / L(12)
        "\xad\xb6\xbe\xae\xca\xa2\x8b\x98\x8f\x94\x9b\x84\xfd\x70\x6a\xe6",
        // "CC_SHA1_Init" / M(Xor2) / S(151) / L(12)
        "\xc4\xc4\xd8\xd4\xcf\xc6\xb6\xd8\xce\xe9\xee\xf3\x87\x02\x9a\x5c",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(225) / L(22)
        "\xce\x94\x92\x93\xce\x8d\x88\x83\xce\x8d\x88\x83\x8e\x83\x8b\x82\xcf\x85\x98\x8d\x88\x83\xe1",
        // "PKCS7_free" / M(Rot) / S(190) / L(10)
        "\x0e\x09\x01\x11\xf5\x1d\x24\x30\x23\x23\xbe\x3c\x60\xb1\xb4\xaf",
        // "SecCertificateCopyData" / M(Rot) / S(16) / L(22)
        "\x63\x75\x73\x53\x75\x82\x84\x79\x76\x79\x73\x71\x84\x75\x53\x7f\x80\x89\x54\x71\x84\x71\x10",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(125) / L(59)
        "\xb3\xae\xb7\xae\xc2\xb7\xb2\xbf\xb7\xb3\xb3\xb7\xaf\xc0\xb7\xb2\xb6\xb7\xb0\xbe\xb7\xad\xb5\xb7\xc3\xc3\xb7\xb2\xb5\xb7\xc1\xae\xb7\xb1\xbe\xb7\xc2\xaf\xb7\xaf\xb1\xb7\xb2\xaf\xb7\xc1\xae\xb7\xb6\xb5\xb7\xc1\xc3\xb7\xb3\xc0\xb7\xb3\xad\x7d\xb0\xd1\xcf\xcd\x3c\xd9\x92\x11",
        // "IOMasterPort" / M(Rot) / S(64) / L(12)
        "\x89\x8f\x8d\xa1\xb3\xb4\xa5\xb2\x90\xaf\xb2\xb4\x40\x01\x58\x6f",
        // "%02x:" / M(Xor4) / S(94) / L(5)
        "\xc5\xd0\xd2\x98\xda\xe0\x53\x9b\xf3\xb1\x17\x4b\xc5\x19\xc8\x6e",
        // "glob_b" / M(Xor2) / S(27) / L(6)
        "\x6c\x67\x64\x69\x54\x69\x0b\x79\xfc\x46\xac\xcc\xb8\x36\x2c\x9a",
        // "CFRelease" / M(Xor2) / S(230) / L(9)
        "\xb5\xb0\xa4\x93\x9a\x93\x97\x85\x93\xf6\x77\x00\x83\x3e\x28\x42",
        // "BIO_free" / M(Xor4) / S(135) / L(8)
        "\x32\x39\x3f\x2f\x16\x02\x15\x15\x70\xa9\x68\xbd\xa1\x9d\x51\x77",
        // "kSecReturnRef" / M(Xor4) / S(181) / L(13)
        "\x3b\x03\x35\x33\x02\x35\x24\x25\x22\x3e\x02\x35\x36\x50\x59\x7b",
        // "sk_value" / M(Xor1) / S(68) / L(8)
        "\x37\x2f\x1b\x32\x25\x28\x31\x21\x44\x9d\x5e\xa1\x98\x99\x8d\x30",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(23) / L(24)
        "\x9c\xb4\xb1\xb3\x96\x83\x92\xb1\x98\x85\x9a\x96\x83\x83\x92\x85\xa3\x9e\x9a\x92\xad\x98\x99\x92\xf7\x61\x86\x01\x6b\x83\xb5\xf7\x0b",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor1) / S(145) / L(43)
        "\xd2\xd7\xc4\xc3\xdd\xd2\xe3\xf4\xf0\xe5\xf4\xc6\xf8\xe5\xf9\xd7\xf8\xfd\xf4\xc2\xe8\xe2\xe5\xf4\xfc\xc1\xf0\xe5\xf9\xc3\xf4\xfd\xf0\xe5\xf8\xe7\xf4\xc5\xfe\xd3\xf0\xe2\xf4\x91\xf4\x95\x65\xab\x76\xe5\xf2\x30",
        // "CFDataGetBytePtr" / M(Rot) / S(115) / L(16)
        "\xb6\xb9\xb7\xd4\xe7\xd4\xba\xd8\xe7\xb5\xec\xe7\xd8\xc3\xe7\xe5\x73",
        // "EVP_DigestFinal" / M(Xor1) / S(243) / L(15)
        "\xb6\xa5\xa3\xac\xb7\x9a\x94\x96\x80\x87\xb5\x9a\x9d\x92\x9f\xf3",
        // "" / M(None) / S(0) / L(0)
        "\xc7\x44\x24\x6d\x09\xb4\x06\x58\xcc\x6f\x14\xf8\xe7\x4f\x97\x40\x07\xac\x4a\x4a\xa2\x31\xeb\x8f\xd1\xc9\xa4\xc1\xe3\x42\x40\xb2",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(185) / L(37)
        "\xea\xdc\xda\xf2\xdc\xc0\xda\xd1\xd8\xd0\xd7\xea\xdc\xd8\xcb\xda\xd1\xfa\xcb\xdc\xd8\xcd\xdc\xff\xcb\xd6\xd4\xf8\xcd\xcd\xcb\xd0\xdb\xcc\xcd\xdc\xca\xb9",
        // "" / M(None) / S(0) / L(0)
        "\x42\x09\x03\xfd\xdc\xe7\xcc\x3d\x08\x01\xe9\xeb\xb8\xdd\x46\x7c\x8e\xec\x3a\x55\x68\x30\x14\x09\xe5\xa7\x73\x8c\xd3\x0a\xbf\xbb",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(208) / L(22)
        "\xdb\xf3\xf6\xf2\xc5\xde\xd4\xdc\xd5\xf9\xd4\xd5\xde\xc4\xd9\xd6\xd9\xd5\xc2\xfb\xd5\xc9\xb0",
        // "." / M(Xor3) / S(190) / L(1)
        "\xe0\xce\x43\xd5\x28\x87\x2c\x3b\x2f\x5b\x89\xa0\x3b\xce\x76\xbb",
        // "CFDateCompare" / M(Xor1) / S(236) / L(13)
        "\xaf\xaa\xa8\x8d\x98\x89\xaf\x83\x81\x9c\x8d\x9e\x89\xec\xeb\x01",
        // "IOMACAddress" / M(Xor1) / S(12) / L(12)
        "\x45\x43\x41\x4d\x4f\x4d\x68\x68\x7e\x69\x7f\x7f\x0c\x09\xb3\xcb",
        // "kSecMatchSearchList" / M(Xor2) / S(200) / L(19)
        "\xb7\x8f\xb9\xbf\x91\xbd\xa8\xbf\xb4\x8f\xb9\xbd\xae\xbf\xb4\x90\xb5\xaf\xa8\xdc",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(253) / L(23)
        "\xb2\x8d\x98\x93\xae\xae\xb1\xa2\x9c\x99\x99\xa2\x9c\x91\x91\xa2\x99\x94\x9a\x98\x8e\x89\x8e\xfd\x77\xa5\x53\xd0\x7b\x30\x1f\x9e",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(38) / L(16)
        "\xe5\xb4\xef\xd9\xc7\xd5\xc8\xb7\xd9\xcf\xc8\xd2\xc3\xc1\xc3\xd4\x86",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(119) / L(59)
        "\x05\x02\x09\x02\x56\x09\x06\x51\x09\x05\x05\x09\x01\x50\x09\x06\x0a\x09\x00\x52\x09\x03\x0b\x09\x55\x55\x09\x06\x0b\x09\x57\x02\x09\x07\x52\x09\x56\x01\x09\x01\x07\x09\x06\x01\x09\x57\x02\x09\x0a\x0b\x09\x57\x55\x09\x05\x50\x09\x05\x03\x33\xf6\x99\x5d\xa9\x87\xbe\x12\x19",
        // "OpenSSL_add_all_digests" / M(Rot) / S(33) / L(23)
        "\x70\x91\x86\x8f\x74\x74\x6d\x80\x82\x85\x85\x80\x82\x8d\x8d\x80\x85\x8a\x88\x86\x94\x95\x94\x21\xcd\xa4\xb8\xf0\x30\x0b\x57\x2e",
        // "" / M(None) / S(0) / L(0)
        "\x98\x7a\x2e\x9c\x9c\x2b\xb3\xf9\xb4\x1c\x24\x77\xf5\xc6\xa2\x09\x92\x48\x66\xd9\x12\x24\x2b\x0c\x68\x85\x1e\xef\x0c\xdc\x22\xb1",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(132) / L(26)
        "\xe4\xe1\xe3\xc6\xd3\xc2\xe1\xc8\xd5\xca\xc6\xd3\xd3\xc2\xd5\xf4\xc2\xd3\xf7\xd5\xc8\xd7\xc2\xd5\xd3\xde\xa7\x50\xc5\xa6\xc0\xd8\x5c\x7b\x51",
        // "com.treasurebox.gear" / M(Rot) / S(183) / L(20)
        "\x1a\x26\x24\xe5\x2b\x29\x1c\x18\x2a\x2c\x29\x1c\x19\x26\x2f\xe5\x1e\x1c\x18\x29\xb7",
        // "." / M(Xor1) / S(119) / L(1)
        "\x59\x77\x1a\x83\x8e\x66\xfd\x4e\x21\x69\x9e\xb0\xe3\x8b\xa8\x95",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(22) / L(14)
        "\x68\x6a\x62\x5a\x75\x63\x57\x5f\x64\x75\x65\x64\x62\x6f\x16\x4c",
        // "IOBSDNameMatching" / M(Xor4) / S(197) / L(17)
        "\x93\x95\x98\x89\x9e\x94\xbb\xb7\xbf\x97\xbb\xae\xb9\xb2\xb3\xb4\xbd\xda",
        // "EVP_get_digestbyname" / M(Xor1) / S(127) / L(20)
        "\x3a\x29\x2f\x20\x18\x1a\x0b\x20\x1b\x16\x18\x1a\x0c\x0b\x1d\x06\x11\x1e\x12\x1a\x7f",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(96) / L(19)
        "\xd8\xb5\xb0\xb9\xdf\xe7\xe5\xf4\xdf\xe5\xf8\xf4\xdf\xe2\xf9\xdf\xcf\xc2\xca\x80",
        // "" / M(None) / S(0) / L(0)
        "\x92\xf5\x0e\x0a\x2b\xf0\xf5\x33\x12\x2b\x1a\x52\xec\x4c\x0e\x9e\x3d\xb2\x25\xcb\xf6\x99\x5d\xa9\x87\xbe\x12\x19\x37\x75\x70\x17",
        // "CFDataGetBytePtr" / M(Xor3) / S(203) / L(16)
        "\x9f\x9a\x98\xbd\xa8\xbd\x9b\xb9\xa8\x9e\xa5\xa8\xb9\x8c\xa8\xae\xdc",
        // "%02x:" / M(Xor1) / S(124) / L(5)
        "\x59\x4c\x4e\x04\x46\x7c\x81\xa4\x92\x12\xb2\xdb\xe5\x78\x13\xec",
        // "" / M(None) / S(0) / L(0)
        "\xd0\x49\x2e\x8d\xd2\x64\xe1\xa9\xaa\x20\xdd\x49\x17\x4f\x05\x3c\x9d\xa1\xa5\xa7\x47\x10\x39\xe0\x8d\x61\x6b\x56\x9c\x76\x3b\x18",
        // "" / M(None) / S(0) / L(0)
        "\x20\xce\x0e\x1b\x17\xd2\x3b\x29\xc1\xe0\xeb\xac\x26\x7c\xa4\x77\x07\x3c\xd0\x5a\xb8\x99\x50\x4a\xb0\xd1\xcf\xcd\x3c\xd9\x92\x11",
        // "EVP_DigestUpdate" / M(Xor1) / S(165) / L(16)
        "\xe0\xf3\xf5\xfa\xe1\xcc\xc2\xc0\xd6\xd1\xf0\xd5\xc1\xc4\xd1\xc0\xa5",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(143) / L(39)
        "\xcc\xc9\xdb\xe6\xe2\xea\xd5\xe0\xe1\xea\xcc\xfd\xea\xee\xfb\xea\xd8\xe6\xfb\xe7\xdb\xe6\xe2\xea\xc6\xe1\xfb\xea\xfd\xf9\xee\xe3\xc9\xfd\xe0\xe2\xc8\xc2\xdb\x8f\x38\x2e\x11\x15\x69\xd0\x19\x40",
        // "" / M(None) / S(0) / L(0)
        "\xf7\x43\xe3\x03\x5a\xa6\xa8\xd7\xdc\x10\x19\xb7\xac\xba\xfd\x17\xee\xc6\x22\x36\x87\xb9\xce\x5b\x21\x40\x9f\xaf\x3b\x2e\x6a\xf0",
        // "CFStringCompare" / M(Xor3) / S(163) / L(15)
        "\xf0\xf5\xe0\xc7\xc1\xda\xdd\xd4\xf0\xdc\xde\xc3\xd2\xc1\xd6\xb3",
        // "" / M(None) / S(0) / L(0)
        "\x07\xf2\xde\xfd\xf8\xaf\x84\xd9\x94\x54\x55\xb7\xff\x6b\x19\xee\x19\x9c\x29\xab\x05\x4a\x38\x12\xd6\x40\x2f\x89\xb8\x48\x92\x74",
        // "SecKeychainOpen" / M(Xor4) / S(231) / L(15)
        "\x23\x15\x13\x3b\x15\x09\x13\x18\x11\x19\x1e\x3f\x00\x15\x1e\x70",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x43\xfa\xb3\xd5\x9b\x1b\x0a\x5a\x4a\x8e\x93\x81\x33\x03\xca\x6c\xdc\x0a\x68\x35\x7c\xc9\x57\x77\xc8\xab\x9a\xe2\x5e\x10\x52",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(88) / L(21)
        "\x05\x2d\x28\x3a\x17\x1e\x0b\x2f\x1c\x1c\x0f\x17\x2d\x0f\x02\x02\x2c\x0f\x0d\x05\x1d\x6e",
        // "" / M(None) / S(0) / L(0)
        "\xe9\x65\x01\xe3\x8b\x60\x63\x14\x7a\x9f\xe7\x82\x66\x49\xbf\x6d\x09\x0a\xf9\xc9\x9c\xf3\x0e\xff\xa9\x40\x3a\x14\x4e\x06\x3e\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x32\xa9\xda\xfb\xa0\xbb\x7b\xae\xa7\x33\x10\x9c\x8c\xa9\x79\x49\xc0\x75\x29\x84\x61\x9e\x14\x66\x73\xd3\x1c\x3c\xb5\xfc\xeb\x13",
        // "strncmp" / M(Xor2) / S(35) / L(7)
        "\x40\x47\x41\x5d\x50\x5e\x43\x33\x08\xb3\xf2\x43\x72\x10\xda\xf3",
        // "" / M(None) / S(0) / L(0)
        "\xf0\x6e\xf0\xaa\xa6\x34\xef\x0c\x5f\xce\x8d\x1c\x6e\xd4\x19\x16\x7f\xcc\x35\xa5\xee\x53\xef\x09\xbb\xb5\x36\xb8\x03\xd4\xb4\x05",
        // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(235) / L(25)
        "\x3c\x23\x3f\x23\x35\x39\x3d\x23\x3c\x3c\x3e\x3b\x3e\x38\x23\x3c\x3d\x3d\x23\x3b\x23\x3c\x3c\x23\x3c\x0d\x7d\x7e\x31\x2e\x49\x2b\x07\xdc",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(107) / L(40)
        "\x5d\x5a\x5a\x2e\x5e\x29\x5d\x5d\x59\x28\x5e\x52\x58\x2a\x5b\x53\x2d\x2d\x5e\x53\x2f\x5a\x5f\x2a\x2e\x59\x59\x5f\x5e\x59\x2f\x5a\x52\x53\x2f\x2d\x5d\x28\x5d\x5b\x6b\x5e\x10\x52\xe9\x65\x01\xe3\x14",
        // "CFReadStreamRead" / M(Xor2) / S(167) / L(16)
        "\xf5\xf0\xe4\xd3\xd7\xd2\xe5\xc2\xc4\xd3\xd7\xdb\xe4\xd3\xd7\xd2\xb6",
        // "IORegistryEntryCreateCFProperty" / M(Xor4) / S(50) / L(31)
        "\x09\x0f\x12\x25\x27\x29\x33\x34\x32\x39\x05\x2e\x34\x32\x39\x03\x32\x25\x21\x34\x25\x03\x06\x10\x32\x2f\x30\x25\x32\x34\x39\x40",
        // "CFBundleVersion" / M(Xor3) / S(199) / L(15)
        "\x94\x91\x95\xa2\xb9\xb3\xbb\xb2\x81\xb2\xa5\xa4\xbe\xb8\xb9\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x2c\xe0\x89\x52\x3b\x44\x9c\x54\x92\x4c\x82\x51\xfd\xd6\x19\x30\x2c\xdc\xcd\x40\x6b\xeb\x41\x6d\xf9\x2a\xce\xc0\x83\x1f\x6f\x5d",
        // "" / M(None) / S(0) / L(0)
        "\x06\x39\xa7\xd8\x64\x78\x1a\x7c\xce\x6c\x07\xe3\xde\x9a\xae\x18\x6e\x79\x86\x98\x05\xb1\x27\x60\xab\xbf\x69\xd6\xb3\x60\xf9\x9f",
        // "" / M(None) / S(0) / L(0)
        "\x39\x92\xec\x09\x45\xca\xd8\x55\x2d\x9e\xdc\xd8\x87\x84\xf6\xd9\x44\xb4\xb0\x38\x8d\x38\xc1\xf8\x97\x10\xe7\xd6\xf9\x16\xdc\xe7",
        // "start" / M(Xor4) / S(59) / L(5)
        "\xc3\xc4\xd1\xc2\xc4\xb0\x92\x5a\x58\xf4\x9d\xe6\x4c\x1d\x23\x01",
        // "PKCS7_get0_signers" / M(Xor4) / S(3) / L(18)
        "\x69\x72\x7a\x6a\x0e\x66\x5e\x5c\x4d\x09\x66\x4a\x50\x5e\x57\x5c\x4b\x4a\x39",
        // "EVP_DigestUpdate" / M(Rot) / S(13) / L(16)
        "\x52\x63\x5d\x6c\x51\x76\x74\x72\x80\x81\x62\x7d\x71\x6e\x81\x72\x0d",
        // "" / M(None) / S(0) / L(0)
        "\x86\xd0\x0d\x7b\x55\x05\xd5\x57\x6b\x2c\xa6\x3a\x59\x7d\x95\xf1\x7a\x2c\x60\x02\xdf\x5a\xee\x31\xbe\x61\xd4\x0c\x06\xc8\x28\xdc",
        // "sk_num" / M(Xor3) / S(72) / L(6)
        "\x2b\x33\x07\x36\x2d\x35\x58\x39\x50\x35\xba\x4d\x44\x00\xe0\xee",
        // "" / M(None) / S(0) / L(0)
        "\x9b\xf9\xcc\x55\xf8\xdb\xc3\x76\x7e\xc8\x58\xc0\x2e\x0e\xf7\x75\xad\x75\xe2\x36\x38\xa6\xfb\xc6\x3c\x5e\x22\xa4\xd2\x7c\xe2\x8f",
        // "CFDictionaryAddValue" / M(Xor2) / S(92) / L(20)
        "\x0a\x0f\x0d\x20\x2a\x3d\x20\x26\x27\x28\x3b\x30\x08\x2d\x2d\x1f\x28\x25\x3c\x2c\x49",
        // "" / M(None) / S(0) / L(0)
        "\x73\xdf\x36\x17\x4d\x13\xf9\xd6\xe7\x61\x29\xad\x77\xe8\xc1\x9c\xef\xb0\x9a\x90\x3c\x2e\x8d\x56\x4f\xd3\x74\x75\x80\x0c\xd7\x33",
        // "" / M(None) / S(0) / L(0)
        "\xc5\x10\xb2\xf2\xb0\x3c\xcf\xe0\x18\xf7\xc1\xe5\xb7\x30\x36\x54\x39\x7a\x06\x6d\x4e\x73\xa7\xad\xc5\x9a\x35\x39\x6c\x8f\xdc\x0a",
        // "CFDataGetLength" / M(Xor2) / S(181) / L(15)
        "\xe6\xe3\xe1\xc4\xd1\xc4\xe2\xc0\xd1\xe9\xc0\xcb\xc2\xd1\xcd\xa5",
        // "" / M(None) / S(0) / L(0)
        "\x70\xcf\x84\x48\x1b\xc9\x92\x5a\x58\xf4\x9d\xe6\x4c\x1d\x23\x01\x1b\xce\xa0\x53\x0d\x8b\x93\x79\xce\xdf\x26\x0c\x72\x9c\xb3\xdd",
        // "_MASReceipt" / M(Xor4) / S(209) / L(11)
        "\x4f\x5d\x51\x43\x42\x75\x73\x75\x79\x60\x64\x10\xb3\xb4\x4b\xd1",
        // "" / M(None) / S(0) / L(0)
        "\xfc\xfa\x28\x00\x99\xf0\x9f\xac\x5a\x27\x93\xda\xae\xf6\xc0\xc8\x5d\xe5\xe8\x6f\x5e\xe5\xbf\x8e\x0e\x50\xbc\x1a\x09\x3c\x3d\x36",
        // "" / M(None) / S(0) / L(0)
        "\x7c\x15\x41\x57\xfd\x52\xd7\x00\xa5\xd9\x21\x5d\xe7\x98\x7e\xcc\x47\x14\xad\xa4\x8b\x87\xdb\xd8\xac\x17\x61\xbd\xa7\xfb\xee\x21",
        // "EVP_get_digestbyname" / M(Rot) / S(84) / L(20)
        "\x99\xaa\xa4\xb3\xbb\xb9\xc8\xb3\xb8\xbd\xbb\xb9\xc7\xc8\xb6\xcd\xc2\xb5\xc1\xb9\x54",
        // "setDelegate:" / M(Xor3) / S(198) / L(12)
        "\xa5\xb3\xa2\x92\xb3\xba\xb3\xb1\xb7\xa2\xb3\xec\xd6\xe8\xc1\x9c",
        // "objc_msgSend" / M(Xor2) / S(47) / L(12)
        "\x50\x5d\x55\x5c\x60\x52\x4c\x58\x6c\x5a\x51\x5b\x3f\x02\x8e\x5c",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(111) / L(24)
        "\x40\x1a\x1c\x1d\x40\x03\x06\x0d\x40\x03\x06\x0d\x3c\x16\x1c\x1b\x0a\x02\x41\x0b\x16\x03\x06\x0d\x6f\x07\x70\x93\xe1\x2f\xbd\xd6\xf6",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(29) / L(26)
        "\x7d\x78\x6c\x5b\x5f\x5a\x6d\x4a\x4c\x5b\x5f\x53\x7d\x4c\x5b\x5f\x4a\x5b\x69\x57\x4a\x56\x78\x57\x52\x5b\x3e\xcb\x5e\xf9\x92\x76\x2c\x43\xe0",
        // "CFDateCompare" / M(Xor4) / S(88) / L(13)
        "\xc3\xc6\xc4\xe1\xf4\xe5\xc3\xef\xed\xf0\xe1\xf2\xe5\x80\x60\x8d",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(22) / L(32)
        "\xaf\xaf\xaf\xaf\xf1\xfb\xf1\x9b\x9b\xf1\xfb\xf1\xb2\xb2\xf1\x82\xf1\x9e\x9e\xf1\xec\xf1\xbb\xbb\xf1\xec\xf1\xa5\xa5\xf1\x8c\xf1\xd6",
        // "longjmp" / M(Xor4) / S(75) / L(7)
        "\xdc\xdf\xde\xd7\xda\xdd\xc0\xb0\x12\x30\x6d\x20\x2d\x8b\x06\xd9",
        // "CFArrayGetCount" / M(Xor3) / S(19) / L(15)
        "\x60\x65\x62\x51\x51\x42\x5a\x64\x46\x57\x60\x4c\x56\x4d\x57\x23",
        // "X509_digest" / M(Xor3) / S(91) / L(11)
        "\x33\x5e\x5b\x52\x34\x0f\x02\x0c\x0e\x18\x1f\x6b\x22\x9e\x40\xb1",
        // "" / M(None) / S(0) / L(0)
        "\x4f\xc6\x46\xc5\x31\x80\xa5\x3e\xfb\x45\x16\x75\xee\xda\x29\x52\x57\xa2\x4e\x7d\x77\x8d\x9f\x7f\xe9\x8b\x7b\xa9\xc9\xfe\xda\x74",
        // "kSecClassCertificate" / M(Xor4) / S(207) / L(20)
        "\x90\xa8\x9e\x98\xb8\x97\x9a\x88\x88\xb8\x9e\x89\x8f\x92\x9d\x92\x98\x9a\x8f\x9e\xfb",
        // "CFReadStreamClose" / M(Xor4) / S(83) / L(17)
        "\x95\x90\x84\xb3\xb7\xb2\x85\xa2\xa4\xb3\xb7\xbb\x95\xba\xb9\xa5\xb3\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x15\xa8\x81\xcc\xd5\xf1\x0a\xfa\x9e\xa9\x68\xbd\xa1\x9d\x51\x77\xb9\x10\xfd\xd5\x24\x66\xf1\xe9\x8c\x67\xde\x48\x08\x8a\xc3\x48",
        // "SHA1_Init" / M(Rot) / S(77) / L(9)
        "\xa0\x95\x8e\x7e\xac\x96\xbb\xb6\xc1\x4d\xa4\xd8\xd4\xed\xdf\x53",
        // "" / M(None) / S(0) / L(0)
        "\x27\x16\x28\xe5\x63\x8d\xb6\xb7\xc2\x75\xd3\xf5\xed\xb0\xef\x17\x24\x2e\x17\xcb\xfb\x4e\x6a\x78\x61\xd0\x6d\x80\xba\xef\x74\x95",
        // "SHA1_Init" / M(Xor1) / S(17) / L(9)
        "\x42\x59\x50\x20\x4e\x58\x7f\x78\x65\x11\x69\xc7\x45\x40\x4c\x70",
        // "" / M(None) / S(0) / L(0)
        "\x73\x7e\x29\x82\xff\x9d\x28\x18\x57\x6c\x9b\x78\x1e\xd0\x83\xf3\x95\x22\x37\x0c\xa0\x65\x25\xc0\x65\xc3\x1e\xa3\x0f\x2e\x2a\xd9",
        // "CFDateFormatterCreate" / M(Xor2) / S(171) / L(21)
        "\xfe\xfb\xf9\xdc\xc9\xd8\xfb\xd2\xcf\xd0\xdc\xc9\xc9\xd8\xcf\xfe\xcf\xd8\xdc\xc9\xd8\xbd",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(187) / L(66)
        "\xea\x0e\x34\x2e\x2f\x20\x28\xea\x07\x24\x1d\x2d\x1c\x2d\x34\xea\x01\x2d\x1c\x28\x20\x32\x2a\x2d\x26\x2e\xea\xfe\x2a\x2d\x20\x01\x2a\x30\x29\x1f\x1c\x2f\x24\x2a\x29\xe9\x21\x2d\x1c\x28\x20\x32\x2a\x2d\x26\xea\xfe\x2a\x2d\x20\x01\x2a\x30\x29\x1f\x1c\x2f\x24\x2a\x29\xbb",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(246) / L(31)
        "\xbd\x95\x90\x82\xaf\xa6\xb3\x92\xbf\xb5\xa2\xbf\xb9\xb8\xb7\xa4\xaf\x80\xb7\xba\xa3\xb3\x95\xb7\xba\xba\x94\xb7\xb5\xbd\xa5\xd6",
        // "kSecMatchSearchList" / M(Xor4) / S(48) / L(19)
        "\xab\x93\xa5\xa3\x8d\xa1\xb4\xa3\xa8\x93\xa5\xa1\xb2\xa3\xa8\x8c\xa9\xb3\xb4\xc0",
        // "SecCertificateCopyData" / M(Rot) / S(15) / L(22)
        "\x62\x74\x72\x52\x74\x81\x83\x78\x75\x78\x72\x70\x83\x74\x52\x7e\x7f\x88\x53\x70\x83\x70\x0f",
        // "CFBundleUnloadExecutable" / M(Xor1) / S(75) / L(24)
        "\x08\x0d\x09\x3e\x25\x2f\x27\x2e\x1e\x25\x27\x24\x2a\x2f\x0e\x33\x2e\x28\x3e\x3f\x2a\x29\x27\x2e\x4b\xc0\x55\x0d\x01\x22\xbb\xd1\xe7",
        // "" / M(None) / S(0) / L(0)
        "\x49\xd1\xcd\x75\xbd\x42\xde\xa6\x68\xa5\xfe\x91\x30\xa1\x38\x37\x34\x27\xed\x1a\xa1\x44\x72\x52\xe2\xe5\xd6\x51\xd1\x9e\x24\xe6",
        // "" / M(None) / S(0) / L(0)
        "\x33\xc5\xf4\x29\x85\x1c\xfe\xe5\xf8\x7d\xf0\xd5\x82\xf1\x18\xa1\xe5\x95\xad\xc0\x91\x1f\xfe\xef\x5c\x8b\xee\x76\xcb\x79\x39\x12",
        // "sha1" / M(Xor4) / S(192) / L(4)
        "\x73\x68\x61\x31\x00\x07\x40\x45\x3f\x10\xae\x09\xbe\x7f\xe7\x94",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor2) / S(40) / L(37)
        "\x5d\x6b\x6d\x45\x6b\x77\x6d\x66\x6f\x67\x60\x5d\x6b\x6f\x7c\x6d\x66\x4d\x7c\x6b\x6f\x7a\x6b\x48\x7c\x61\x63\x4f\x7a\x7a\x7c\x67\x6c\x7b\x7a\x6b\x7d\x0e",
        // "PKCS7_verify" / M(Rot) / S(245) / L(12)
        "\x45\x40\x38\x48\x2c\x54\x6b\x5a\x67\x5e\x5b\x6e\xf5\x5f\x80\xad",
        // "CFReadStreamClose" / M(Xor2) / S(111) / L(17)
        "\x3e\x3b\x2f\x18\x1c\x19\x2e\x09\x0f\x18\x1c\x10\x3e\x11\x12\x0e\x18\x7d",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor3) / S(194) / L(39)
        "\xb1\xb4\xa7\xa0\xbe\xb1\x80\x97\x93\x86\x97\xb4\x80\x9d\x9f\xb4\x9b\x9e\x97\xa1\x8b\x81\x86\x97\x9f\xa0\x97\x82\x80\x97\x81\x97\x9c\x86\x93\x86\x9b\x9d\x9c\xf2\x14\x73\xc6\xb7\x4f\x15\xf8\x83",
        // "BIO_write" / M(Xor2) / S(127) / L(9)
        "\x2d\x26\x20\x30\x18\x1d\x06\x1b\x0a\x6f\xcd\xfd\x5d\x44\xa3\x4b",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(206) / L(54)
        "\xe1\x9d\xb7\xbd\xba\xab\xa3\xe1\x82\xa7\xac\xbc\xaf\xbc\xb7\xe1\x88\xbc\xaf\xa3\xab\xb9\xa1\xbc\xa5\xbd\xe1\x9d\xab\xad\xbb\xbc\xa7\xba\xb7\xe0\xa8\xbc\xaf\xa3\xab\xb9\xa1\xbc\xa5\xe1\x9d\xab\xad\xbb\xbc\xa7\xba\xb7\xce",
        // "kSecMatchLimit" / M(Rot) / S(23) / L(14)
        "\x82\x6a\x7c\x7a\x64\x78\x8b\x7a\x7f\x63\x80\x84\x80\x8b\x17\xae",
        // "BIO_s_mem" / M(Xor2) / S(158) / L(9)
        "\xcc\xc7\xc1\xd1\xfd\xd1\xe3\xeb\xe3\x8e\xd3\xf5\xed\xb0\xef\x17",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(165) / L(22)
        "\xe6\xe3\xe4\xd7\xd7\xc4\xdc\xe2\xc0\xd1\xf3\xc4\xc9\xd0\xc0\xe4\xd1\xec\xcb\xc1\xc0\xdd\xa5",
        // "d2i_PKCS7_bio" / M(Xor2) / S(141) / L(13)
        "\xf9\xaf\xf4\xc2\xcd\xd6\xde\xce\xaa\xc2\xff\xf4\xf2\x9d\xa3\x6e",
        // "CFArrayAppendValue" / M(Xor4) / S(195) / L(18)
        "\x3a\x3f\x38\x0b\x0b\x18\x00\x38\x09\x09\x1c\x17\x1d\x2f\x18\x15\x0c\x1c\x79",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(156) / L(22)
        "\xf0\xf5\xf2\xc1\xc1\xd2\xca\xf4\xd6\xc7\xe5\xd2\xdf\xc6\xd6\xf2\xc7\xfa\xdd\xd7\xd6\xcb\xb3",
        // "" / M(None) / S(0) / L(0)
        "\x1e\xa2\x46\x6d\x5c\x12\xec\x96\x51\x51\x56\x5e\x74\xf3\xcb\xf6\x56\x9e\x3f\x51\x3f\x8d\x86\x8f\xf7\x2e\xca\x19\xa5\x68\x22\x5e",
        // "CFDataAppendBytes" / M(Xor2) / S(167) / L(17)
        "\xf6\xf3\xf1\xd4\xc1\xd4\xf4\xc5\xc5\xd0\xdb\xd1\xf7\xcc\xc1\xd0\xc6\xb5",
        // "" / M(None) / S(0) / L(0)
        "\xdc\xd4\xd5\xec\xeb\x89\x1b\xeb\x34\xd2\xdb\xb9\x97\xb8\x7d\x9a\x0f\x13\x1b\x62\x0d\xb3\xd7\x14\xdc\x29\xc1\x45\x32\xc7\x53\x0c",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(105) / L(24)
        "\x46\x1c\x1a\x1b\x46\x05\x00\x0b\x46\x05\x00\x0b\x3a\x10\x1a\x1d\x0c\x04\x47\x0d\x10\x05\x00\x0b\x69\x07\x74\xc9\x50\x25\xce\xf3\xb8",
        // "Apple Root CA" / M(Xor2) / S(140) / L(13)
        "\xdd\xec\xec\xf0\xf9\xbc\xce\xf3\xf3\xe8\xbc\xdf\xdd\x9c\x3e\x7d",
        // "setDelegate:" / M(Xor2) / S(141) / L(12)
        "\xee\xf8\xe9\xd9\xf8\xf1\xf8\xfa\xfc\xe9\xf8\xa7\x9d\x07\xd6\x2b",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(241) / L(31)
        "\xba\x92\x97\x85\xa8\xa1\xb4\x95\xb8\xb2\xa5\xb8\xbe\xbf\xb0\xa3\xa8\x87\xb0\xbd\xa4\xb4\x92\xb0\xbd\xbd\x93\xb0\xb2\xba\xa2\xd1",
        // "start" / M(Xor4) / S(207) / L(5)
        "\x83\x84\x91\x82\x84\xf0\xe0\xe7\x4c\xad\x01\x7c\x39\x60\xba\xfe",
        // "strlen" / M(Xor3) / S(181) / L(6)
        "\xb6\xb1\xb7\xa9\xa0\xab\xc5\x3e\xbc\x8e\x7c\x5d\x9c\xbd\xac\x9b",
        // "CFRelease" / M(Xor2) / S(180) / L(9)
        "\xe7\xe2\xf6\xc1\xc8\xc1\xc5\xd7\xc1\xa4\x93\xc5\x60\xd0\xe1\xcb",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(181) / L(24)
        "\x95\x90\x92\xb7\xa2\xb3\x90\xb9\xa4\xbb\xb7\xa2\xa2\xb3\xa4\x85\xb3\xa2\x90\xb9\xa4\xbb\xb7\xa2\xd6\x59\xc8\xdb\x20\x26\x5d\x5a\xf5",
        // "CFBundleGetMainBundle" / M(Rot) / S(186) / L(21)
        "\xfd\x00\xfc\x2f\x28\x1e\x26\x1f\x01\x1f\x2e\x07\x1b\x23\x28\xfc\x2f\x28\x1e\x26\x1f\xba",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x21\xd8\x48\x46\x41\x95\x1e\x54\x80\x4e\xd6\x8d\x52\xcb\x97\xe3\xf7\xa7\xfc\x28\x2f\xff\x95\x95\x3e\xfd\x83\xad\xa1\xf9\xdd",
        // "CFDataAppendBytes" / M(Xor2) / S(124) / L(17)
        "\x2d\x28\x2a\x0f\x1a\x0f\x2f\x1e\x1e\x0b\x00\x0a\x2c\x17\x1a\x0b\x1d\x6e",
        // "longjmp" / M(Xor2) / S(29) / L(7)
        "\x61\x62\x63\x6a\x67\x60\x7d\x0d\x55\x18\xba\xf6\x24\x57\x14\xc3",
        // "BIO_new" / M(Xor3) / S(156) / L(7)
        "\xee\xe5\xe3\xf3\xc2\xc9\xdb\xac\x8c\x67\xde\x48\x08\x8a\xc3\x48",
        // "" / M(None) / S(0) / L(0)
        "\x76\x4c\x77\x43\xcb\xd0\x00\x4a\x37\xbe\xe5\x1f\xca\x50\x38\xf7\xa5\xf3\xd0\x9e\x20\x47\x8f\xe1\x8f\xa7\x39\x34\x2f\x13\xcb\x0f",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor1) / S(4) / L(50)
        "\x2b\x57\x7d\x77\x70\x61\x69\x2b\x48\x6d\x66\x76\x65\x76\x7d\x2b\x42\x76\x65\x69\x61\x73\x6b\x76\x6f\x77\x2b\x45\x74\x74\x4f\x6d\x70\x2a\x62\x76\x65\x69\x61\x73\x6b\x76\x6f\x2b\x45\x74\x74\x4f\x6d\x70\x04",
        // "OBJ_txt2obj" / M(Xor2) / S(189) / L(11)
        "\xe2\xef\xe7\xf2\xd9\xd5\xd9\x9f\xc2\xcf\xc7\xad\x11\x4d\x04\x4d",
        // "Contents/_MASReceipt/receipt" / M(Xor3) / S(155) / L(28)
        "\x83\xaf\xae\xb4\xa5\xae\xb4\xb3\xef\x9f\x8d\x81\x93\x92\xa5\xa3\xa5\xa9\xb0\xb4\xef\xb2\xa5\xa3\xa5\xa9\xb0\xb4\xc0\xd4\x82\x09\x28\x65\x41\xf2\xd7",
        // "CFEqual" / M(Xor3) / S(88) / L(7)
        "\x2b\x2e\x2d\x19\x1d\x09\x04\x68\xae\xa4\xce\x75\x6c\x24\xdd\x75",
        // "CFDateFormatterSetProperty" / M(Xor1) / S(85) / L(26)
        "\x16\x13\x11\x34\x21\x30\x13\x3a\x27\x38\x34\x21\x21\x30\x27\x06\x30\x21\x05\x27\x3a\x25\x30\x27\x21\x2c\x55\x81\x75\x93\x5c\xb4\x8c\xe5\xab",
        // "" / M(None) / S(0) / L(0)
        "\x07\x10\x96\x3b\xf8\x6e\xc3\xb4\x00\xf6\x8b\x6d\x02\x03\x5c\xcb\xde\x0d\x99\x3f\xb9\x0a\xe1\x6e\x71\xfb\xbd\xde\x3d\x88\xbb\x0e",
        // "sk_num" / M(Xor4) / S(194) / L(6)
        "\x53\x4b\x7f\x4e\x55\x4d\x20\xa6\x6f\x22\x7c\x3b\x3f\x00\x08\x8b",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor2) / S(204) / L(57)
        "\xa1\xdd\xf7\xfd\xfa\xeb\xe3\xa1\xc2\xe7\xec\xfc\xef\xfc\xf7\xa1\xc5\xeb\xf7\xed\xe6\xef\xe7\xe0\xfd\xa1\xdd\xf7\xfd\xfa\xeb\xe3\xdc\xe1\xe1\xfa\xcd\xeb\xfc\xfa\xe7\xe8\xe7\xed\xef\xfa\xeb\xfd\xa0\xe5\xeb\xf7\xed\xe6\xef\xe7\xe0\x8e\x2d\x51\xdd\x99\x38\xa8\x2c\x92",
        // "X509_STORE_free" / M(Xor1) / S(9) / L(15)
        "\x51\x3c\x39\x30\x56\x5a\x5d\x46\x5b\x4c\x56\x6f\x7b\x6c\x6c\x09",
        // "kSecMatchSearchList" / M(Xor1) / S(169) / L(19)
        "\xc2\xfa\xcc\xca\xe4\xc8\xdd\xca\xc1\xfa\xcc\xc8\xdb\xca\xc1\xe5\xc0\xda\xdd\xa9",
        // "Contents/_MASReceipt" / M(Rot) / S(24) / L(20)
        "\x5b\x87\x86\x8c\x7d\x86\x8c\x8b\x47\x77\x65\x59\x6b\x6a\x7d\x7b\x7d\x81\x88\x8c\x18",
        // "X509_STORE_free" / M(Xor2) / S(250) / L(15)
        "\xb2\xdf\xda\xd3\xb5\xb9\xbe\xa5\xb8\xaf\xb5\x8c\x98\x8f\x8f\xea",
        // "dlsym" / M(Rot) / S(175) / L(5)
        "\x13\x1b\x22\x28\x1c\xaf\x8d\x0d\xa0\xa0\x22\x6b\xd0\xce\x49\xa2",
        // "X509_digest" / M(Xor4) / S(52) / L(11)
        "\x18\x75\x70\x79\x1f\x24\x29\x27\x25\x33\x34\x40\xc6\xad\x32\x81",
        // "CC_SHA1_Update" / M(Xor4) / S(181) / L(14)
        "\x13\x13\x0f\x03\x18\x11\x61\x0f\x05\x20\x34\x31\x24\x35\x50\xf0",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor1) / S(254) / L(43)
        "\xbd\xb8\xab\xac\xb2\xbd\x8c\x9b\x9f\x8a\x9b\xa9\x97\x8a\x96\xb8\x97\x92\x9b\xad\x87\x8d\x8a\x9b\x93\xae\x9f\x8a\x96\xac\x9b\x92\x9f\x8a\x97\x88\x9b\xaa\x91\xbc\x9f\x8d\x9b\xfe\x98\xb1\xf7\xcd\x84\xe8\xd5\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x3f\x8c\xff\x37\x96\x72\x21\x20\x6c\x4f\xcd\x74\xf7\x26\x9b\x1c\x7e\xca\x44\x4d\x1d\xdb\xae\xf9\x87\x32\x96\xa5\x45\xea\x30\xe5",
        // "CFReadStreamOpen" / M(Rot) / S(206) / L(16)
        "\x11\x14\x20\x33\x2f\x32\x21\x42\x40\x33\x2f\x3b\x1d\x3e\x33\x3c\xce",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(43) / L(14)
        "\x69\x6f\x77\x7f\x64\x76\x7a\x72\x75\x64\x74\x75\x77\x62\x3b\x41",
        // "SHA1_Final" / M(Xor3) / S(118) / L(10)
        "\xd5\xce\xc7\xb7\xd9\xc0\xef\xe8\xe7\xea\x86\xbd\x0f\x20\x33\x8e",
        // "CC_SHA1_Final" / M(Xor4) / S(147) / L(13)
        "\x73\x73\x6f\x63\x78\x71\x01\x6f\x76\x59\x5e\x51\x5c\x30\xed\x1a",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(146) / L(50)
        "\xea\x96\xbc\xb6\xb1\xa0\xa8\xea\x89\xac\xa7\xb7\xa4\xb7\xbc\xea\x83\xb7\xa4\xa8\xa0\xb2\xaa\xb7\xae\xb6\xea\x84\xb5\xb5\x8e\xac\xb1\xeb\xa3\xb7\xa4\xa8\xa0\xb2\xaa\xb7\xae\xea\x84\xb5\xb5\x8e\xac\xb1\xc5",
        // "PKCS7_get0_signers" / M(Xor2) / S(59) / L(18)
        "\x78\x63\x6b\x7b\x1f\x77\x4f\x4d\x5c\x18\x77\x5b\x41\x4f\x46\x4d\x5a\x5b\x28",
        // "" / M(None) / S(0) / L(0)
        "\x98\x21\xb7\x8e\xdf\x8a\x8e\x14\x7a\x43\xbd\xae\x64\xf5\xf1\x53\x2b\x02\xfb\x21\x1a\x40\xcc\x39\x65\xb9\x37\x1b\xc9\x15\xc5\x5f",
        // "kSecClass" / M(Xor4) / S(66) / L(9)
        "\x4b\x73\x45\x43\x63\x4c\x41\x53\x53\x20\xe8\x25\x72\x2b\x9d\x79",
        // "exit" / M(Xor4) / S(77) / L(4)
        "\xb5\xa8\xb9\xa4\xd0\x53\x8c\x53\x42\xdd\x8a\x08\xd3\xa4\xc0\x28",
        // "ASN1_OBJECT_free" / M(Xor1) / S(136) / L(16)
        "\xc9\xdb\xc6\xb9\xd7\xc7\xca\xc2\xcd\xcb\xdc\xd7\xee\xfa\xed\xed\x88",
        // "PKCS7_verify" / M(Xor3) / S(126) / L(12)
        "\xde\xc5\xcd\xdd\xb9\xd1\xf8\xeb\xfc\xe7\xe8\xf7\x8e\x61\x88\xfb",
        // "glob" / M(Xor2) / S(47) / L(4)
        "\x58\x53\x50\x5d\x3f\x37\x1f\x14\x73\x3d\x05\xc7\x11\x9d\xa9\x28",
        // "" / M(None) / S(0) / L(0)
        "\x35\x7b\x08\xa3\xae\x25\x82\xea\xa9\x8e\xfd\xe5\x15\xe2\xcc\x60\x22\x11\x82\x92\x5c\x03\x20\xad\xd6\x42\xf0\xa3\x00\x7a\xab\x37",
        // "IORegistryEntryCreateCFProperty" / M(Xor3) / S(69) / L(31)
        "\x2c\x2a\x37\x00\x02\x0c\x16\x11\x17\x1c\x20\x0b\x11\x17\x1c\x26\x17\x00\x04\x11\x00\x26\x23\x35\x17\x0a\x15\x00\x17\x11\x1c\x65",
        // "CFStringGetFileSystemRepresentation" / M(Rot) / S(237) / L(35)
        "\x30\x33\x40\x61\x5f\x56\x5b\x54\x34\x52\x61\x33\x56\x59\x52\x40\x66\x60\x61\x52\x5a\x3f\x52\x5d\x5f\x52\x60\x52\x5b\x61\x4e\x61\x56\x5c\x5b\xed",
        // "setDelegate:" / M(Xor4) / S(165) / L(12)
        "\x23\x35\x24\x14\x35\x3c\x35\x37\x31\x24\x35\x6a\x50\x41\x16\x40",
        // "X509_STORE_new" / M(Rot) / S(169) / L(14)
        "\x01\xde\xd9\xe2\x08\xfc\xfd\xf8\xfb\xee\x08\x17\x0e\x20\xa9\x26",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(155) / L(32)
        "\xc5\xc5\xc5\xc5\x9b\x91\x9b\xf1\xf1\x9b\x91\x9b\xd8\xd8\x9b\xe8\x9b\xf4\xf4\x9b\x86\x9b\xd1\xd1\x9b\x86\x9b\xcf\xcf\x9b\xe6\x9b\xbc",
        // "" / M(None) / S(0) / L(0)
        "\x55\xa9\x0f\x1c\xc5\x64\xc7\xf0\x20\x02\x52\x0a\x5a\x49\x09\x7f\x0d\xc1\x6d\x46\x6d\x31\x4f\x94\xbf\xdf\x2a\xbe\xc4\x98\x57\x71",
        // "CFDictionaryGetValue" / M(Xor3) / S(190) / L(20)
        "\x90\x95\x97\xba\xb0\xa7\xba\xbc\xbd\xb2\xa1\xaa\x94\xb6\xa7\x85\xb2\xbf\xa6\xb6\xd3",
        // "Contents/_MASReceipt/receipt" / M(Xor2) / S(92) / L(28)
        "\x3a\x16\x17\x0d\x1c\x17\x0d\x0a\x56\x26\x34\x38\x2a\x2b\x1c\x1a\x1c\x10\x09\x0d\x56\x0b\x1c\x1a\x1c\x10\x09\x0d\x79\xd8\x71\x9e\x72\x90\xc1\xe3\xc3",
        // "CFDictionaryCreateMutable" / M(Xor1) / S(72) / L(25)
        "\x0b\x0e\x0c\x21\x2b\x3c\x21\x27\x26\x29\x3a\x31\x0b\x3a\x2d\x29\x3c\x2d\x05\x3d\x3c\x29\x2a\x24\x2d\x48\x72\x23\xd5\x3b\x09\xfb\x30\x47",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(23) / L(39)
        "\x04\x01\x13\x2e\x2a\x22\x1d\x28\x29\x22\x04\x35\x22\x26\x33\x22\x10\x2e\x33\x2f\x13\x2e\x2a\x22\x0e\x29\x33\x22\x35\x31\x26\x2b\x01\x35\x28\x2a\x00\x0a\x13\x47\x83\x66\xf1\x8b\x82\x07\x8a\x97",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(65) / L(40)
        "\x47\x40\x40\x14\x44\x13\x47\x47\x43\x12\x44\x48\x42\x10\x41\x49\x17\x17\x44\x49\x15\x40\x45\x10\x14\x43\x43\x45\x44\x43\x15\x40\x48\x49\x15\x17\x47\x12\x47\x41\x71\x34\x1f\x43\x4b\x20\x28\x9f\xfe",
        // "CC_SHA1" / M(Xor1) / S(136) / L(7)
        "\xcb\xcb\xd7\xdb\xc0\xc9\xb9\x88\x15\x24\xa4\xa0\x30\x48\x45\x46",
        // "ASN1_INTEGER_free" / M(Xor1) / S(122) / L(17)
        "\x3b\x29\x34\x4b\x25\x33\x34\x2e\x3f\x3d\x3f\x28\x25\x1c\x08\x1f\x1f\x7a",
        // "" / M(None) / S(0) / L(0)
        "\xe4\x1f\x42\x67\x4a\xe1\x58\xe0\x90\x49\xd2\x75\xc6\x8b\xc6\x05\xe7\x7f\x21\x8e\x47\x79\x95\xa5\xe5\x20\xec\xa6\xe4\xb6\x47\xa6",
        // "CFDataCreateMutable" / M(Xor1) / S(130) / L(19)
        "\xc1\xc4\xc6\xe3\xf6\xe3\xc1\xf0\xe7\xe3\xf6\xe7\xcf\xf7\xf6\xe3\xe0\xee\xe7\x82",
        // "BIO_write" / M(Xor3) / S(243) / L(9)
        "\x41\x4a\x4c\x5c\x74\x71\x6a\x77\x66\x03\x75\x18\x2c\xc4\x06\xad",
        // "X509_STORE_add_cert" / M(Xor3) / S(85) / L(19)
        "\x31\x5c\x59\x50\x36\x3a\x3d\x26\x3b\x2c\x36\x08\x0d\x0d\x36\x0a\x0c\x1b\x1d\x69",
        // "" / M(None) / S(0) / L(0)
        "\xbb\x12\xb0\x25\x45\xf0\xcf\xcb\x60\x4e\x54\x6d\x84\x0e\xbe\x73\x4f\xa4\x64\x91\xe0\x26\xff\xd2\xe6\x78\xbf\x54\x14\x4c\x8f\x05",
        // "CFStringCreateWithBytes" / M(Xor1) / S(78) / L(23)
        "\x0d\x08\x1d\x3a\x3c\x27\x20\x29\x0d\x3c\x2b\x2f\x3a\x2b\x19\x27\x3a\x26\x0c\x37\x3a\x2b\x3d\x4e\x34\x1c\xca\xfd\x7d\x05\x3e\x34",
        // "BIO_new" / M(Xor3) / S(93) / L(7)
        "\x2f\x24\x22\x32\x03\x08\x1a\x6d\xd5\x2d\x4c\xd9\xa2\x26\x31\x0d",
        // "CFBundleShortVersionString" / M(Xor3) / S(220) / L(26)
        "\xbc\xb9\xbd\x8a\x91\x9b\x93\x9a\xac\x97\x90\x8d\x8b\xa9\x9a\x8d\x8c\x96\x90\x91\xac\x8b\x8d\x96\x91\x98\xff\x09\xbb\xb5\x36\xb8\x05\xb4\xd4",
        // "IORegistryEntryGetParentEntry" / M(Xor3) / S(11) / L(29)
        "\x78\x7e\x63\x54\x56\x58\x42\x45\x43\x48\x74\x5f\x45\x43\x48\x76\x54\x45\x61\x50\x43\x54\x5f\x45\x74\x5f\x45\x43\x48\x31\x81\xb7\xe7\xa8\x0d\x71\xb4\x5a",
        // "CFArrayCreateMutable" / M(Xor2) / S(224) / L(20)
        "\xb6\xb3\xb4\x87\x87\x94\x8c\xb6\x87\x90\x94\x81\x90\xb8\x80\x81\x94\x97\x99\x90\xf5",
        // "." / M(Rot) / S(14) / L(1)
        "\x3c\x0e\x4f\x4b\x72\x35\xac\xb6\x6f\x11\xf4\x5a\xa4\x22\x35\x21",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(249) / L(26)
        "\x48\x4d\x59\x6e\x6a\x6f\x58\x7f\x79\x6e\x6a\x66\x48\x79\x6e\x6a\x7f\x6e\x5c\x62\x7f\x63\x4d\x62\x67\x6e\x0b\x76\x3b\xa6\xfa\xb5\x34\x69\xaa",
        // "IOIteratorNext" / M(Xor1) / S(63) / L(14)
        "\x76\x70\x76\x4b\x5a\x4d\x5e\x4b\x50\x4d\x71\x5a\x47\x4b\x3f\x29",
        // "" / M(None) / S(0) / L(0)
        "\xaa\x3f\xa9\x7a\xc7\x1b\x85\x66\x8f\x21\xeb\x01\xfc\x65\x34\x13\x9a\x66\xfe\x31\xdf\x9b\x95\x45\x08\x52\x4a\x01\x5a\x14\xb4\x71",
        // "" / M(None) / S(0) / L(0)
        "\x24\xe6\x29\x7e\xff\x79\xfb\xd6\xbc\x60\xe5\x48\x5e\x45\xf7\x52\x64\x99\x43\xe4\x4b\xba\xd3\x1c\x76\x34\x28\xf3\x18\x8a\x7e\xf4",
        // "CFDateCreate" / M(Rot) / S(98) / L(12)
        "\xa5\xa8\xa6\xc3\xd6\xc7\xa5\xd4\xc7\xc3\xd6\xc7\x62\x84\x5d\x79",
        // "dlsym" / M(Xor4) / S(175) / L(5)
        "\x94\x9c\x83\x89\x9d\xf0\x3a\xa1\xca\xd0\x5d\x29\x5c\x14\x8e\x5a",
        // "CFBundleIdentifier" / M(Rot) / S(245) / L(18)
        "\x38\x3b\x37\x6a\x63\x59\x61\x5a\x3e\x59\x5a\x63\x69\x5e\x5b\x5e\x5a\x67\xf5",
        // "IOMasterPort" / M(Xor3) / S(107) / L(12)
        "\x32\x34\x36\x1a\x08\x0f\x1e\x09\x2b\x14\x09\x0f\x7b\x64\x25\x62",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(150) / L(29)
        "\xfd\xd5\xd0\xc2\xef\xe6\xf3\xd2\xff\xf5\xe2\xff\xf9\xf8\xf7\xe4\xef\xdd\xf3\xef\xd5\xf7\xfa\xfa\xd4\xf7\xf5\xfd\xe5\x96\xc3\x64\xc3\x5c\x35\x81\xb3\xee",
        // "CC_SHA1_Update" / M(Xor3) / S(216) / L(14)
        "\xab\xab\xb7\xbb\xa0\xa9\xd9\xb7\xbd\x98\x8c\x89\x9c\x8d\xe8\xc0",
        // "CFBundleIdentifier" / M(Xor3) / S(105) / L(18)
        "\x3f\x3a\x3e\x09\x12\x18\x10\x19\x35\x18\x19\x12\x08\x15\x1a\x15\x19\x0e\x7c",
        // "IOBSDNameMatching" / M(Xor3) / S(72) / L(17)
        "\x13\x15\x18\x09\x1e\x14\x3b\x37\x3f\x17\x3b\x2e\x39\x32\x33\x34\x3d\x5a",
        // "CFBundleShortVersionString" / M(Xor3) / S(123) / L(26)
        "\xdd\xd8\xdc\xeb\xf0\xfa\xf2\xfb\xcd\xf6\xf1\xec\xea\xc8\xfb\xec\xed\xf7\xf1\xf0\xcd\xea\xec\xf7\xf0\xf9\x9e\x70\xd1\xf4\x9b\x29\x76\x33\x79",
        // "kSecClassCertificate" / M(Xor3) / S(224) / L(20)
        "\x9e\xa6\x90\x96\xb6\x99\x94\x86\x86\xb6\x90\x87\x81\x9c\x93\x9c\x96\x94\x81\x90\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x76\x94\xa5\xcb\x1c\x84\x6c\x8f\x10\xe3\x1c\xa1\xd6\x77\xd4\x8e\x1a\xad\x3e\x0d\x35\xc3\xaf\x81\xbc\x80\x32\xfe\xe3\x89\xe2\xa4",
        // "%02X:" / M(Xor1) / S(202) / L(5)
        "\xef\xfa\xf8\x92\xf0\xca\x2e\x40\x88\xb5\x72\x99\x5c\xe9\xd3\x2c",
        // "" / M(None) / S(0) / L(0)
        "\x43\xb2\x70\xf8\x5e\x3f\x36\xbf\xff\xcb\x5a\x0c\x9f\xe2\xf1\x92\xf4\x59\xc8\xdb\x20\x26\x5d\x5a\xd6\xe8\x45\xf5\xe7\x41\x2f\xce",
        // "CFDataAppendBytes" / M(Xor2) / S(202) / L(17)
        "\x9b\x9e\x9c\xb9\xac\xb9\x99\xa8\xa8\xbd\xb6\xbc\x9a\xa1\xac\xbd\xab\xd8",
        // "IOMasterPort" / M(Rot) / S(150) / L(12)
        "\xdf\xe5\xe3\xf7\x09\x0a\xfb\x08\xe6\x05\x08\x0a\x96\x71\xd7\xad",
        // "CFDataGetLength" / M(Xor1) / S(97) / L(15)
        "\x22\x27\x25\x00\x15\x00\x26\x04\x15\x2d\x04\x0f\x06\x15\x09\x61",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(93) / L(66)
        "\x72\x0e\x24\x2e\x29\x38\x30\x72\x11\x34\x3f\x2f\x3c\x2f\x24\x72\x1b\x2f\x3c\x30\x38\x2a\x32\x2f\x36\x2e\x72\x1e\x32\x2f\x38\x1b\x32\x28\x33\x39\x3c\x29\x34\x32\x33\x73\x3b\x2f\x3c\x30\x38\x2a\x32\x2f\x36\x72\x1e\x32\x2f\x38\x1b\x32\x28\x33\x39\x3c\x29\x34\x32\x33\x5d",
        // "en0" / M(Xor1) / S(196) / L(3)
        "\xa1\xaa\xf4\xc4\x40\xad\x80\xdc\x42\x1e\xf1\x3e\x48\xb9\x5d\x2a",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(246) / L(37)
        "\xc7\xc2\xd1\xd6\xc8\xc7\xf6\xe1\xe5\xf0\xe1\xc7\xeb\xf4\xfd\xc5\xf4\xf4\xe1\xea\xe0\xed\xea\xe3\xd4\xe5\xf0\xec\xc7\xeb\xe9\xf4\xeb\xea\xe1\xea\xf0\x84",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(201) / L(35)
        "\x0c\x0f\x0d\x2a\x3d\x2e\x0f\x38\x3b\x36\x2a\x3d\x3d\x2e\x3b\x0c\x3b\x2e\x2a\x3d\x2e\x0d\x2a\x3d\x2e\x0f\x3b\x38\x36\x1c\x3d\x3b\x32\x37\x30\xc9",
        // "SKReceiptRefreshRequest" / M(Rot) / S(219) / L(23)
        "\x2e\x26\x2d\x40\x3e\x40\x44\x4b\x4f\x2d\x40\x41\x4d\x40\x4e\x43\x2d\x40\x4c\x50\x40\x4e\x4f\xdb\xc5\x9a\x35\x39\x6c\x8f\xdc\x0a",
        // "" / M(None) / S(0) / L(0)
        "\x5e\xf9\x5b\x34\x68\xb1\x64\xd3\xba\xe4\xe6\x97\xfd\x27\x49\x7a\x08\x94\xc6\x2f\x1d\x4a\x8e\x81\x75\x93\x5c\xb4\x27\xab\xe5\x8c",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x05\x35\x58\x9a\xcc\x97\x2e\xcd\x2c\xac\xd0\x97\x9f\xf7\x64\x9e\xd3\xb0\x29\x81\x31\x34\x37\x0a\x8e\xb9\x14\x1b\x65\x32\x59",
        // "CFArrayAppendValue" / M(Xor2) / S(145) / L(18)
        "\xc1\xc4\xc3\xf0\xf0\xe3\xfb\xc3\xf2\xf2\xe7\xec\xe6\xd4\xe3\xee\xf7\xe7\x82",
        // "CC_SHA1" / M(Rot) / S(30) / L(7)
        "\x61\x61\x7d\x71\x66\x5f\x4f\x1e\x0f\x2e\x2a\xd9\x49\xd1\xcd\x75",
        // "objc_getClass" / M(Xor3) / S(216) / L(13)
        "\x87\x8a\x82\x8b\xb7\x8f\x8d\x9c\xab\x84\x89\x9b\x9b\xe8\xde\xfc",
        // "X509_free" / M(Xor1) / S(164) / L(9)
        "\xfc\x91\x94\x9d\xfb\xc2\xd6\xc1\xc1\xa4\x8b\xfa\x2f\x98\x18\xa2",
        // "globfree" / M(Xor2) / S(234) / L(8)
        "\x9d\x96\x95\x98\x9c\x88\x9f\x9f\xfa\x8f\x39\xba\x3f\xf9\xdb\x35",
        // "" / M(None) / S(0) / L(0)
        "\x38\xd4\xde\x0c\xac\x56\x51\x3b\xc4\x5f\x71\x5a\x72\x6d\x2e\x6e\x17\x15\x0e\xa6\x5b\xd8\x58\xcc\x75\x54\xfb\x04\xef\x92\xc0\x24",
        // "" / M(None) / S(0) / L(0)
        "\x42\x2b\x55\x40\xce\x22\xb2\xbd\x96\xeb\xfb\x78\x30\x4c\x12\x36\x4b\xd1\xab\x5e\x48\xa0\xc1\x11\x34\x80\x28\x3c\x31\x51\x55\x53",
        // "CC_SHA1_Init" / M(Xor1) / S(19) / L(12)
        "\x50\x50\x4c\x40\x5b\x52\x22\x4c\x5a\x7d\x7a\x67\x13\xb7\xd5\x43",
        // "strlen" / M(Xor2) / S(89) / L(6)
        "\x3a\x3d\x3b\x25\x2c\x27\x49\xf2\x1b\x7d\x76\x38\xcd\x4f\xab\x8b",
        // "CFBundleCopyBundleURL" / M(Xor3) / S(71) / L(21)
        "\x1e\x1b\x1f\x28\x33\x39\x31\x38\x1e\x32\x2d\x24\x1f\x28\x33\x39\x31\x38\x08\x0f\x11\x5d",
        // "SecItemCopyMatching" / M(Rot) / S(64) / L(19)
        "\x93\xa5\xa3\x89\xb4\xa5\xad\x83\xaf\xb0\xb9\x8d\xa1\xb4\xa3\xa8\xa9\xae\xa7\x40",
        // "init" / M(Xor1) / S(199) / L(4)
        "\xae\xa9\xae\xb3\xc7\x5a\xee\x31\xbe\x61\xd4\x0c\x06\xc8\x28\xdc",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(214) / L(59)
        "\x2c\x2b\x20\x2b\x7f\x20\x2f\x78\x20\x2c\x2c\x20\x28\x79\x20\x2f\x23\x20\x29\x7b\x20\x2a\x22\x20\x7c\x7c\x20\x2f\x22\x20\x7e\x2b\x20\x2e\x7b\x20\x7f\x28\x20\x28\x2e\x20\x2f\x28\x20\x7e\x2b\x20\x23\x22\x20\x7e\x7c\x20\x2c\x79\x20\x2c\x2a\x1a\x5a\xc3\x5e\x46\xc6\xb2\x1c\x33",
        // "ASN1_OBJECT_free" / M(Xor3) / S(100) / L(16)
        "\x34\x26\x3b\x44\x2a\x3a\x37\x3f\x30\x36\x21\x2a\x13\x07\x10\x10\x75",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor1) / S(248) / L(57)
        "\xd7\xab\x81\x8b\x8c\x9d\x95\xd7\xb4\x91\x9a\x8a\x99\x8a\x81\xd7\xb3\x9d\x81\x9b\x90\x99\x91\x96\x8b\xd7\xab\x81\x8b\x8c\x9d\x95\xaa\x97\x97\x8c\xbb\x9d\x8a\x8c\x91\x9e\x91\x9b\x99\x8c\x9d\x8b\xd6\x93\x9d\x81\x9b\x90\x99\x91\x96\xf8\x82\xcf\x00\x50\x32\x44\xc9\xaa",
        // "Contents/_MASReceipt/receipt" / M(Xor4) / S(203) / L(28)
        "\x14\x38\x39\x23\x32\x39\x23\x24\x78\x08\x1a\x16\x04\x05\x32\x34\x32\x3e\x27\x23\x78\x25\x32\x34\x32\x3e\x27\x23\x57\x38\xc1\xf8\x97\x10\xe7\xd6\xe7",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(174) / L(59)
        "\xe4\xdf\xe8\xdf\x13\xe8\xe3\x10\xe8\xe4\xe4\xe8\xe0\x11\xe8\xe3\xe7\xe8\xe1\x0f\xe8\xde\xe6\xe8\x14\x14\xe8\xe3\xe6\xe8\x12\xdf\xe8\xe2\x0f\xe8\x13\xe0\xe8\xe0\xe2\xe8\xe3\xe0\xe8\x12\xdf\xe8\xe7\xe6\xe8\x12\x14\xe8\xe4\x11\xe8\xe4\xde\xae\x49\x5a\x11\x88\x20\xd8\xb7\x88",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(243) / L(40)
        "\xb5\xb2\xb2\xc6\xb6\xc1\xb5\xb5\xb1\xc0\xb6\xba\xb0\xc2\xb3\xbb\xc5\xc5\xb6\xbb\xc7\xb2\xb7\xc2\xc6\xb1\xb1\xb7\xb6\xb1\xc7\xb2\xba\xbb\xc7\xc5\xb5\xc0\xb5\xb3\x83\x66\x67\x9a\xcd\xaf\x24\x1c\x69",
        // "setjmp" / M(Xor2) / S(159) / L(6)
        "\xfc\xea\xfb\xe5\xe2\xff\x8f\x6c\x15\xa1\xbc\x96\x83\x82\x5b\x00",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(119) / L(29)
        "\x1c\x34\x31\x23\x0e\x07\x12\x33\x1e\x14\x03\x1e\x18\x19\x16\x05\x0e\x3c\x12\x0e\x34\x16\x1b\x1b\x35\x16\x14\x1c\x04\x77\x07\x87\xfc\xd7\x53\x00\xb9\x8e",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor1) / S(208) / L(54)
        "\xff\x83\xa9\xa3\xa4\xb5\xbd\xff\x9c\xb9\xb2\xa2\xb1\xa2\xa9\xff\x96\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xa3\xff\x83\xb5\xb3\xa5\xa2\xb9\xa4\xa9\xfe\xb6\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xff\x83\xb5\xb3\xa5\xa2\xb9\xa4\xa9\xd0",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(212) / L(32)
        "\xad\xad\xad\xad\xf3\xf9\xf3\x99\x99\xf3\xf9\xf3\xb0\xb0\xf3\x80\xf3\x9c\x9c\xf3\xee\xf3\xb9\xb9\xf3\xee\xf3\xa7\xa7\xf3\x8e\xf3\xd4",
        // "CFEqual" / M(Xor3) / S(2) / L(7)
        "\x51\x54\x57\x63\x67\x73\x7e\x12\x9a\x4e\x0c\x3f\x42\x96\x0a\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x5a\x59\xbd\xf6\xf2\x5a\x10\x33\xc5\x67\x8f\x40\x9b\x4b\xb9\x22\x78\x35\x2b\x63\x9a\x4e\x0c\x3f\x42\x96\x0a\x4d\x6c\x09\xfa\x78",
        // "" / M(None) / S(0) / L(0)
        "\xb6\x8c\x36\xab\x83\x4e\xae\xe9\x59\x3f\x43\x02\x74\x6a\xdf\x92\xb6\x21\x42\xc1\x2f\x08\xbe\xbd\x1c\xe8\x8f\xf2\xff\xcd\xb9\xca",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xad\x36\xb0\x3c\xeb\x4f\x6a\xa6\x6a\xdd\xd5\xcf\x32\x73\xd6\xfc\x5f\xb4\x1f\x7d\x52\x41\x34\x04\x17\x2f\x2e\x54\x41\x4d\x7c",
        // "CFStringGetFileSystemRepresentation" / M(Xor3) / S(170) / L(35)
        "\x8d\x88\x9d\xba\xbc\xa7\xa0\xa9\x89\xab\xba\x88\xa7\xa2\xab\x9d\xb7\xbd\xba\xab\xa3\x9c\xab\xbe\xbc\xab\xbd\xab\xa0\xba\xaf\xba\xa7\xa1\xa0\xce",
        // "IOServiceGetMatchingServices" / M(Xor1) / S(112) / L(28)
        "\x39\x3f\x23\x15\x02\x06\x19\x13\x15\x37\x15\x04\x3d\x11\x04\x13\x18\x19\x1e\x17\x23\x15\x02\x06\x19\x13\x15\x03\x70\x8e\x8b\x17\x4b\x7d\xdc\xbf\xd3",
        // "CFReadStreamRead" / M(Xor4) / S(2) / L(16)
        "\x61\x64\x70\x47\x43\x46\x71\x56\x50\x47\x43\x4f\x70\x47\x43\x46\x22",
        // "SecKeychainSearchCopyNext" / M(Xor3) / S(16) / L(25)
        "\x61\x57\x51\x79\x57\x4b\x51\x5a\x53\x5b\x5c\x61\x57\x53\x40\x51\x5a\x71\x5d\x42\x4b\x7c\x57\x4a\x46\x32\x7f\xd9\xe6\x1d\xc5\xb5\xf9\xd7",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(246) / L(21)
        "\x9d\xb5\xb0\xa2\x8f\x86\x93\xb7\x84\x84\x97\x8f\xb5\x97\x9a\x9a\xb4\x97\x95\x9d\x85\xf6",
        // "CC_SHA1" / M(Xor2) / S(100) / L(7)
        "\x37\x37\x2b\x27\x3c\x35\x45\x74\xa6\xbf\x07\xc0\x22\x2d\x2f\x77",
        // "Apple Root CA" / M(Xor4) / S(240) / L(13)
        "\x41\x70\x70\x6c\x65\x20\x52\x6f\x6f\x74\x20\x43\x41\x00\x7b\xae",
        // "2.0.3" / M(Xor3) / S(75) / L(5)
        "\x69\x75\x6b\x75\x68\x5b\xb7\xd8\x34\x0d\xa6\x7a\x32\x8a\x59\x28",
        // "d2i_X509_bio" / M(Xor4) / S(50) / L(12)
        "\x44\x12\x49\x7f\x78\x15\x10\x19\x7f\x42\x49\x4f\x20\x86\x9b\xbd",
        // "ASN1_INTEGER_free" / M(Xor4) / S(77) / L(17)
        "\x2b\x39\x24\x5b\x35\x23\x24\x3e\x2f\x2d\x2f\x38\x35\x0c\x18\x0f\x0f\x6a",
        // "kSecMatchLimitAll" / M(Xor3) / S(16) / L(17)
        "\x49\x71\x47\x41\x6f\x43\x56\x41\x4a\x6e\x4b\x4f\x4b\x56\x63\x4e\x4e\x22",
        // "kCFDateFormatterTimeZone" / M(Xor2) / S(14) / L(24)
        "\x44\x6c\x69\x6b\x4e\x5b\x4a\x69\x40\x5d\x42\x4e\x5b\x5b\x4a\x5d\x7b\x46\x42\x4a\x75\x40\x41\x4a\x2f\xa3\x36\x97\x02\x52\xdb\x8e\x81",
        // "Contents/_MASReceipt" / M(Xor4) / S(214) / L(20)
        "\xcd\xe1\xe0\xfa\xeb\xe0\xfa\xfd\xa1\xd1\xc3\xcf\xdd\xdc\xeb\xed\xeb\xe7\xfe\xfa\x8e",
        // "glob" / M(Xor3) / S(204) / L(4)
        "\xbb\xb0\xb3\xbe\xdc\x8b\x3a\x16\x51\x64\xc1\xc7\xcf\xe2\x81\xb3",
        // "" / M(None) / S(0) / L(0)
        "\x55\xcb\xa3\x75\x00\x64\x4b\x8e\x8a\x20\xc7\x4c\x69\x1a\x3f\x23\x6b\xb8\x4c\xb7\x98\x62\x56\xd4\xd3\x00\x22\x70\x58\xfa\xe3\xdc",
        // "BIO_s_mem" / M(Xor2) / S(226) / L(9)
        "\xb0\xbb\xbd\xad\x81\xad\x9f\x97\x9f\xf2\x42\x14\xe2\x5a\x7a\xcb",
        // "OpenSSL_add_all_digests" / M(Xor3) / S(17) / L(23)
        "\x7e\x41\x54\x5f\x62\x62\x7d\x6e\x50\x55\x55\x6e\x50\x5d\x5d\x6e\x55\x58\x56\x54\x42\x45\x42\x31\xe3\x5f\x54\x99\x4d\x3c\xc6\xb5",
        // "%02X:" / M(Xor4) / S(247) / L(5)
        "\x55\x40\x42\x28\x4a\x70\x1c\x6d\x14\x11\xe3\xc3\x73\x59\x5c\x5f",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(14) / L(19)
        "\x56\x3b\x3e\x37\x51\x69\x6b\x7a\x51\x6b\x76\x7a\x51\x6c\x77\x51\x41\x4c\x44\x0e",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(173) / L(29)
        "\xc6\xee\xeb\xf9\xd4\xdd\xc8\xe9\xc4\xce\xd9\xc4\xc2\xc3\xcc\xdf\xd4\xe6\xc8\xd4\xee\xcc\xc1\xc1\xef\xcc\xce\xc6\xde\xad\x15\x53\x60\x32\x39\x7f\xce\x2e",
        // "%02x" / M(Rot) / S(142) / L(4)
        "\xb3\xbe\xc0\x06\x8e\x7f\xd1\x74\xc5\xf8\x9e\x25\x00\x7d\x34\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x8b\xc9\xef\x4f\xf1\xe2\x7b\xb8\xb1\x01\x6f\xac\x5a\x07\x98\xe5\x00\x2a\xc9\x9d\x02\x2b\xfa\x21\x28\x6e\xdd\x09\x2d\x42\xae\x3b",
        // "IOServiceGetMatchingServices" / M(Xor3) / S(183) / L(28)
        "\x95\x93\x8f\xb9\xae\xaa\xb5\xbf\xb9\x9b\xb9\xa8\x91\xbd\xa8\xbf\xb4\xb5\xb2\xbb\x8f\xb9\xae\xaa\xb5\xbf\xb9\xaf\xdc\x93\x16\x4c\xa6\x07\xda\x81\x67",
        // "kSecReturnRef" / M(Xor2) / S(130) / L(13)
        "\xf9\xc1\xf7\xf1\xc0\xf7\xe6\xe7\xe0\xfc\xc0\xf7\xf4\x92\x3a\xf3",
        // "EVP_MD_CTX_init" / M(Xor3) / S(56) / L(15)
        "\x0d\x1e\x18\x17\x05\x0c\x17\x0b\x1c\x10\x17\x21\x26\x21\x3c\x48",
        // "SHA1_Final" / M(Xor4) / S(95) / L(10)
        "\xa3\xb8\xb1\xc1\xaf\xb6\x99\x9e\x91\x9c\xf0\xc6\xf6\x0d\x41\xd1",
        // "" / M(None) / S(0) / L(0)
        "\x06\x1a\x67\x67\xa1\x1d\xa8\x7b\xf2\x0e\x29\xb4\xd3\x79\xf1\xe4\x5d\xe1\x69\x1d\x21\x60\xbf\x42\xd1\x33\x06\x80\x46\xe1\x4d\xfd",
        // "" / M(None) / S(0) / L(0)
        "\x0f\x33\x1b\x02\xa2\x7c\x18\x5d\x0f\xbf\xaf\x8a\xa9\xed\x49\x14\xfe\xe7\xcc\x4c\x9c\xd5\xbd\x56\xf6\xb8\x90\x7b\x0f\xdb\x24\xac",
        // "globfree" / M(Xor3) / S(9) / L(8)
        "\x7e\x75\x76\x7b\x7f\x6b\x7c\x7c\x19\xdb\x37\xc7\x51\xbc\x73\x4c",
        // "kSecClass" / M(Xor4) / S(135) / L(9)
        "\x1b\x23\x15\x13\x33\x1c\x11\x03\x03\x70\x24\x80\xea\x70\x36\xca",
        // "" / M(None) / S(0) / L(0)
        "\x56\xb0\xab\xf2\x91\x20\x7b\x81\xa7\x04\x30\x86\x6c\xfd\xbd\xc3\x5b\x62\xf6\x12\xfc\x1d\xe3\x19\xcd\x38\xab\xff\x4b\x97\x18\x2c",
        // "EVP_DigestInit" / M(Xor3) / S(59) / L(14)
        "\x0e\x1d\x1b\x14\x0f\x22\x2c\x2e\x38\x3f\x02\x25\x22\x3f\x4b\x0c",
        // "SKReceiptRefreshRequest" / M(Rot) / S(164) / L(23)
        "\xf7\xef\xf6\x09\x07\x09\x0d\x14\x18\xf6\x09\x0a\x16\x09\x17\x0c\xf6\x09\x15\x19\x09\x17\x18\xa4\x23\x1a\x26\x15\x7d\x6b\xd0\xf8",
        // "X509_STORE_new" / M(Xor2) / S(171) / L(14)
        "\xe3\x8e\x8b\x82\xe4\xe8\xef\xf4\xe9\xfe\xe4\xd5\xde\xcc\xbb\x44",
        // "" / M(None) / S(0) / L(0)
        "\x99\x9a\xd9\x2a\x9e\xb6\xc6\xf4\x35\xf9\x97\x48\x93\x83\xa2\x3b\xf2\xdf\x5b\x9b\x8c\xd6\x4f\x1e\x85\xf2\xa4\x38\x87\x48\x18\x18",
        // "sk_num" / M(Xor4) / S(199) / L(6)
        "\x03\x1b\x2f\x1e\x05\x1d\x70\xd4\xf2\xa9\x3f\x4f\x8e\xc2\xdb\x23",
        // "CFDictionarySetValue" / M(Xor1) / S(110) / L(20)
        "\x2d\x28\x2a\x07\x0d\x1a\x07\x01\x00\x0f\x1c\x17\x3d\x0b\x1a\x38\x0f\x02\x1b\x0b\x6e",
        // "SHA1" / M(Rot) / S(162) / L(4)
        "\xf5\xea\xe3\xd3\xa2\x7a\x0b\xfc\x98\x83\x77\xda\xc9\xcb\x7e\x61",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x97\x9d\x1c\xdd\x4b\x28\x9c\xeb\xa5\x5b\x95\x0a\x47\xcc\x42\x0f\x64\x08\xaf\x8b\x00\x0d\x18\xea\x44\x48\xdf\x83\x66\xf1\x8b",
        // "SHA1_Update" / M(Xor2) / S(173) / L(11)
        "\xee\xf5\xfc\x8c\xe2\xe8\xcd\xd9\xdc\xc9\xd8\xbd\x78\xbb\xc7\x54",
        // "en0" / M(Xor3) / S(195) / L(3)
        "\xb6\xbd\xe3\xd3\xc2\x5d\x8c\xdc\x98\x26\xc7\x2f\x21\x66\x14\x93",
        // "CFBundleCopyBundleURL" / M(Xor3) / S(95) / L(21)
        "\x36\x33\x37\x00\x1b\x11\x19\x10\x36\x1a\x05\x0c\x37\x00\x1b\x11\x19\x10\x20\x27\x39\x75",
        // "receipt" / M(Xor2) / S(1) / L(7)
        "\x63\x74\x72\x74\x78\x61\x65\x11\x3c\x5e\x22\xa4\xd2\x7c\xe2\x8f",
        // "SHA1" / M(Xor2) / S(42) / L(4)
        "\x69\x72\x7b\x0b\x3a\x92\xb2\x0b\x51\x23\x7a\x15\x34\xf7\x7d\xd5",
        // "" / M(None) / S(0) / L(0)
        "\x82\x07\x8a\x97\x18\x10\x93\x77\x82\xa1\x53\xaa\xe7\xf2\xbb\xbd\xcb\xce\xaa\x10\x4c\xe7\x25\xc8\x40\x48\xf1\x04\x2a\xeb\xae\x3d",
        // "CFBundleGetMainBundle" / M(Xor2) / S(78) / L(21)
        "\x1b\x1e\x1a\x2d\x36\x3c\x34\x3d\x1f\x3d\x2c\x15\x39\x31\x36\x1a\x2d\x36\x3c\x34\x3d\x58",
        // "" / M(None) / S(0) / L(0)
        "\x76\xca\x2b\xcb\xa2\xca\xfd\x1b\xc3\x40\x3c\x42\x2b\x68\x24\x4e\x69\x66\x97\x7d\xb7\xc5\x9b\xad\x33\x8d\x39\xcf\x9f\xca\x3d\xa5",
        // "_MASReceipt/receipt" / M(Rot) / S(204) / L(19)
        "\x2b\x19\x0d\x1f\x1e\x31\x2f\x31\x35\x3c\x40\xfb\x3e\x31\x2f\x31\x35\x3c\x40\xcc",
        // "" / M(None) / S(0) / L(0)
        "\x5e\x90\x1e\x05\xb4\x58\xf6\xdd\x2e\x1a\x1f\xc0\xe2\x3c\x89\x89\x91\x98\xc5\x00\x42\xdd\xe8\xb9\xc3\x40\x54\x46\x0e\xe0\x2e\xe2",
        // "en0" / M(Rot) / S(149) / L(3)
        "\xfa\x03\xc5\x95\x55\x05\xd5\x57\x6b\x2c\xa6\x3a\x59\x7d\x95\xf1",
        // "" / M(None) / S(0) / L(0)
        "\x62\x1a\xa6\x0e\x06\xff\x2d\x4e\xd6\x5a\x05\x2d\xc3\x78\xd9\xe1\xe0\xe1\xac\x0d\x01\xb9\x4a\x95\x22\xd2\x74\x4d\xf4\x20\x10\xf3",
        // "" / M(None) / S(0) / L(0)
        "\xd5\xdb\xaa\x0e\x09\xe3\xd1\x7d\xa3\x20\x6c\x6b\xf7\xde\x3b\x11\x0e\xf9\x20\xbe\x37\x5d\x7a\x73\xdc\xd3\x86\x64\x2e\x3b\x35\x7e",
        // "IOIteratorNext" / M(Rot) / S(248) / L(14)
        "\x41\x47\x41\x6c\x5d\x6a\x59\x6c\x67\x6a\x46\x5d\x70\x6c\xf8\x0f",
        // "glob_b" / M(Xor4) / S(204) / L(6)
        "\xa7\xac\xaf\xa2\x9f\xa2\xc0\x94\x19\xf2\x2d\x94\xa3\x48\x31\xa2",
        // "receipt" / M(Rot) / S(208) / L(7)
        "\x42\x35\x33\x35\x39\x40\x44\xd0\x3d\xc9\xa0\x19\x8e\xde\xaa\xd6",
        // "CFDateCompare" / M(Xor4) / S(99) / L(13)
        "\x73\x76\x74\x51\x44\x55\x73\x5f\x5d\x40\x51\x42\x55\x30\x82\x84",
        // "PKCS7_get0_signers" / M(Rot) / S(41) / L(18)
        "\x79\x74\x6c\x7c\x60\x88\x90\x8e\x9d\x59\x88\x9c\x92\x90\x97\x8e\x9b\x9c\x29",
        // "" / M(None) / S(0) / L(0)
        "\x4a\x3e\x93\xd3\xe2\xad\xca\x22\xfc\x35\xf3\x82\x45\x98\x90\x3a\x9e\x65\x22\x0e\xf1\xc2\xff\x03\xf0\x94\x7e\xcb\xcc\x61\x01\x84",
        // "ASN1_INTEGER_get" / M(Xor1) / S(152) / L(16)
        "\xd9\xcb\xd6\xa9\xc7\xd1\xd6\xcc\xdd\xdf\xdd\xca\xc7\xff\xfd\xec\x98",
        // "receipt" / M(Rot) / S(95) / L(7)
        "\xd1\xc4\xc2\xc4\xc8\xcf\xd3\x5f\xfe\xa8\x4d\x49\x66\x63\x18\x3c",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(76) / L(19)
        "\x00\x6d\x68\x61\x07\x3f\x3d\x2c\x07\x3d\x20\x2c\x07\x3a\x21\x07\x17\x1a\x12\x58",
        // "ASN1_get_object" / M(Rot) / S(123) / L(15)
        "\xbc\xce\xc9\xac\xda\xe2\xe0\xef\xda\xea\xdd\xe5\xe0\xde\xef\x7b",
        // "ASN1_get_object" / M(Xor4) / S(226) / L(15)
        "\x61\x73\x6e\x11\x7f\x47\x45\x54\x7f\x4f\x42\x4a\x45\x43\x54\x20",
        // "CFRelease" / M(Rot) / S(148) / L(9)
        "\xd7\xda\xe6\xf9\x00\xf9\xf5\x07\xf9\x94\xfa\x21\x28\x6e\xdd\x09",
        // "" / M(None) / S(0) / L(0)
        "\x51\xa2\x5b\x44\xd1\xad\x3a\xa1\xca\xd0\x5d\x29\x5c\x14\x8e\x5a\xf8\x07\x8c\xe4\x64\x83\xd4\x0f\x3e\xbc\x0d\xf7\x6e\x8c\x6c\xe0",
        // "" / M(None) / S(0) / L(0)
        "\x2a\xb0\x94\x44\xc5\x6a\x7a\xd3\x40\x99\x54\xdd\xf5\xd9\x0b\x34\x1d\xc2\x22\xdd\x58\xdb\x20\x35\x97\x98\x68\x9b\xac\x33\x4f\x7a",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(7) / L(39)
        "\x74\x71\x63\x5e\x5a\x52\x6d\x58\x59\x52\x74\x45\x52\x56\x43\x52\x60\x5e\x43\x5f\x63\x5e\x5a\x52\x7e\x59\x43\x52\x45\x41\x56\x5b\x71\x45\x58\x5a\x70\x7a\x63\x37\xd2\x5b\x1b\x05\xab\x91\x4b\x89",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(145) / L(66)
        "\xfd\x81\xab\xa1\xa6\xb7\xbf\xfd\x9e\xbb\xb0\xa0\xb3\xa0\xab\xfd\x94\xa0\xb3\xbf\xb7\xa5\xbd\xa0\xb9\xa1\xfd\x91\xbd\xa0\xb7\x94\xbd\xa7\xbc\xb6\xb3\xa6\xbb\xbd\xbc\xfc\xb4\xa0\xb3\xbf\xb7\xa5\xbd\xa0\xb9\xfd\x91\xbd\xa0\xb7\x94\xbd\xa7\xbc\xb6\xb3\xa6\xbb\xbd\xbc\xd2",
        // "CFBundleUnloadExecutable" / M(Rot) / S(99) / L(24)
        "\xa6\xa9\xa5\xd8\xd1\xc7\xcf\xc8\xb8\xd1\xcf\xd2\xc4\xc7\xa8\xdb\xc8\xc6\xd8\xd7\xc4\xc5\xcf\xc8\x63\x6e\xf0\xd9\xe0\x15\x3d\x55\xdc",
        // "EVP_DigestFinal" / M(Rot) / S(147) / L(15)
        "\xd8\xe9\xe3\xf2\xd7\xfc\xfa\xf8\x06\x07\xd9\xfc\x01\xf4\xff\x93",
        // "" / M(None) / S(0) / L(0)
        "\x2a\xaf\xae\x46\xee\xe8\x5b\x6a\x43\x56\xd6\x9d\xab\xa1\x4c\xa6\x87\x51\x79\x6c\xab\x99\xbe\xea\x32\x6b\x00\x45\x3b\xa6\x90\x48",
        // "" / M(None) / S(0) / L(0)
        "\xa8\xdd\x30\xe3\x14\xee\xc5\x79\xc6\xd4\xd0\x5f\xbe\xab\x7b\x5f\xce\x53\x8c\x53\x42\xdd\x8a\x08\xd3\xa4\xc0\x28\xf3\xa7\xd8\x9f",
        // "alloc" / M(Xor2) / S(180) / L(5)
        "\xc5\xc8\xc8\xcb\xc7\xa4\x36\x52\x09\x46\x1d\x63\xd4\x78\xe2\x94",
        // "SecKeychainOpen" / M(Xor1) / S(22) / L(15)
        "\x45\x73\x75\x5d\x73\x6f\x75\x7e\x77\x7f\x78\x59\x66\x73\x78\x16",
        // "EVP_MD_CTX_init" / M(Xor3) / S(171) / L(15)
        "\xfe\xed\xeb\xe4\xf6\xff\xe4\xf8\xef\xe3\xe4\xd2\xd5\xd2\xcf\xbb",
        // "CC_SHA1_Final" / M(Xor3) / S(30) / L(13)
        "\x6d\x6d\x71\x7d\x66\x6f\x1f\x71\x68\x47\x40\x4f\x42\x2e\x87\x7e",
        // "" / M(None) / S(0) / L(0)
        "\x1c\x39\xe8\x2e\x62\x7d\x56\xd9\xa4\xcc\xd5\xe1\xef\x36\xd3\x34\x14\x3d\xdb\x69\x4f\x36\x8f\x38\x94\x82\x77\xd0\xb2\x0d\x81\x0a",
        // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(145) / L(24)
        "\xf2\xf7\xf0\xd3\xc2\xde\xdd\xc4\xc5\xd4\xe5\xd8\xdc\xd4\xf6\xd4\xc5\xf2\xc4\xc3\xc3\xd4\xdf\xc5\xb1\x2b\x20\x13\x4a\x54\x42\x99\x97",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(122) / L(22)
        "\x55\x0f\x09\x08\x55\x16\x13\x18\x55\x16\x13\x18\x15\x18\x10\x19\x54\x1e\x03\x16\x13\x18\x7a",
        // "com.treasurebox.gear" / M(Xor3) / S(179) / L(20)
        "\xab\xa7\xa5\xe6\xbc\xba\xad\xa9\xbb\xbd\xba\xad\xaa\xa7\xb0\xe6\xaf\xad\xa9\xba\xc8",
        // "IOIteratorNext" / M(Xor2) / S(13) / L(14)
        "\x54\x52\x54\x69\x78\x6f\x7c\x69\x72\x6f\x53\x78\x65\x69\x1d\x6c",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(29) / L(37)
        "\x00\x05\x16\x11\x0f\x00\x31\x26\x22\x37\x26\x00\x2c\x33\x3a\x02\x33\x33\x26\x2d\x27\x2a\x2d\x24\x13\x22\x37\x2b\x00\x2c\x2e\x33\x2c\x2d\x26\x2d\x37\x43",
        // "objc_msgSend" / M(Xor4) / S(78) / L(12)
        "\x8f\x82\x8a\x83\xbf\x8d\x93\x87\xb3\x85\x8e\x84\xe0\x90\x45\x54",
        // "X509_STORE_add_cert" / M(Rot) / S(59) / L(19)
        "\x93\x70\x6b\x74\x9a\x8e\x8f\x8a\x8d\x80\x9a\x9c\x9f\x9f\x9a\x9e\xa0\xad\xaf\x3b",
        // "CFDataGetBytePtr" / M(Xor4) / S(104) / L(16)
        "\xab\xae\xac\x89\x9c\x89\xaf\x8d\x9c\xaa\x91\x9c\x8d\xb8\x9c\x9a\xe8",
        // "" / M(None) / S(0) / L(0)
        "\xfd\x17\x02\xfb\x32\xdb\x37\xc7\x51\xbc\x73\x4c\x30\x3e\x1e\x04\x41\xd0\xf9\x88\x8e\xe3\xc0\xee\xde\xde\x36\xa9\xd0\x5e\x3b\xea",
        // "IOObjectRelease" / M(Xor3) / S(208) / L(15)
        "\xa9\xaf\xaf\x82\x8a\x85\x83\x94\xb2\x85\x8c\x85\x81\x93\x85\xe0",
        // "CC_SHA1_Update" / M(Xor3) / S(140) / L(14)
        "\xdf\xdf\xc3\xcf\xd4\xdd\xad\xc3\xc9\xec\xf8\xfd\xe8\xf9\x9c\x83",
        // "" / M(None) / S(0) / L(0)
        "\x2a\x33\x50\x65\x01\x4c\xfe\xf6\x84\x8d\x5d\xa7\x8b\xd6\x5a\x6c\x87\x2d\xf3\x83\xf9\x8a\x45\x56\x24\x5e\x2e\x38\x57\x01\x58\x6f",
        // "CFBundleCopyBundleURL" / M(Xor4) / S(172) / L(21)
        "\x8b\x8e\x8a\xbd\xa6\xac\xa4\xad\x8b\xa7\xb8\xb1\x8a\xbd\xa6\xac\xa4\xad\x9d\x9a\x84\xc8",
        // "" / M(None) / S(0) / L(0)
        "\x3f\x2a\x37\xa6\x1d\x7f\x47\xe5\x5d\x64\xd4\xaf\x04\xe8\x27\x6f\x3e\xb7\x6a\x85\xa0\xa2\xc5\xa9\x4b\xef\x8e\x76\x47\xaa\x96\xdc",
        // "CFReadStreamOpen" / M(Xor1) / S(19) / L(16)
        "\x50\x55\x41\x76\x72\x77\x40\x67\x61\x76\x72\x7e\x5c\x63\x76\x7d\x13",
        // "CFBundleGetIdentifier" / M(Xor2) / S(108) / L(21)
        "\x39\x3c\x38\x0f\x14\x1e\x16\x1f\x3d\x1f\x0e\x33\x1e\x1f\x14\x0e\x13\x1c\x13\x1f\x08\x7a",
        // "objc_getClass" / M(Xor1) / S(155) / L(13)
        "\xf4\xf9\xf1\xf8\xc4\xfc\xfe\xef\xd8\xf7\xfa\xe8\xe8\x9b\x5a\x76",
        // "" / M(None) / S(0) / L(0)
        "\x8d\x59\x6c\x58\xf3\xfc\xbb\xff\xaf\x64\xac\x7b\x5a\xec\xa5\x41\x43\xb1\xa4\x74\x9b\x5e\xbb\x01\xb0\x51\x60\x3c\xf3\x77\x57\xbe",
        // "Apple Root CA" / M(Rot) / S(179) / L(13)
        "\xf4\x23\x23\x1f\x18\xd3\x05\x22\x22\x27\xd3\xf6\xf4\xb3\x1d\x9d",
        // "CFArrayCreateMutable" / M(Xor3) / S(211) / L(20)
        "\xab\xae\xa9\x9a\x9a\x89\x91\xab\x9a\x8d\x89\x9c\x8d\xa5\x9d\x9c\x89\x8a\x84\x8d\xe8",
        // "glob_b" / M(Xor4) / S(142) / L(6)
        "\x87\x8c\x8f\x82\xbf\x82\xe0\x69\x4f\x36\x8f\x38\x94\x82\x77\xd0",
        // "strncmp" / M(Xor3) / S(250) / L(7)
        "\x79\x7e\x78\x64\x69\x67\x7a\x0a\x39\xd0\x3f\xd7\x14\x56\xfb\xb0",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(70) / L(22)
        "\x09\x0c\x0b\x38\x38\x2b\x33\x0d\x2f\x3e\x1c\x2b\x26\x3f\x2f\x0b\x3e\x03\x24\x2e\x2f\x32\x4a",
        // "_MASReceipt/receipt" / M(Xor3) / S(72) / L(19)
        "\x03\x11\x1d\x0f\x0e\x39\x3f\x39\x35\x2c\x28\x73\x2e\x39\x3f\x39\x35\x2c\x28\x5c",
        // "CFDataCreateMutable" / M(Rot) / S(247) / L(19)
        "\x3a\x3d\x3b\x58\x6b\x58\x3a\x69\x5c\x58\x6b\x5c\x44\x6c\x6b\x58\x59\x63\x5c\xf7",
        // "d2i_X509_bio" / M(Xor2) / S(232) / L(12)
        "\x9c\xca\x91\xa7\xa0\xcd\xc8\xc1\xa7\x9a\x91\x97\xf8\x35\x35\x80",
        // "SHA1_Final" / M(Xor3) / S(127) / L(10)
        "\xdc\xc7\xce\xbe\xd0\xc9\xe6\xe1\xee\xe3\x8f\x60\xc7\x8a\x75\xea",
        // "sk_free" / M(Xor2) / S(15) / L(7)
        "\x6c\x74\x40\x79\x6d\x7a\x7a\x1f\x4e\x18\x2e\x60\x26\x3f\x89\x9f",
        // "" / M(None) / S(0) / L(0)
        "\xbe\x61\x2c\x87\xb2\x30\x0b\x89\x46\x2a\x51\xcc\x38\x48\x30\x6c\xe2\x29\x57\x6f\x8d\xea\x3d\xa7\xc8\xee\x54\xd2\x30\x43\xee\xcc",
        // "" / M(None) / S(0) / L(0)
        "\x94\x71\xa2\x8e\xb4\x3f\x6d\xe9\x59\x60\x73\xbf\x48\xb8\x66\xb5\x4c\x3e\x81\x25\x84\x93\x16\x4c\xa6\x07\xda\x81\xed\x55\x0a\x67",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x5e\x88\x14\xd0\xcd\x5a\xa5\x6d\xc7\xd9\x2c\xa5\x34\x35\x47\x2f\x26\x0b\xb5\xb6\x67\xa5\x34\x2b\xd2\xde\xb8\x72\x1a\x8f\x75",
        // "CFNumberCreate" / M(Xor2) / S(230) / L(14)
        "\xb5\xb0\xb8\x83\x9b\x94\x93\x84\xb5\x84\x93\x97\x82\x93\xf6\x51",
        // "" / M(None) / S(0) / L(0)
        "\xb0\xb8\xc4\x4b\x8c\x10\x43\x57\x74\x22\x73\x19\x08\x36\x84\x74\xed\x91\x19\xa6\x16\x60\x5f\xf3\xd5\xc5\x50\x33\x49\x47\x45\xce",
        // "CFStringCreateWithBytes" / M(Xor4) / S(22) / L(23)
        "\x83\x86\x93\xb4\xb2\xa9\xae\xa7\x83\xb2\xa5\xa1\xb4\xa5\x97\xa9\xb4\xa8\x82\xb9\xb4\xa5\xb3\xc0\x93\xa4\xd0\x9b\x00\x85\x34\xb6",
        // "CFDateFormatterCreate" / M(Xor3) / S(208) / L(21)
        "\xa5\xa0\xa2\x87\x92\x83\xa0\x89\x94\x8b\x87\x92\x92\x83\x94\xa5\x94\x83\x87\x92\x83\xe6",
        // "" / M(None) / S(0) / L(0)
        "\xc7\x62\x01\x2d\xce\x58\xf2\xc6\x1f\xfd\x54\x34\x7b\xed\x67\x04\x71\x01\xb7\xac\x00\x57\xfe\x10\x8c\x92\xd6\x0d\xec\x04\x31\x7a",
        // "X509_free" / M(Xor4) / S(158) / L(9)
        "\xb8\xd5\xd0\xd9\xbf\x86\x92\x85\x85\xe0\xb2\xce\x5c\x37\xae\xc2",
        // "" / M(None) / S(0) / L(0)
        "\xc3\xcb\xc0\x2d\x84\x77\xb1\x5c\xf0\xe7\x6f\x90\xc4\x1c\x74\x5c\xba\x90\xc3\x64\xc3\x5c\x35\x81\x9d\x92\xee\xb3\xce\xc4\xd5\xf0",
        // "sk_free" / M(Xor3) / S(46) / L(7)
        "\x4d\x55\x61\x58\x4c\x5b\x5b\x3e\x4c\xd3\xfb\xac\xba\x5e\x0c\x52",
        // "kCFTypeArrayCallBacks" / M(Xor2) / S(151) / L(21)
        "\xea\xc2\xc7\xd5\xf8\xf1\xe4\xc0\xf3\xf3\xe0\xf8\xc2\xe0\xed\xed\xc3\xe0\xe2\xea\xf2\x81",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(71) / L(26)
        "\x27\x22\x36\x01\x05\x00\x37\x10\x16\x01\x05\x09\x27\x16\x01\x05\x10\x01\x33\x0d\x10\x0c\x22\x0d\x08\x01\x64\x2e\x54\x41\x4d\x7c\x75\xa3\xcb",
        // "CFStringGetFileSystemRepresentation" / M(Xor1) / S(135) / L(35)
        "\xc4\xc1\xd4\xf3\xf5\xee\xe9\xe0\xc0\xe2\xf3\xc1\xee\xeb\xe2\xd4\xfe\xf4\xf3\xe2\xea\xd5\xe2\xf7\xf5\xe2\xf4\xe2\xe9\xf3\xe6\xf3\xee\xe8\xe9\x87",
        // "SecKeychainOpen" / M(Rot) / S(235) / L(15)
        "\x3e\x50\x4e\x36\x50\x64\x4e\x53\x4c\x54\x59\x3a\x5b\x50\x59\xeb",
        // "" / M(None) / S(0) / L(0)
        "\x83\x2f\xb0\x13\x77\x5d\x1c\x3e\x40\x2a\xff\xa0\xc9\xcb\x93\x9a\x79\x53\xd9\x1d\xc7\xe3\x52\xeb\x92\x4f\x53\x0f\x90\x3d\x84\x78",
        // "kSecClass" / M(Xor2) / S(83) / L(9)
        "\x28\x10\x26\x20\x00\x2f\x22\x30\x30\x43\xb7\xba\xf7\x7d\x94\xe1",
        // "kSecMatchLimitAll" / M(Rot) / S(182) / L(17)
        "\x21\x09\x1b\x19\x03\x17\x2a\x19\x1e\x02\x1f\x23\x1f\x2a\xf7\x22\x22\xb6",
        // "IOObjectRelease" / M(Xor2) / S(104) / L(15)
        "\x31\x37\x37\x1a\x12\x1d\x1b\x0c\x2a\x1d\x14\x1d\x19\x0b\x1d\x78",
        // "" / M(None) / S(0) / L(0)
        "\x45\x84\xad\x03\x70\xc7\xe8\x25\x72\x2b\x9d\x79\xee\xbe\x09\x27\x05\xd2\x2e\x52\x33\x12\xed\x93\x0a\x79\xbc\x0a\xe5\xd1\x34\xe6",
        // "kSecMatchLimit" / M(Xor3) / S(108) / L(14)
        "\x17\x2f\x19\x1f\x31\x1d\x08\x1f\x14\x30\x15\x11\x15\x08\x7c\x0d",
        // "" / M(None) / S(0) / L(0)
        "\x6b\xe1\x04\xb6\xec\x22\x3b\x70\x59\xed\xda\xb9\x52\x7b\x32\x7c\x61\x54\x0b\xae\x38\xcd\x9c\x32\xbe\xca\xc0\x19\x57\xce\x4b\x62",
        // "BIO_free" / M(Xor3) / S(211) / L(8)
        "\xa1\xaa\xac\xbc\x85\x91\x86\x86\xe3\x1b\x14\xf7\x46\x08\x47\x7d",
        // "" / M(None) / S(0) / L(0)
        "\x06\xa0\x35\x83\x86\x8d\xe9\x34\x07\xf9\x6c\x03\xea\xe0\xec\xa7\xa0\x2a\x6b\xf7\xa8\xb4\x19\xc4\x8c\xb3\x3c\xb8\xa8\x86\x9f\xb8",
        // "" / M(None) / S(0) / L(0)
        "\x24\x6e\x10\xc6\x6c\x7b\xdc\xef\xc7\x2e\xab\xdb\x0c\xd4\x6b\xf2\xee\xc6\xa8\x42\x46\x82\xea\x94\xab\x90\xf2\x89\x36\xbf\xdf\xd1",
        // "" / M(None) / S(0) / L(0)
        "\xaa\xd0\x2a\x0d\xd3\xb5\xa2\x5d\xbc\x83\x9d\x64\x2f\xcc\x3a\xf3\x47\xba\x2d\xc7\x01\xfd\x1a\x5f\x12\x30\x6d\x20\x2d\x8b\x06\xd9",
        // "" / M(None) / S(0) / L(0)
        "\xd8\x72\x54\xb3\x89\xc1\xc3\x80\x10\xf8\xc6\x6c\x56\x7e\x68\xa4\x87\xb2\x6d\xd9\xa7\x02\x0f\x27\x0e\xe5\x0c\xc6\x4f\xbf\x24\x45",
        // "init" / M(Xor2) / S(114) / L(4)
        "\x0b\x0c\x0b\x16\x62\xe6\xc3\x72\x96\x97\xb8\x15\x74\x7d\x7c\xcd",
        // "SecKeychainSearchCopyNext" / M(Xor2) / S(10) / L(25)
        "\x7b\x4d\x4b\x63\x4d\x51\x4b\x40\x49\x41\x46\x7b\x4d\x49\x5a\x4b\x40\x6b\x47\x58\x51\x66\x4d\x50\x5c\x28\xf1\x65\xc6\xee\x97\xb7\xc1\xb9",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor4) / S(245) / L(50)
        "\xe0\x9c\xb6\xbc\xbb\xaa\xa2\xe0\x83\xa6\xad\xbd\xae\xbd\xb6\xe0\x89\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xbc\xe0\x8e\xbf\xbf\x84\xa6\xbb\xe1\xa9\xbd\xae\xa2\xaa\xb8\xa0\xbd\xa4\xe0\x8e\xbf\xbf\x84\xa6\xbb\xcf",
        // "CFDictionaryAddValue" / M(Xor4) / S(44) / L(20)
        "\xdf\xda\xd8\xf5\xff\xe8\xf5\xf3\xf2\xfd\xee\xe5\xdd\xf8\xf8\xca\xfd\xf0\xe9\xf9\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x67\x4d\x2f\x16\xb3\x26\x0c\x51\x32\x4c\x16\x83\xa5\x57\x7d\x66\x36\xde\x22\x53\x84\xd4\x7e\x0c\xe8\xad\xef\x5e\x94\x44\x87\x6b",
        // "_MASReceipt/receipt" / M(Xor2) / S(140) / L(19)
        "\xc7\xd5\xd9\xcb\xca\xfd\xfb\xfd\xf1\xe8\xec\xb7\xea\xfd\xfb\xfd\xf1\xe8\xec\x98",
        // "CFArrayCreateMutable" / M(Xor4) / S(78) / L(20)
        "\x25\x20\x27\x14\x14\x07\x1f\x25\x14\x03\x07\x12\x03\x2b\x13\x12\x07\x04\x0a\x03\x66",
        // "c2i_ASN1_INTEGER" / M(Xor3) / S(230) / L(16)
        "\x94\xc5\x9e\xa8\xb6\xa4\xb9\xc6\xa8\xbe\xb9\xa3\xb2\xb0\xb2\xa5\xf7",
        // "kSecMatchSubjectContains" / M(Xor4) / S(143) / L(24)
        "\x04\x3c\x0a\x0c\x22\x0e\x1b\x0c\x07\x3c\x1a\x0d\x05\x0a\x0c\x1b\x2c\x00\x01\x1b\x0e\x06\x01\x1c\x6f\xf2\xab\x22\x4c\x7a\x5b\x0b\xec",
        // "" / M(None) / S(0) / L(0)
        "\x62\x5b\x7f\xbd\x78\x70\xb4\xf1\x77\x65\xce\x3c\x87\xdf\xd8\x51\x98\xf8\x97\x47\x12\xf6\x5b\x46\x97\x22\xc3\xee\x72\xad\x0a\xe6",
        // "CFDateFormatterCreate" / M(Xor1) / S(141) / L(21)
        "\xce\xcb\xc9\xec\xf9\xe8\xcb\xe2\xff\xe0\xec\xf9\xf9\xe8\xff\xce\xff\xe8\xec\xf9\xe8\x8d",
        // "kSecMatchLimitAll" / M(Xor1) / S(108) / L(17)
        "\x07\x3f\x09\x0f\x21\x0d\x18\x0f\x04\x20\x05\x01\x05\x18\x2d\x00\x00\x6c",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(53) / L(24)
        "\x76\x73\x74\x57\x46\x5a\x59\x40\x41\x50\x61\x5c\x58\x50\x72\x50\x41\x76\x40\x47\x47\x50\x5b\x41\x35\x0d\x77\xc1\x62\xc1\x27\xbf\x42",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(23) / L(31)
        "\x5c\x74\x71\x63\x4e\x47\x52\x73\x5e\x54\x43\x5e\x58\x59\x56\x45\x4e\x61\x56\x5b\x42\x52\x74\x56\x5b\x5b\x75\x56\x54\x5c\x44\x37",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(99) / L(48)
        "\xdc\xa0\x8a\x80\x87\x96\x9e\xdc\xbf\x9a\x91\x81\x92\x81\x8a\xdc\xb5\x81\x92\x9e\x96\x84\x9c\x81\x98\x80\xdc\xba\xbc\xb8\x9a\x87\xdd\x95\x81\x92\x9e\x96\x84\x9c\x81\x98\xdc\xba\xbc\xb8\x9a\x87\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x0b\xfc\x13\x76\xa6\xaa\xde\xfc\xde\x84\x54\xf1\x24\x00\x44\xe5\x4e\xd1\x76\xb2\x4d\xf0\xc6\x30\x52\xd2\xa9\xcd\xd3\x55\xb9\x34",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(148) / L(22)
        "\xe8\xc0\xc5\xc1\xf6\xed\xe7\xef\xe6\xca\xe7\xe6\xed\xf7\xea\xe5\xea\xe6\xf1\xc8\xe6\xfa\x83",
        // "kSecMatchLimit" / M(Rot) / S(29) / L(14)
        "\x88\x70\x82\x80\x6a\x7e\x91\x80\x85\x69\x86\x8a\x86\x91\x1d\xfc",
        // "_MASReceipt" / M(Xor1) / S(26) / L(11)
        "\x45\x57\x5b\x49\x48\x7f\x79\x7f\x73\x6a\x6e\x1a\x8a\xb8\x91\xec",
        // "" / M(None) / S(0) / L(0)
        "\x25\x00\x11\x0f\xbb\x30\xdd\x7e\xe6\x59\x9b\x7b\x40\xf8\x12\x6c\x77\xa5\x53\xd0\x7b\x30\x1f\x9e\xde\xcc\xf3\x7b\x34\xa2\x25\xd9",
        // "exit" / M(Xor3) / S(87) / L(4)
        "\x02\x1f\x0e\x13\x67\xb8\xc8\x2f\x41\x04\xd7\xe0\x20\x05\xa3\x32",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Rot) / S(50) / L(57)
        "\x61\x85\xab\xa5\xa6\x97\x9f\x61\x7e\x9b\x94\xa4\x93\xa4\xab\x61\x7d\x97\xab\x95\x9a\x93\x9b\xa0\xa5\x61\x85\xab\xa5\xa6\x97\x9f\x84\xa1\xa1\xa6\x75\x97\xa4\xa6\x9b\x98\x9b\x95\x93\xa6\x97\xa5\x60\x9d\x97\xab\x95\x9a\x93\x9b\xa0\x32\x9f\xff\x07\xcb\x3c\x5d\x9d\x67",
        // "CFArrayGetCount" / M(Xor1) / S(116) / L(15)
        "\x37\x32\x35\x06\x06\x15\x0d\x33\x11\x00\x37\x1b\x01\x1a\x00\x74",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(203) / L(25)
        "\xae\xc3\xc6\xcf\xa9\xb8\xb7\xbb\xb3\xa9\x91\x93\x82\xa9\x82\x93\x8e\x82\xa9\x94\x8f\xa9\xb8\xbf\xb2\xf6\x87\xb4\x14\x89\xb3\x68\xa1\xd6",
        // "BIO_write" / M(Rot) / S(0) / L(9)
        "\x42\x49\x4f\x5f\x77\x72\x69\x74\x65\x00\x6d\x80\xba\xef\x74\x95",
        // "" / M(None) / S(0) / L(0)
        "\xda\x1b\xa0\x3c\x60\xb1\xb4\xaf\x9f\xbf\x31\x65\x8b\x60\xc6\x06\x93\xda\x44\x33\xd0\xa0\x86\xf6\xea\x91\xe1\x23\xda\xa1\xad\x39",
        // "NSApplicationMain" / M(Xor4) / S(233) / L(17)
        "\x2c\x31\x23\x12\x12\x0e\x0b\x01\x03\x16\x0b\x0d\x0c\x2f\x03\x0b\x0c\x62",
        // "kSecMatchSubjectContains" / M(Xor2) / S(219) / L(24)
        "\x91\xa9\x9f\x99\xb7\x9b\x8e\x99\x92\xa9\x8f\x98\x90\x9f\x99\x8e\xb9\x95\x94\x8e\x9b\x93\x94\x89\xfa\x82\xea\x94\xab\x90\xf2\x89\xd1",
        // "BIO_s_mem" / M(Rot) / S(216) / L(9)
        "\x1a\x21\x27\x37\x4b\x37\x45\x3d\x45\xd8\x31\x5e\x05\x76\xe8\xca",
        // "CFBundleShortVersionString" / M(Xor2) / S(55) / L(26)
        "\x57\x52\x56\x61\x7a\x70\x78\x71\x47\x7c\x7b\x66\x60\x42\x71\x66\x67\x7d\x7b\x7a\x47\x60\x66\x7d\x7a\x73\x14\xff\x32\x1d\x51\x6f\xe4\x27\x91",
        // "kSecMatchSubjectContains" / M(Xor4) / S(177) / L(24)
        "\xba\x82\xb4\xb2\x9c\xb0\xa5\xb2\xb9\x82\xa4\xb3\xbb\xb4\xb2\xa5\x92\xbe\xbf\xa5\xb0\xb8\xbf\xa2\xd1\xe6\x08\x72\x35\x58\x46\x1b\x9c",
        // "X509_NAME_get_text_by_NID" / M(Xor1) / S(173) / L(25)
        "\xf5\x98\x9d\x94\xf2\xe3\xec\xe0\xe8\xf2\xca\xc8\xd9\xf2\xd9\xc8\xd5\xd9\xf2\xcf\xd4\xf2\xe3\xe4\xe9\xad\x67\x4f\x69\x3e\xe9\xec\xcb\xd9",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(38) / L(25)
        "\x0b\x0e\x0c\x21\x2b\x3c\x21\x27\x26\x29\x3a\x31\x0b\x3a\x2d\x29\x3c\x2d\x05\x3d\x3c\x29\x2a\x24\x2d\x48\xa5\x9c\xb9\x6f\xda\xa7\x85\x6a",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor2) / S(14) / L(37)
        "\x7b\x4d\x4b\x63\x4d\x51\x4b\x40\x49\x41\x46\x7b\x4d\x49\x5a\x4b\x40\x6b\x5a\x4d\x49\x5c\x4d\x6e\x5a\x47\x45\x69\x5c\x5c\x5a\x41\x4a\x5d\x5c\x4d\x5b\x28",
        // "SHA1" / M(Xor1) / S(183) / L(4)
        "\xe4\xff\xf6\x86\xb7\xd2\x77\xf9\x1d\xdd\x5d\x0f\xfa\xd7\xc8\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x47\x42\x54\x87\xf2\x7f\x3b\x36\x24\x5f\x80\xad\x76\xc5\x8c\xbe\xad\xd1\x56\x30\x4b\x4f\x8a\x61\xeb\xf1\x37\xfb\x7f\xd0\x0c\x5b",
        // "setjmp" / M(Xor3) / S(68) / L(6)
        "\x27\x31\x20\x3e\x39\x24\x54\x0d\xe9\xf5\xce\x5e\x3c\x45\xb3\xd2",
        // "" / M(None) / S(0) / L(0)
        "\xb2\xb9\x39\x11\x1b\xcf\xb6\x6b\x70\x33\x5e\xb0\xd1\xda\x3c\x58\x06\x6a\x77\x40\xe4\x1e\xc1\x40\xb8\x97\x46\x5e\xfe\x82\xe2\x46",
        // "CFReadStreamRead" / M(Xor2) / S(8) / L(16)
        "\x5a\x5f\x4b\x7c\x78\x7d\x4a\x6d\x6b\x7c\x78\x74\x4b\x7c\x78\x7d\x19",
        // "" / M(None) / S(0) / L(0)
        "\x95\xbf\xc6\x20\xcb\xd0\xde\x1d\x5b\xac\x6c\xd5\x3a\xad\xd7\x78\x30\x92\x36\x98\x59\x21\x38\x9c\x4d\x05\x0e\x50\x21\x48\x82\xfc",
        // "CFReadStreamClose" / M(Rot) / S(75) / L(17)
        "\x8e\x91\x9d\xb0\xac\xaf\x9e\xbf\xbd\xb0\xac\xb8\x8e\xb7\xba\xbe\xb0\x4b",
        // "Contents/_MASReceipt" / M(Xor3) / S(113) / L(20)
        "\xc5\xe9\xe8\xf2\xe3\xe8\xf2\xf5\xa9\xd9\xcb\xc7\xd5\xd4\xe3\xe5\xe3\xef\xf6\xf2\x86",
        // "dlopen" / M(Xor4) / S(44) / L(6)
        "\xa4\xac\xaf\xb0\xa5\xae\xc0\x85\xa5\xf2\xfa\xed\x14\x22\x33\x70",
        // "ASN1_OBJECT_free" / M(Xor4) / S(108) / L(16)
        "\x6d\x7f\x62\x1d\x73\x63\x6e\x66\x69\x6f\x78\x73\x4a\x5e\x49\x49\x2c",
        // "SecItemCopyMatching" / M(Xor4) / S(173) / L(19)
        "\xd7\xe1\xe7\xcd\xf0\xe1\xe9\xc7\xeb\xf4\xfd\xc9\xe5\xf0\xe7\xec\xed\xea\xe3\x84",
        // "CC_SHA1_Final" / M(Xor2) / S(107) / L(13)
        "\x38\x38\x24\x28\x33\x3a\x4a\x24\x3d\x12\x15\x1a\x17\x7b\xb9\x1b",
        // "CFStringCreateWithCString" / M(Rot) / S(208) / L(25)
        "\x13\x16\x23\x44\x42\x39\x3e\x37\x13\x42\x35\x31\x44\x35\x27\x39\x44\x38\x13\x23\x44\x42\x39\x3e\x37\xd0\x07\x4a\x52\x89\x6d\xf9\x71\x2a",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor3) / S(92) / L(48)
        "\xa2\xde\xf4\xfe\xf9\xe8\xe0\xa2\xc1\xe4\xef\xff\xec\xff\xf4\xa2\xcb\xff\xec\xe0\xe8\xfa\xe2\xff\xe6\xfe\xa2\xc4\xc2\xc6\xe4\xf9\xa3\xeb\xff\xec\xe0\xe8\xfa\xe2\xff\xe6\xa2\xc4\xc2\xc6\xe4\xf9\x8d",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(57) / L(35)
        "\x7c\x7f\x7d\x9a\xad\x9e\x7f\xa8\xab\xa6\x9a\xad\xad\x9e\xab\x7c\xab\x9e\x9a\xad\x9e\x7d\x9a\xad\x9e\x7f\xab\xa8\xa6\x8c\xad\xab\xa2\xa7\xa0\x39",
        // "start" / M(Rot) / S(145) / L(5)
        "\x04\x05\xf2\x03\x05\x91\x60\x34\xe8\x0c\x74\x3c\x75\xc6\xd4\x0e",
        // "%02X:" / M(Xor3) / S(154) / L(5)
        "\x8f\x9a\x98\xf2\x90\xaa\x58\x6d\xa5\x6a\xc7\x46\x60\x6e\xde\x84",
        // "init" / M(Xor4) / S(123) / L(4)
        "\xd9\xde\xd9\xc4\xb0\x8a\xe2\x31\x04\xef\xed\xac\xf7\xbe\x7d\x57",
        // "" / M(None) / S(0) / L(0)
        "\xbd\x15\x7f\xd9\xe6\x1d\xc5\xb5\x62\x33\xd7\xf9\xc3\xa2\x28\x18\xc1\x81\x64\x2c\x91\x31\xff\xcf\x6b\x45\x55\xa7\xef\x59\xa7\x47",
        // "/usr/lib/libSystem.dylib" / M(Rot) / S(53) / L(24)
        "\x64\xaa\xa8\xa7\x64\xa1\x9e\x97\x64\xa1\x9e\x97\x88\xae\xa8\xa9\x9a\xa2\x63\x99\xae\xa1\x9e\x97\x35\x6a\x41\xf8\x45\x57\x6a\x24\x8a",
        // "X509_digest" / M(Xor2) / S(208) / L(11)
        "\x98\xf5\xf0\xf9\x9f\xa4\xa9\xa7\xa5\xb3\xb4\xc0\x7d\xa1\x59\xde",
        // "CC_SHA1_Init" / M(Rot) / S(204) / L(12)
        "\x0f\x0f\x2b\x1f\x14\x0d\xfd\x2b\x15\x3a\x35\x40\xcc\xc5\xf4\x29",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(54) / L(54)
        "\xb5\xc9\xe3\xe9\xee\xff\xf7\xb5\xd6\xf3\xf8\xe8\xfb\xe8\xe3\xb5\xdc\xe8\xfb\xf7\xff\xed\xf5\xe8\xf1\xe9\xb5\xc9\xff\xf9\xef\xe8\xf3\xee\xe3\xb4\xfc\xe8\xfb\xf7\xff\xed\xf5\xe8\xf1\xb5\xc9\xff\xf9\xef\xe8\xf3\xee\xe3\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x50\x62\x99\x57\x1d\x82\xa7\x12\x7b\x2d\xd2\x72\xab\x59\x39\xf4\xae\x78\x39\x7c\xad\x63\x64\x5c\xc5\xdb\xdc\xb3\x9d\x5c\x42\x5f",
        // "" / M(None) / S(0) / L(0)
        "\x04\xec\x76\xcb\x44\xd5\x7b\x5a\x58\x2d\xf0\xe1\x05\x3a\x95\x0d\xe9\xf5\xce\x5e\x3c\x45\xb3\xd2\xf1\x6b\x8a\x70\x7e\x92\xb2\x0b",
        // "ASN1_INTEGER_free" / M(Rot) / S(53) / L(17)
        "\x76\x88\x83\x66\x94\x7e\x83\x89\x7a\x7c\x7a\x87\x94\x9b\xa7\x9a\x9a\x35",
        // "CFStringCompare" / M(Rot) / S(91) / L(15)
        "\x9e\xa1\xae\xcf\xcd\xc4\xc9\xc2\x9e\xca\xc8\xcb\xbc\xcd\xc0\x5b",
        // "" / M(None) / S(0) / L(0)
        "\x51\x23\x7a\x15\x34\xf7\x7d\xd5\x8e\xf8\x14\x4d\x24\xe1\x76\x69\x7d\x48\x8a\x60\xc7\x8a\x75\xea\x39\x74\x99\xc1\x47\xe5\xcd\xb5",
        // "" / M(None) / S(0) / L(0)
        "\x44\x72\x59\x39\xe7\x5a\x87\x7a\xfd\xbc\x9b\x4e\xe8\xb9\xd0\x7f\x5a\xcd\x74\xd2\x45\x1a\x72\x89\x0b\xfe\x15\x54\x52\xa5\xe6\x82",
        // "SecKeychainSearchCopyNext" / M(Rot) / S(217) / L(25)
        "\x2c\x3e\x3c\x24\x3e\x52\x3c\x41\x3a\x42\x47\x2c\x3e\x3a\x4b\x3c\x41\x1c\x48\x49\x52\x27\x3e\x51\x4d\xd9\x0d\x0c\x45\x8f\x6f\xb2\x66\x04",
        // "CFDataCreateMutable" / M(Xor2) / S(91) / L(19)
        "\x0c\x09\x0b\x2e\x3b\x2e\x0c\x3d\x2a\x2e\x3b\x2a\x02\x3a\x3b\x2e\x2d\x23\x2a\x4f",
        // "strncmp" / M(Xor3) / S(57) / L(7)
        "\x3a\x3d\x3b\x27\x2a\x24\x39\x49\x09\xcd\x3f\xea\xfd\xa6\xf5\x20",
        // "" / M(None) / S(0) / L(0)
        "\x09\xbc\x08\x19\x50\xcb\x9c\xb0\x11\xbd\x72\x8d\xbb\xc9\x98\xd4\xf2\xa9\x3f\x4f\x8e\xc2\xdb\x23\x30\x24\xc5\xe4\xf0\xf3\x32\x53",
        // "" / M(None) / S(0) / L(0)
        "\xca\xdb\x6e\x5a\x38\xcb\xa1\xe6\xfe\xbd\xdf\x2d\x69\x53\x7a\xf2\x1b\x7d\x76\x38\xcd\x4f\xab\x8b\x93\x8b\x03\x7f\xba\xe0\x6f\x24",
        // "IOServiceGetMatchingServices" / M(Rot) / S(177) / L(28)
        "\xfa\x00\x04\x16\x23\x27\x1a\x14\x16\xf8\x16\x25\xfe\x12\x25\x14\x19\x1a\x1f\x18\x04\x16\x23\x27\x1a\x14\x16\x24\xb1\x1e\xec\x63\x32\xd0\xb3\x6c\x9f",
        // "sel_registerName" / M(Xor3) / S(144) / L(16)
        "\xd2\xc4\xcd\xfe\xd3\xc4\xc6\xc8\xd2\xd5\xc4\xd3\xef\xc0\xcc\xc4\xa1",
        // "%02x" / M(Rot) / S(238) / L(4)
        "\x13\x1e\x20\x66\xee\x84\xb9\x8f\x0e\x1b\x8f\xec\xc3\xfd\x47\xd5",
        // "ASN1_INTEGER_get" / M(Xor4) / S(239) / L(16)
        "\x9e\x8c\x91\xee\x80\x96\x91\x8b\x9a\x98\x9a\x8d\x80\xb8\xba\xab\xdf",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(240) / L(59)
        "\xf6\xf1\xfa\xf1\x85\xfa\xf5\x82\xfa\xf6\xf6\xfa\xf2\x83\xfa\xf5\xf9\xfa\xf3\x81\xfa\xf0\xf8\xfa\x86\x86\xfa\xf5\xf8\xfa\x84\xf1\xfa\xf4\x81\xfa\x85\xf2\xfa\xf2\xf4\xfa\xf5\xf2\xfa\x84\xf1\xfa\xf9\xf8\xfa\x84\x86\xfa\xf6\x83\xfa\xf6\xf0\xc0\x33\x88\xd5\xf3\x5d\x9a\x9b\xd0",
        // "sel_registerName" / M(Xor3) / S(152) / L(16)
        "\xda\xcc\xc5\xf6\xdb\xcc\xce\xc0\xda\xdd\xcc\xdb\xe7\xc8\xc4\xcc\xa9",
        // "" / M(None) / S(0) / L(0)
        "\x08\xb3\xf2\x43\x72\x10\xda\xf3\x82\xd4\xf1\xc6\xa6\x73\x5b\x07\xe2\x5f\x41\x8b\x7d\xa1\x59\xde\xe8\xc6\xb2\xb0\x01\x69\x3a\x5f",
        // "%02X" / M(Xor4) / S(132) / L(4)
        "\x65\x70\x72\x18\x40\xe6\xbf\xfb\x3c\xee\x71\xf9\x3f\x6b\x0d\x60",
        // "" / M(None) / S(0) / L(0)
        "\x09\x1c\x8b\xfa\x2f\x98\x18\xa2\x36\xb0\x70\xfa\x0a\xfa\xe6\x15\xd5\xd4\x2f\xe2\x7b\x41\x81\xed\x9a\xf2\xa9\x31\xa9\x33\xc8\x55",
        // "OBJ_txt2obj" / M(Xor2) / S(181) / L(11)
        "\xea\xe7\xef\xfa\xd1\xdd\xd1\x97\xca\xc7\xcf\xa5\x8d\x01\x7b\xe6",
        // "CFEqual" / M(Xor2) / S(102) / L(7)
        "\x35\x30\x33\x07\x03\x17\x1a\x76\xe4\xd4\x9b\x89\xf4\x58\x34\x15",
        // "EVP_DigestFinal" / M(Xor2) / S(52) / L(15)
        "\x61\x72\x74\x7b\x60\x4d\x43\x41\x57\x50\x62\x4d\x4a\x45\x48\x24",
        // "CFDictionarySetValue" / M(Xor2) / S(205) / L(20)
        "\x9b\x9e\x9c\xb1\xbb\xac\xb1\xb7\xb6\xb9\xaa\xa1\x8b\xbd\xac\x8e\xb9\xb4\xad\xbd\xd8",
        // "" / M(None) / S(0) / L(0)
        "\x7f\xfc\x2c\x74\x53\x56\xe0\xbc\x8b\x6b\xa0\xaf\x54\xa8\x60\xf2\xd6\xb9\xc0\xbc\xc2\x65\x87\xb4\x14\x89\xb3\x68\x9f\x72\xd6\xa1",
        // "" / M(None) / S(0) / L(0)
        "\xb5\xb1\x79\xdc\xea\x0e\xfa\x7c\x5e\x0d\x0b\xa0\x13\x74\xe5\x83\x50\xa9\x64\x1d\x7b\xef\xff\x6f\xd7\x55\x4e\x61\x0a\xd0\x95\x12",
        // "SecItemCopyMatching" / M(Xor4) / S(73) / L(19)
        "\xe7\xd1\xd7\xfd\xc0\xd1\xd9\xf7\xdb\xc4\xcd\xf9\xd5\xc0\xd7\xdc\xdd\xda\xd3\xb4",
        // "" / M(None) / S(0) / L(0)
        "\x82\x3c\xc1\xc2\x97\xd0\xf7\xa2\x5f\x57\xd8\xd0\x5a\x72\xc4\xe6\xef\x01\xd0\x26\xa7\xe1\x87\x12\x56\x0b\xc0\x75\x41\x0f\x20\x21",
        // "CFStringCreateWithCString" / M(Xor2) / S(251) / L(25)
        "\x9a\x9f\x8a\xad\xab\xb0\xb7\xbe\x9a\xab\xbc\xb8\xad\xbc\x8e\xb0\xad\xb1\x9a\x8a\xad\xab\xb0\xb7\xbe\xd9\x01\x58\xf8\xa2\x9f\x0f\xc1\x73",
        // "" / M(None) / S(0) / L(0)
        "\x47\xe3\xa7\xba\x0b\x03\xaf\xc8\x73\x08\xc0\xe7\x40\x10\xd7\x78\xbd\x20\xeb\x8f\xd4\x81\x96\x41\x51\x3c\x92\x3b\x96\x6b\x43\xd5",
        // "objc_getClass" / M(Xor2) / S(76) / L(13)
        "\x33\x3e\x36\x3f\x03\x3b\x39\x28\x1f\x30\x3d\x2f\x2f\x5c\x24\x87",
        // "" / M(None) / S(0) / L(0)
        "\x28\x87\x2c\x3b\x2f\x5b\x89\xa0\x3b\xce\x76\xbb\xc2\x13\xb3\x53\x9b\xb5\x38\x7b\x29\x50\x02\x17\xf7\xb9\xab\x16\x60\x36\x8a\x35",
        // "" / M(None) / S(0) / L(0)
        "\x17\xe6\xbf\xfb\x3c\xee\x71\xf9\x3f\x6b\x0d\x60\xa7\xf7\xce\x01\x47\x83\x80\x15\x26\x3e\x68\x4a\x76\x7c\x67\xb9\x36\x48\x3b\x29",
        // "CFBundleVersion" / M(Xor3) / S(162) / L(15)
        "\xf1\xf4\xf0\xc7\xdc\xd6\xde\xd7\xe4\xd7\xc0\xc1\xdb\xdd\xdc\xb2",
        // "Contents" / M(Xor3) / S(163) / L(8)
        "\xf0\xdc\xdd\xc7\xd6\xdd\xc7\xc0\xb3\x7b\x3a\x56\x7c\x20\x5c\x71",
        // "" / M(None) / S(0) / L(0)
        "\x23\x00\x1c\x6d\x14\x11\xe3\xc3\x73\x59\x5c\x5f\x5e\xca\x7e\xa2\x12\x4c\x36\xd4\xc3\x0c\x46\x54\x63\x3a\x0e\xe6\xb2\xa6\xee\x0c",
        // "CFDataCreate" / M(Rot) / S(126) / L(12)
        "\xc1\xc4\xc2\xdf\xf2\xdf\xc1\xf0\xe3\xdf\xf2\xe3\x7e\x6f\x11\xdd",
        // "sha1" / M(Xor2) / S(230) / L(4)
        "\x85\x9e\x97\xc7\xf6\x87\xf3\x27\x4e\x86\x6c\x97\xea\xde\xff\x61",
        // "%02X" / M(Xor1) / S(124) / L(4)
        "\x59\x4c\x4e\x24\x7c\x89\xd7\xa1\xbd\x25\x8e\x1a\x6d\x41\xdd\xa1",
        // "objc_msgSend" / M(Xor3) / S(50) / L(12)
        "\x2d\x20\x28\x21\x1d\x2f\x31\x25\x11\x27\x2c\x26\x42\xf0\xc6\x30",
        // "kSecReturnRef" / M(Xor4) / S(216) / L(13)
        "\xeb\xd3\xe5\xe3\xd2\xe5\xf4\xf5\xf2\xee\xd2\xe5\xe6\x80\x4a\x61",
        // "SKReceiptRefreshRequest" / M(Rot) / S(98) / L(23)
        "\xb5\xad\xb4\xc7\xc5\xc7\xcb\xd2\xd6\xb4\xc7\xc8\xd4\xc7\xd5\xca\xb4\xc7\xd3\xd7\xc7\xd5\xd6\x62\xc7\x61\x7c\x14\xae\x15\x12\xae",
        // "CFDataCreate" / M(Xor2) / S(51) / L(12)
        "\x60\x65\x67\x42\x57\x42\x60\x51\x46\x42\x57\x46\x23\xe8\x07\xb5",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor2) / S(119) / L(43)
        "\x00\x05\x16\x11\x0f\x00\x31\x26\x22\x37\x26\x14\x2a\x37\x2b\x05\x2a\x2f\x26\x10\x3a\x30\x37\x26\x2e\x13\x22\x37\x2b\x11\x26\x2f\x22\x37\x2a\x35\x26\x17\x2c\x01\x22\x30\x26\x43\xa3\x20\x6c\x6b\xf7\xde\x3b\x11",
        // "CFNumberCreate" / M(Rot) / S(167) / L(14)
        "\xea\xed\xf5\x1c\x14\x09\x0c\x19\xea\x19\x0c\x08\x1b\x0c\xa7\x24",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(51) / L(24)
        "\x58\x70\x75\x77\x52\x47\x56\x75\x5c\x41\x5e\x52\x47\x47\x56\x41\x67\x5a\x5e\x56\x69\x5c\x5d\x56\x33\x91\x19\xa6\x16\x60\x5f\xf3\x33",
        // "" / M(None) / S(0) / L(0)
        "\x38\xb7\x61\x13\x8b\x44\xc7\x64\x46\x74\xf3\xba\xba\x76\x40\x79\xd2\x79\x08\xdc\x03\x98\xd6\x85\x55\xa0\xdd\x71\x9a\x89\x95\xc9",
        // "" / M(None) / S(0) / L(0)
        "\x69\x8d\xea\xa5\x2e\x93\x9f\xff\x07\xcb\x3c\x5d\x1d\x05\x67\x9d\x2e\xfe\x2d\xbb\x80\xa9\xce\x41\x1d\x65\x1d\xf1\xad\xc6\x94\xe0",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor3) / S(17) / L(40)
        "\x74\x73\x73\x07\x77\x00\x74\x74\x70\x01\x77\x7b\x71\x03\x72\x7a\x04\x04\x77\x7a\x06\x73\x76\x03\x07\x70\x70\x76\x77\x70\x06\x73\x7b\x7a\x06\x04\x74\x01\x74\x72\x42\x88\xb7\x30\xf2\x55\x8d\x33\x96",
        // "d2i_PKCS7_bio" / M(Xor1) / S(35) / L(13)
        "\x47\x11\x4a\x7c\x73\x68\x60\x70\x14\x7c\x41\x4a\x4c\x23\x35\x7e",
        // "kSecClassCertificate" / M(Xor2) / S(64) / L(20)
        "\x3e\x06\x30\x36\x16\x39\x34\x26\x26\x16\x30\x27\x21\x3c\x33\x3c\x36\x34\x21\x30\x55",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(64) / L(22)
        "\xef\xb5\xb3\xb2\xef\xac\xa9\xa2\xef\xac\xa9\xa2\xaf\xa2\xaa\xa3\xee\xa4\xb9\xac\xa9\xa2\xc0",
        // "" / M(None) / S(0) / L(0)
        "\x4e\x76\x3f\x4b\x65\xde\x18\x54\x5a\xa0\x01\xa2\x26\xa0\xc2\xd7\x75\x03\x26\x38\x39\x76\x76\x7f\xe4\xd1\x58\x53\xe4\x03\xb2\xc7",
        // "CFReadStreamOpen" / M(Xor1) / S(147) / L(16)
        "\xd0\xd5\xc1\xf6\xf2\xf7\xc0\xe7\xe1\xf6\xf2\xfe\xdc\xe3\xf6\xfd\x93",
        // "" / M(None) / S(0) / L(0)
        "\x96\x1d\x2d\x99\x91\x45\x71\x24\x5e\xde\xbf\x59\xa9\x83\x4f\x6f\xb6\xab\x8c\xe0\x8c\xfd\xe5\x98\xfa\xb2\x2f\x44\x51\x85\xd9\xfd",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(115) / L(40)
        "\x45\x42\x42\x16\x46\x11\x45\x45\x41\x10\x46\x4a\x40\x12\x43\x4b\x15\x15\x46\x4b\x17\x42\x47\x12\x16\x41\x41\x47\x46\x41\x17\x42\x4a\x4b\x17\x15\x45\x10\x45\x43\x73\x5a\xea\x6e\x51\x3b\x42\x08\xbd",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor3) / S(159) / L(39)
        "\x8c\x89\x9a\x9d\x83\x8c\xbd\xaa\xae\xbb\xaa\x89\xbd\xa0\xa2\x89\xa6\xa3\xaa\x9c\xb6\xbc\xbb\xaa\xa2\x9d\xaa\xbf\xbd\xaa\xbc\xaa\xa1\xbb\xae\xbb\xa6\xa0\xa1\xcf\x42\xdd\xe8\xb9\xc3\x40\x54\x46",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(250) / L(59)
        "\x88\x8f\x84\x8f\xfb\x84\x8b\xfc\x84\x88\x88\x84\x8c\xfd\x84\x8b\x87\x84\x8d\xff\x84\x8e\x86\x84\xf8\xf8\x84\x8b\x86\x84\xfa\x8f\x84\x8a\xff\x84\xfb\x8c\x84\x8c\x8a\x84\x8b\x8c\x84\xfa\x8f\x84\x87\x86\x84\xfa\xf8\x84\x88\xfd\x84\x88\x8e\xbe\x04\xcf\xb8\x58\x19\xbc\xd2\x53",
        // "com.treasurebox.gear" / M(Xor1) / S(169) / L(20)
        "\xca\xc6\xc4\x87\xdd\xdb\xcc\xc8\xda\xdc\xdb\xcc\xcb\xc6\xd1\x87\xce\xcc\xc8\xdb\xa9",
        // "X509_STORE_free" / M(Xor3) / S(8) / L(15)
        "\x40\x2d\x28\x21\x47\x4b\x4c\x57\x4a\x5d\x47\x7e\x6a\x7d\x7d\x18",
        // "" / M(None) / S(0) / L(0)
        "\x71\xed\x10\x9e\x28\x22\xd2\x7f\x6f\x3d\xcf\x22\xcd\x57\x62\x24\xdd\x52\x0b\x27\x71\x25\x8e\x36\x72\x10\x10\x9d\xa8\xca\x9c\x18",
        // "OBJ_txt2obj" / M(Xor4) / S(147) / L(11)
        "\x7f\x72\x7a\x6f\x44\x48\x44\x02\x5f\x52\x5a\x30\x12\xf6\x5b\x46",
        // "" / M(None) / S(0) / L(0)
        "\x32\x87\xcd\x7e\x44\x39\x77\x9a\x54\xea\xf1\xaf\xb0\x50\xf9\x22\x64\xea\xf2\xf9\x49\x5a\x11\x88\x20\xd8\xb7\x88\x2e\x3a\x04\xba",
    };
    
    // Table for storing pointers
    static void *ReceiptValidation_Pointers[608] = {
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) glob),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) dlsym),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) PKCS7_verify),
        ((void *) glob),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) ASN1_get_object),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) SHA1_Final),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int ReceiptValidation_AGFRDNDDPBID __unused;
    static int ReceiptValidation_RYYEBKCREKCP __unused;
    static int ReceiptValidation_YVEWTRCAJJQM __unused;
    static int ReceiptValidation_FGVSMJUBSRIK __unused;
    static int ReceiptValidation_QKHEAAOULPHS __unused;
    static int ReceiptValidation_IBNQQCBEGLIG __unused;
    static int ReceiptValidation_CUZJROMPTUCM __unused;
    static int ReceiptValidation_FNRNNCEXFXAX __unused;
    
    
#define ReceiptValidation_ASN1_get_object_010B01A1 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction003, 417, 123, 16))
#define ReceiptValidation_ASN1_INTEGER_free_010B016D ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00C, 365, 77, 18))
#define ReceiptValidation_ASN1_INTEGER_get_010B003D ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00A, 61, 47, 17))
#define ReceiptValidation_ASN1_OBJECT_free_00000213 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00B, 531, 108, 17))
#define ReceiptValidation_BIO_free_0000007F ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00C, 127, 135, 16))
#define ReceiptValidation_BIO_free_010B007F ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00C, 127, 135, 16))
#define ReceiptValidation_BIO_new_010B0002 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction005, 2, 227, 16))
#define ReceiptValidation_BIO_new_010B00F7 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction009, 247, 156, 16))
#define ReceiptValidation_BIO_s_mem_000000E3 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction008, 227, 158, 16))
#define ReceiptValidation_BIO_s_mem_00000204 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction004, 516, 216, 16))
#define ReceiptValidation_BIO_write_00000126 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00A, 294, 243, 16))
#define ReceiptValidation_BIO_write_009600E0 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction008, 224, 127, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_0096008F ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction00B, 143, 38, 17))
#define ReceiptValidation_CC_SHA1_00EB014B ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction003, 331, 30, 16))
#define ReceiptValidation_CC_SHA1_Update_00C401BB ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 196, 111, 33, ReceiptValidation_ObfuscationFunction00A, 443, 140, 16))
#define ReceiptValidation_CFArrayCreateMutable_00D401EE ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00C, 494, 78, 21))
#define ReceiptValidation_CFArrayCreateMutable_01A701EE ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00C, 494, 78, 21))
#define ReceiptValidation_CFArrayGetCount_00D40039 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00A, 57, 185, 16))
#define ReceiptValidation_CFArrayGetCount_01430039 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00A, 57, 185, 16))
#define ReceiptValidation_CFBundleGetMainBundle_00D400F3 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction004, 243, 186, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_01A700D8 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction005, 216, 75, 33))
#define ReceiptValidation_CFDataAppendBytes_00D400F5 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction007, 245, 124, 18))
#define ReceiptValidation_CFDataAppendBytes_014300F5 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction007, 245, 124, 18))
#define ReceiptValidation_CFDataCreateMutable_01A70228 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction007, 552, 91, 20))
#define ReceiptValidation_CFDataGetBytePtr_01A701B8 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00B, 440, 104, 17))
#define ReceiptValidation_CFDataGetLength_0143005D ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction006, 93, 121, 16))
#define ReceiptValidation_CFDateFormatterCreate_00D401D3 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00A, 467, 208, 22))
#define ReceiptValidation_CFDictionaryAddValue_01A7003E ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00B, 62, 13, 21))
#define ReceiptValidation_CFDictionaryGetValue_01430015 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction008, 21, 142, 21))
#define ReceiptValidation_CFDictionaryGetValue_0143011D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00A, 285, 190, 21))
#define ReceiptValidation_CFDictionarySetValue_00D40044 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00A, 68, 19, 21))
#define ReceiptValidation_CFReadStreamRead_01430166 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00B, 358, 2, 17))
#define ReceiptValidation_CFRelease_00D4007E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, 126, 230, 16))
#define ReceiptValidation_CFRelease_00D400F1 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, 241, 180, 16))
#define ReceiptValidation_CFRelease_00D401A3 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction003, 419, 148, 16))
#define ReceiptValidation_CFRelease_014300F1 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction008, 241, 180, 16))
#define ReceiptValidation_CFRelease_014301A3 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction003, 419, 148, 16))
#define ReceiptValidation_CFRelease_01A7007E ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, 126, 230, 16))
#define ReceiptValidation_CFRelease_01A700F1 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, 241, 180, 16))
#define ReceiptValidation_CFRelease_01A701A3 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction003, 419, 148, 16))
#define ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_00D400A0 ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction006, 160, 143, 48))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_00D40259 ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00A, 601, 159, 48))
#define ReceiptValidation_CFURLCreateFromFileSystemRepresentation_014300DF ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00A, 223, 194, 48))
#define ReceiptValidation_d2i_PKCS7_bio_000000E5 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction008, 229, 141, 16))
#define ReceiptValidation_d2i_PKCS7_bio_00960252 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction006, 594, 35, 16))
#define ReceiptValidation_d2i_X509_bio_00000033 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction006, 51, 192, 16))
#define ReceiptValidation_EVP_DigestFinal_00000237 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction008, 567, 52, 16))
#define ReceiptValidation_EVP_DigestInit_00000007 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00A, 7, 107, 16))
#define ReceiptValidation_EVP_DigestUpdate_0000003A ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction005, 58, 191, 17))
#define ReceiptValidation_EVP_get_digestbyname_0000002A ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00B, 42, 31, 21))
#define ReceiptValidation_EVP_MD_CTX_init_010B0072 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00B, 114, 232, 16))
#define ReceiptValidation_exit_00C40112 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 196, 111, 33, ReceiptValidation_ObfuscationFunction00C, 274, 77, 16))
#define ReceiptValidation_exit_00C401FC ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 196, 111, 33, ReceiptValidation_ObfuscationFunction009, 508, 87, 16))
#define ReceiptValidation_exit_00EB006B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction00C, 107, 200, 16))
#define ReceiptValidation_exit_00EB01FC ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction009, 508, 87, 16))
#define ReceiptValidation_exit_021D006B ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction00C, 107, 200, 16))
#define ReceiptValidation_exit_021D0112 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction00C, 274, 77, 16))
#define ReceiptValidation_exit_021D01FC ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction009, 508, 87, 16))
#define ReceiptValidation_AGFRDNDDPBID_00D4000B ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_AGFRDNDDPBID, 212, 16))
#define ReceiptValidation_AGFRDNDDPBID_00D400A2 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_AGFRDNDDPBID, 163, 16))
#define ReceiptValidation_AGFRDNDDPBID_00D4014A ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AGFRDNDDPBID, 145, 19))
#define ReceiptValidation_AGFRDNDDPBID_00E101E9 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AGFRDNDDPBID, 10, 34))
#define ReceiptValidation_AGFRDNDDPBID_01430006 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AGFRDNDDPBID, 33, 21))
#define ReceiptValidation_AGFRDNDDPBID_014301D9 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_AGFRDNDDPBID, 71, 35))
#define ReceiptValidation_AGFRDNDDPBID_01A700C6 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_AGFRDNDDPBID, 88, 16))
#define ReceiptValidation_AGFRDNDDPBID_01A70224 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_AGFRDNDDPBID, 91, 16))
#define ReceiptValidation_AGFRDNDDPBID_02170198 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 535, 92, 49, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_AGFRDNDDPBID, 248, 16))
#define ReceiptValidation_RYYEBKCREKCP_00D4011F ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_RYYEBKCREKCP, 72, 34))
#define ReceiptValidation_RYYEBKCREKCP_00D401D0 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_RYYEBKCREKCP, 230, 16))
#define ReceiptValidation_RYYEBKCREKCP_00D4024D ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_RYYEBKCREKCP, 167, 16))
#define ReceiptValidation_RYYEBKCREKCP_014300E7 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RYYEBKCREKCP, 156, 23))
#define ReceiptValidation_RYYEBKCREKCP_01430108 ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_RYYEBKCREKCP, 254, 52))
#define ReceiptValidation_RYYEBKCREKCP_01F6022C ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 502, 99, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_RYYEBKCREKCP, 177, 37))
#define ReceiptValidation_RYYEBKCREKCP_021D01AF ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_RYYEBKCREKCP, 30, 16))
#define ReceiptValidation_YVEWTRCAJJQM_00D401C9 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YVEWTRCAJJQM, 247, 20))
#define ReceiptValidation_YVEWTRCAJJQM_01430042 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_YVEWTRCAJJQM, 77, 22))
#define ReceiptValidation_YVEWTRCAJJQM_0143009B ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_YVEWTRCAJJQM, 203, 17))
#define ReceiptValidation_YVEWTRCAJJQM_01430245 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_YVEWTRCAJJQM, 126, 16))
#define ReceiptValidation_YVEWTRCAJJQM_01A7011D ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_YVEWTRCAJJQM, 190, 21))
#define ReceiptValidation_YVEWTRCAJJQM_01A70140 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_YVEWTRCAJJQM, 202, 18))
#define ReceiptValidation_YVEWTRCAJJQM_01A70224 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YVEWTRCAJJQM, 91, 16))
#define ReceiptValidation_YVEWTRCAJJQM_022000D7 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_YVEWTRCAJJQM, 15, 23))
#define ReceiptValidation_FGVSMJUBSRIK_00D4010A ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_FGVSMJUBSRIK, 206, 17))
#define ReceiptValidation_FGVSMJUBSRIK_01430045 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_FGVSMJUBSRIK, 132, 16))
#define ReceiptValidation_FGVSMJUBSRIK_014301C9 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_FGVSMJUBSRIK, 247, 20))
#define ReceiptValidation_FGVSMJUBSRIK_01A70001 ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_FGVSMJUBSRIK, 233, 16))
#define ReceiptValidation_FGVSMJUBSRIK_01A70093 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_FGVSMJUBSRIK, 132, 35))
#define ReceiptValidation_FGVSMJUBSRIK_01A700BC ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_FGVSMJUBSRIK, 181, 16))
#define ReceiptValidation_FGVSMJUBSRIK_01A7014A ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_FGVSMJUBSRIK, 145, 19))
#define ReceiptValidation_FGVSMJUBSRIK_02170141 ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 535, 92, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_FGVSMJUBSRIK, 150, 16))
#define ReceiptValidation_QKHEAAOULPHS_00D4001F ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_QKHEAAOULPHS, 98, 37))
#define ReceiptValidation_QKHEAAOULPHS_00D40164 ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_QKHEAAOULPHS, 170, 36))
#define ReceiptValidation_QKHEAAOULPHS_01A7000B ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_QKHEAAOULPHS, 212, 16))
#define ReceiptValidation_QKHEAAOULPHS_01A7003E ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_QKHEAAOULPHS, 13, 21))
#define ReceiptValidation_QKHEAAOULPHS_01A701D0 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_QKHEAAOULPHS, 230, 16))
#define ReceiptValidation_QKHEAAOULPHS_01EA004E ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 490, 245, 51, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_QKHEAAOULPHS, 126, 18))
#define ReceiptValidation_QKHEAAOULPHS_01F60117 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 502, 99, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_QKHEAAOULPHS, 69, 32))
#define ReceiptValidation_QKHEAAOULPHS_021D021F ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_QKHEAAOULPHS, 204, 16))
#define ReceiptValidation_IBNQQCBEGLIG_00D4005D ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_IBNQQCBEGLIG, 121, 16))
#define ReceiptValidation_IBNQQCBEGLIG_014300CD ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_IBNQQCBEGLIG, 83, 18))
#define ReceiptValidation_IBNQQCBEGLIG_01A7003B ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_IBNQQCBEGLIG, 84, 34))
#define ReceiptValidation_IBNQQCBEGLIG_01A70218 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_IBNQQCBEGLIG, 57, 36))
#define ReceiptValidation_IBNQQCBEGLIG_01F6004C ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 502, 99, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_IBNQQCBEGLIG, 103, 38))
#define ReceiptValidation_CUZJROMPTUCM_01430030 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_CUZJROMPTUCM, 249, 16))
#define ReceiptValidation_CUZJROMPTUCM_01A700F2 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_CUZJROMPTUCM, 181, 33))
#define ReceiptValidation_CUZJROMPTUCM_01A701BD ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_CUZJROMPTUCM, 172, 22))
#define ReceiptValidation_CUZJROMPTUCM_01F6013A ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 502, 99, 49, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_CUZJROMPTUCM, 72, 18))
#define ReceiptValidation_CUZJROMPTUCM_02200214 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_CUZJROMPTUCM, 173, 20))
#define ReceiptValidation_FNRNNCEXFXAX_00D40006 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_FNRNNCEXFXAX, 33, 21))
#define ReceiptValidation_FNRNNCEXFXAX_00D40029 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_FNRNNCEXFXAX, 180, 38))
#define ReceiptValidation_FNRNNCEXFXAX_00D401F4 ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_FNRNNCEXFXAX, 53, 33))
#define ReceiptValidation_FNRNNCEXFXAX_01A70054 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_FNRNNCEXFXAX, 194, 37))
#define ReceiptValidation_FNRNNCEXFXAX_01A700F5 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_FNRNNCEXFXAX, 124, 18))
#define ReceiptValidation_FNRNNCEXFXAX_01A70160 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_FNRNNCEXFXAX, 2, 16))
#define ReceiptValidation_FNRNNCEXFXAX_02200087 ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_FNRNNCEXFXAX, 185, 38))
#define ReceiptValidation_IOObjectRelease_0217000F ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 535, 92, 49, ReceiptValidation_ObfuscationFunction008, 15, 1, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_01A70028 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction007, 40, 253, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_01A7016F ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction007, 367, 14, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_014300A6 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction009, 166, 88, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_01A70168 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction005, 360, 246, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0143015D ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction005, 349, 119, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01A70137 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 423, 145, 67, ReceiptValidation_ObfuscationFunction006, 311, 150, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D400D5 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction008, 213, 246, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D401F5 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 212, 187, 67, ReceiptValidation_ObfuscationFunction007, 501, 23, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_014301F5 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 323, 93, 67, ReceiptValidation_ObfuscationFunction007, 501, 23, 32))
#define ReceiptValidation_kSecClass_00E10111 ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction00C, 273, 66, 16))
#define ReceiptValidation_kSecClass_022001DD ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction007, 477, 83, 16))
#define ReceiptValidation_kSecClassCertificate_015E00CC ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 350, 208, 55, ReceiptValidation_ObfuscationFunction00C, 204, 207, 21))
#define ReceiptValidation_kSecClassCertificate_015E013C ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 350, 208, 55, ReceiptValidation_ObfuscationFunction00A, 316, 224, 21))
#define ReceiptValidation_kSecMatchLimit_00E100E2 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction004, 226, 23, 16))
#define ReceiptValidation_kSecMatchLimit_015E00E2 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 350, 208, 55, ReceiptValidation_ObfuscationFunction004, 226, 23, 16))
#define ReceiptValidation_kSecMatchLimitAll_00E101DE ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction003, 478, 182, 18))
#define ReceiptValidation_kSecMatchLimitAll_022001F3 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction006, 499, 108, 18))
#define ReceiptValidation_kSecMatchSearchList_00E100D6 ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction00C, 214, 48, 20))
#define ReceiptValidation_kSecMatchSearchList_0220008D ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 544, 54, 55, ReceiptValidation_ObfuscationFunction008, 141, 200, 20))
#define ReceiptValidation_kSecMatchSubjectContains_00E10203 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction008, 515, 219, 33))
#define ReceiptValidation_kSecMatchSubjectContains_015E0203 ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 350, 208, 55, ReceiptValidation_ObfuscationFunction008, 515, 219, 33))
#define ReceiptValidation_kSecReturnRef_00E10249 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction00B, 585, 216, 16))
#define ReceiptValidation_kSecReturnRef_015E017B ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 350, 208, 55, ReceiptValidation_ObfuscationFunction008, 379, 130, 16))
#define ReceiptValidation_longjmp_00C4006E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 196, 111, 33, ReceiptValidation_ObfuscationFunction003, 110, 191, 16))
#define ReceiptValidation_longjmp_00EB006E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction003, 110, 191, 16))
#define ReceiptValidation_longjmp_00EB00C8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction00B, 200, 75, 16))
#define ReceiptValidation_longjmp_00EB00F6 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 235, 105, 33, ReceiptValidation_ObfuscationFunction007, 246, 29, 16))
#define ReceiptValidation_longjmp_021D006E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction003, 110, 191, 16))
#define ReceiptValidation_longjmp_021D00C8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 541, 53, 33, ReceiptValidation_ObfuscationFunction00B, 200, 75, 16))
#define ReceiptValidation_OBJ_txt2obj_0000025E ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00B, 606, 147, 16))
#define ReceiptValidation_objc_getClass_0077014C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction009, 332, 216, 16))
#define ReceiptValidation_objc_getClass_007701C1 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction006, 449, 155, 16))
#define ReceiptValidation_objc_getClass_01B2014C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction009, 332, 216, 16))
#define ReceiptValidation_objc_getClass_01B201C1 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction006, 449, 155, 16))
#define ReceiptValidation_objc_getClass_0254014C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction009, 332, 216, 16))
#define ReceiptValidation_objc_getClass_025401C1 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction006, 449, 155, 16))
#define ReceiptValidation_objc_getClass_0254023F ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction008, 575, 76, 16))
#define ReceiptValidation_objc_msgSend_007700C3 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction008, 195, 47, 16))
#define ReceiptValidation_objc_msgSend_007701B6 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction00B, 438, 78, 16))
#define ReceiptValidation_objc_msgSend_00770248 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction00A, 584, 50, 16))
#define ReceiptValidation_objc_msgSend_01B200C3 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction008, 195, 47, 16))
#define ReceiptValidation_objc_msgSend_01B20248 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction00A, 584, 50, 16))
#define ReceiptValidation_objc_msgSend_025400C3 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction008, 195, 47, 16))
#define ReceiptValidation_objc_msgSend_025401B6 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction00B, 438, 78, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_00000174 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction009, 372, 17, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_00960174 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction009, 372, 17, 32))
#define ReceiptValidation_PKCS7_free_00000040 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction008, 64, 99, 16))
#define ReceiptValidation_PKCS7_free_010B0040 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction008, 64, 99, 16))
#define ReceiptValidation_PKCS7_get0_signers_0000010F ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction007, 271, 59, 19))
#define ReceiptValidation_PKCS7_verify_010B00DD ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction003, 221, 245, 16))
#define ReceiptValidation_SecKeychainOpen_00E101AD ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 225, 206, 55, ReceiptValidation_ObfuscationFunction006, 429, 22, 16))
#define ReceiptValidation_sel_registerName_00770037 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction008, 55, 148, 17))
#define ReceiptValidation_sel_registerName_00770231 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 119, 225, 23, ReceiptValidation_ObfuscationFunction009, 561, 152, 17))
#define ReceiptValidation_sel_registerName_01B2022D ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction00A, 557, 144, 17))
#define ReceiptValidation_sel_registerName_01B20231 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 434, 122, 23, ReceiptValidation_ObfuscationFunction009, 561, 152, 17))
#define ReceiptValidation_sel_registerName_02540037 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction008, 55, 148, 17))
#define ReceiptValidation_sel_registerName_0254022D ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 596, 64, 23, ReceiptValidation_ObfuscationFunction00A, 557, 144, 17))
#define ReceiptValidation_setjmp_00C4002E ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 196, 111, 33, ReceiptValidation_ObfuscationFunction008, 46, 205, 16))
#define ReceiptValidation_SHA1_010B0189 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction003, 393, 162, 16))
#define ReceiptValidation_SHA1_Final_010B017D ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00C, 381, 95, 16))
#define ReceiptValidation_SHA1_Init_010B00CF ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction004, 207, 77, 16))
#define ReceiptValidation_SHA1_Update_0096006C ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction008, 108, 230, 16))
#define ReceiptValidation_sk_free_00000011 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction009, 17, 227, 16))
#define ReceiptValidation_sk_num_010B00FF ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00B, 255, 194, 16))
#define ReceiptValidation_sk_value_0096001D ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction009, 29, 130, 16))
#define ReceiptValidation_X509_digest_010B021E ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction007, 542, 208, 16))
#define ReceiptValidation_X509_free_010B001E ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction00C, 30, 38, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_00960099 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction00B, 153, 96, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_010B0207 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction005, 519, 173, 34))
#define ReceiptValidation_X509_STORE_add_cert_0000006F ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 0, 192, 16, ReceiptValidation_ObfuscationFunction00A, 111, 181, 20))
#define ReceiptValidation_X509_STORE_free_010B0104 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction007, 267, 43, 16, ReceiptValidation_ObfuscationFunction008, 260, 250, 16))
#define ReceiptValidation_X509_STORE_new_0096011A ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 150, 22, 16, ReceiptValidation_ObfuscationFunction003, 282, 169, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[89])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[3])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[89])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[573])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[3])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[89])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[3])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[573])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
        char ReceiptValidation_tmp1[608], ReceiptValidation_tmp2[608];
        // Load the library if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
            ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
            ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[10])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
            ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
            ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[308])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
        }
        return ReceiptValidation_Pointers[ReceiptValidation_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_00D400F3();
        if (!ReceiptValidation_bundle) {
            // Dead code
            ReceiptValidation_CFRelease_00D400F1(ReceiptValidation_bundle);
            ReceiptValidation_CFBundleUnloadExecutable_01A700D8((CFBundleRef) ReceiptValidation_bundle);
        }
        ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
        // Global variables computation
        // Set to 473
        ReceiptValidation_AGFRDNDDPBID = 473;
        // Set to 264
        ReceiptValidation_RYYEBKCREKCP = 264;
        // Set to 457
        ReceiptValidation_YVEWTRCAJJQM = 457;
        // Set to 266
        ReceiptValidation_FGVSMJUBSRIK = 266;
        // Set to 356
        ReceiptValidation_QKHEAAOULPHS = 356;
        // Set to 205
        ReceiptValidation_IBNQQCBEGLIG = 205;
        // Set to 445
        ReceiptValidation_CUZJROMPTUCM = 445;
        // Set to 41
        ReceiptValidation_FNRNNCEXFXAX = 41;
    }
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_00D400F3(); \
if (!ReceiptValidation_bundle) { \
ReceiptValidation_CFRelease_00D400F1(ReceiptValidation_bundle); \
ReceiptValidation_CFBundleUnloadExecutable_01A700D8((CFBundleRef) ReceiptValidation_bundle); \
} \
ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
ReceiptValidation_AGFRDNDDPBID = 473; \
ReceiptValidation_RYYEBKCREKCP = 264; \
ReceiptValidation_YVEWTRCAJJQM = 457; \
ReceiptValidation_FGVSMJUBSRIK = 266; \
ReceiptValidation_QKHEAAOULPHS = 356; \
ReceiptValidation_IBNQQCBEGLIG = 205; \
ReceiptValidation_CUZJROMPTUCM = 445; \
ReceiptValidation_FNRNNCEXFXAX = 41; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt02C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
        CFReadStreamRef ReceiptValidation_stream;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[608];
        volatile int ReceiptValidation_code = 147; ReceiptValidation_code -= 90; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
        // Compute the path to the receipt
        ReceiptValidation_url1 = ReceiptValidation_CUZJROMPTUCM_01A701BD((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[103]), 53, 16);
        ReceiptValidation_url2 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[25]), 52, 16);
        ReceiptValidation_url1 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url2);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[410]), 208, 16);
        ReceiptValidation_url2 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1);
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_AGFRDNDDPBID_014301D9(kCFAllocatorDefault, ReceiptValidation_url2);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_FGVSMJUBSRIK_00D4010A(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021D006B(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_YVEWTRCAJJQM_00D401C9(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_01430166(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_CFDataAppendBytes_00D400F5(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_IBNQQCBEGLIG_014300CD(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 473 to 408
        ReceiptValidation_AGFRDNDDPBID += 343; ReceiptValidation_AGFRDNDDPBID /= 2;
        // From 264 to 556
        ReceiptValidation_RYYEBKCREKCP -= 125; ReceiptValidation_RYYEBKCREKCP *= 4;
        // From 266 to 321
        ReceiptValidation_FGVSMJUBSRIK -= 159; ReceiptValidation_FGVSMJUBSRIK *= 3;
        // From 356 to 279
        ReceiptValidation_QKHEAAOULPHS += 202; ReceiptValidation_QKHEAAOULPHS /= 2;
        // From 205 to 76
        ReceiptValidation_IBNQQCBEGLIG += 99; ReceiptValidation_IBNQQCBEGLIG /= 4;
        // Set to 314
        ReceiptValidation_CUZJROMPTUCM = 314;
    ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url2);
    }
#else
#define ReceiptValidation_LoadReceipt02C(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
CFReadStreamRef ReceiptValidation_stream; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[608]; \
volatile int ReceiptValidation_code = 147; ReceiptValidation_code -= 90; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
ReceiptValidation_url1 = ReceiptValidation_CUZJROMPTUCM_01A701BD((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[103]), 53, 16); \
ReceiptValidation_url2 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url1, ReceiptValidation_str1, true); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[25]), 52, 16); \
ReceiptValidation_url1 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url2, ReceiptValidation_str1, true); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url2); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[410]), 208, 16); \
ReceiptValidation_url2 = ReceiptValidation_FNRNNCEXFXAX_00D40029(NULL, ReceiptValidation_url1, ReceiptValidation_str1, false); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1); \
ReceiptValidation_stream = ReceiptValidation_AGFRDNDDPBID_014301D9(kCFAllocatorDefault, ReceiptValidation_url2); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_FGVSMJUBSRIK_00D4010A(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021D006B(ReceiptValidation_code); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_YVEWTRCAJJQM_00D401C9(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_01430166(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_CFDataAppendBytes_00D400F5(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_IBNQQCBEGLIG_014300CD(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_AGFRDNDDPBID += 343; ReceiptValidation_AGFRDNDDPBID /= 2;  \
ReceiptValidation_RYYEBKCREKCP -= 125; ReceiptValidation_RYYEBKCREKCP *= 4;  \
ReceiptValidation_FGVSMJUBSRIK -= 159; ReceiptValidation_FGVSMJUBSRIK *= 3;  \
ReceiptValidation_QKHEAAOULPHS += 202; ReceiptValidation_QKHEAAOULPHS /= 2;  \
ReceiptValidation_IBNQQCBEGLIG += 99; ReceiptValidation_IBNQQCBEGLIG /= 4;  \
ReceiptValidation_CUZJROMPTUCM = 314; \
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_014300F1(ReceiptValidation_url2); \
}
#endif
#endif
    
#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt02C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1 = NULL;
        CFReadStreamRef ReceiptValidation_stream = NULL;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[608];
        char ReceiptValidation_path[PATH_MAX];
        int ReceiptValidation_status;
        glob_t ReceiptValidation_glob_buffer;
        char *ReceiptValidation_expanded_path;
        volatile int ReceiptValidation_code = 137; ReceiptValidation_code -= 80; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[138]), 190, 16);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
        // Compute the path to the receipt
        if (!ReceiptValidation_QKHEAAOULPHS_00D40164(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021D006B(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[453])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
        if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
            ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[384])(&ReceiptValidation_glob_buffer);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021D006B(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
        }
        // Get the globbed path
        ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
        ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_014300DF(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[338])(ReceiptValidation_expanded_path), false);
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[384])(&ReceiptValidation_glob_buffer);
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_AGFRDNDDPBID_014301D9(kCFAllocatorDefault, ReceiptValidation_url1);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_FGVSMJUBSRIK_00D4010A(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021D006B(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_YVEWTRCAJJQM_00D401C9(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_01430166(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_CFDataAppendBytes_014300F5(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_IBNQQCBEGLIG_014300CD(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 473 to 408
        ReceiptValidation_AGFRDNDDPBID += 343; ReceiptValidation_AGFRDNDDPBID /= 2;
        // From 264 to 556
        ReceiptValidation_RYYEBKCREKCP -= 125; ReceiptValidation_RYYEBKCREKCP *= 4;
        // From 266 to 321
        ReceiptValidation_FGVSMJUBSRIK -= 159; ReceiptValidation_FGVSMJUBSRIK *= 3;
        // From 356 to 279
        ReceiptValidation_QKHEAAOULPHS += 202; ReceiptValidation_QKHEAAOULPHS /= 2;
        // From 205 to 76
        ReceiptValidation_IBNQQCBEGLIG += 99; ReceiptValidation_IBNQQCBEGLIG /= 4;
        // Set to 314
        ReceiptValidation_CUZJROMPTUCM = 314;
    ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1);
        if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1);
    }
#else
#define ReceiptValidation_LoadReceipt02C(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1 = NULL; \
CFReadStreamRef ReceiptValidation_stream = NULL; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[608]; \
char ReceiptValidation_path[PATH_MAX]; \
int ReceiptValidation_status; \
glob_t ReceiptValidation_glob_buffer; \
char *ReceiptValidation_expanded_path; \
volatile int ReceiptValidation_code = 137; ReceiptValidation_code -= 80; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[138]), 190, 16); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
if (!ReceiptValidation_QKHEAAOULPHS_00D40164(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021D006B(ReceiptValidation_code); \
goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ((__ReceiptValidation_glob_b) ReceiptValidation_Pointers[453])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[384])(&ReceiptValidation_glob_buffer); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021D006B(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
} \
ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
ReceiptValidation_url1 = ReceiptValidation_CFURLCreateFromFileSystemRepresentation_014300DF(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[338])(ReceiptValidation_expanded_path), false); \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[384])(&ReceiptValidation_glob_buffer); \
ReceiptValidation_stream = ReceiptValidation_AGFRDNDDPBID_014301D9(kCFAllocatorDefault, ReceiptValidation_url1); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_FGVSMJUBSRIK_00D4010A(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021D006B(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_YVEWTRCAJJQM_00D401C9(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_01430166(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_CFDataAppendBytes_014300F5(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_IBNQQCBEGLIG_014300CD(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_AGFRDNDDPBID += 343; ReceiptValidation_AGFRDNDDPBID /= 2;  \
ReceiptValidation_RYYEBKCREKCP -= 125; ReceiptValidation_RYYEBKCREKCP *= 4;  \
ReceiptValidation_FGVSMJUBSRIK -= 159; ReceiptValidation_FGVSMJUBSRIK *= 3;  \
ReceiptValidation_QKHEAAOULPHS += 202; ReceiptValidation_QKHEAAOULPHS /= 2;  \
ReceiptValidation_IBNQQCBEGLIG += 99; ReceiptValidation_IBNQQCBEGLIG /= 4;  \
ReceiptValidation_CUZJROMPTUCM = 314; \
ReceiptValidation_LoadReceipt02C_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_str1); \
if (ReceiptValidation_url1) ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_url1); \
}
#endif
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void ReceiptValidation_GetGUID046(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        kern_return_t ReceiptValidation_kernResult;
        mach_port_t ReceiptValidation_master_port;
        CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
        io_iterator_t ReceiptValidation_iterator;
        io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
        char *ReceiptValidation_str1;
        CFStringRef ReceiptValidation_str2;
        ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[140]), 12, 16);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
        // Open a MACH port
        ReceiptValidation_kernResult = ReceiptValidation_FGVSMJUBSRIK_02170141(MACH_PORT_NULL, &ReceiptValidation_master_port);
        if (ReceiptValidation_kernResult != KERN_SUCCESS) {
            // Dead code
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict);
            goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
        }
        // Create a search for primary interface
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[405]), ReceiptValidation_str1_, 149, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_matching_dict = ReceiptValidation_CUZJROMPTUCM_01F6013A(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
        if (!ReceiptValidation_matching_dict) {
            // Dead code
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict);
            goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
        }
        // Perform the search
        ReceiptValidation_kernResult = ReceiptValidation_RYYEBKCREKCP_01F6022C(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
        if (ReceiptValidation_kernResult != KERN_SUCCESS) {
            // Dead code
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2);
            goto ReceiptValidation_GetGUID046_ReceiptValidation_bail;
        }
        // Iterate over the result
        while((ReceiptValidation_service = ReceiptValidation_AGFRDNDDPBID_02170198(ReceiptValidation_iterator)) != 0) {
            ReceiptValidation_kernResult = ReceiptValidation_IBNQQCBEGLIG_01F6004C(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
            if (ReceiptValidation_kernResult == KERN_SUCCESS) {
                if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_ctx->guid_data);
                ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_QKHEAAOULPHS_01F60117(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
                ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_parent_service);
            }
            ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_iterator);
            ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_service);
        }
        // Global variables computation
        // From 408 to 489
        ReceiptValidation_AGFRDNDDPBID -= 245; ReceiptValidation_AGFRDNDDPBID *= 3;
        // From 556 to 231
        ReceiptValidation_RYYEBKCREKCP += 368; ReceiptValidation_RYYEBKCREKCP /= 4;
        // From 457 to 215
        ReceiptValidation_YVEWTRCAJJQM += 403; ReceiptValidation_YVEWTRCAJJQM /= 4;
        // From 321 to 330
        ReceiptValidation_FGVSMJUBSRIK -= 211; ReceiptValidation_FGVSMJUBSRIK *= 3;
        // From 279 to 62
        ReceiptValidation_QKHEAAOULPHS += 93; ReceiptValidation_QKHEAAOULPHS /= 6;
        // From 76 to 59
        ReceiptValidation_IBNQQCBEGLIG += 42; ReceiptValidation_IBNQQCBEGLIG /= 2;
        // From 314 to 532
        ReceiptValidation_CUZJROMPTUCM -= 137; ReceiptValidation_CUZJROMPTUCM *= 3; ReceiptValidation_CUZJROMPTUCM += 1;
        // From 41 to 135
        ReceiptValidation_FNRNNCEXFXAX -= 14; ReceiptValidation_FNRNNCEXFXAX *= 5;
    ReceiptValidation_GetGUID046_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2);
    }
#else
#define ReceiptValidation_GetGUID046(ReceiptValidation_ctx) { \
kern_return_t ReceiptValidation_kernResult; \
mach_port_t ReceiptValidation_master_port; \
CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
io_iterator_t ReceiptValidation_iterator; \
io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
char *ReceiptValidation_str1; \
CFStringRef ReceiptValidation_str2; \
ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[140]), 12, 16);  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
ReceiptValidation_kernResult = ReceiptValidation_FGVSMJUBSRIK_02170141(MACH_PORT_NULL, &ReceiptValidation_master_port); \
if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict); \
goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
} \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[405]), ReceiptValidation_str1_, 149, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_matching_dict = ReceiptValidation_CUZJROMPTUCM_01F6013A(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
if (!ReceiptValidation_matching_dict) { \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict); \
goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
} \
ReceiptValidation_kernResult = ReceiptValidation_RYYEBKCREKCP_01F6022C(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2); \
goto ReceiptValidation_GetGUID046_ReceiptValidation_bail; \
} \
while((ReceiptValidation_service = ReceiptValidation_AGFRDNDDPBID_02170198(ReceiptValidation_iterator)) != 0) { \
ReceiptValidation_kernResult = ReceiptValidation_IBNQQCBEGLIG_01F6004C(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_ctx->guid_data); \
ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_QKHEAAOULPHS_01F60117(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_parent_service); \
} \
ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_iterator); \
ReceiptValidation_IOObjectRelease_0217000F(ReceiptValidation_service); \
} \
ReceiptValidation_AGFRDNDDPBID -= 245; ReceiptValidation_AGFRDNDDPBID *= 3;  \
ReceiptValidation_RYYEBKCREKCP += 368; ReceiptValidation_RYYEBKCREKCP /= 4;  \
ReceiptValidation_YVEWTRCAJJQM += 403; ReceiptValidation_YVEWTRCAJJQM /= 4;  \
ReceiptValidation_FGVSMJUBSRIK -= 211; ReceiptValidation_FGVSMJUBSRIK *= 3;  \
ReceiptValidation_QKHEAAOULPHS += 93; ReceiptValidation_QKHEAAOULPHS /= 6;  \
ReceiptValidation_IBNQQCBEGLIG += 42; ReceiptValidation_IBNQQCBEGLIG /= 2;  \
ReceiptValidation_CUZJROMPTUCM -= 137; ReceiptValidation_CUZJROMPTUCM *= 3; ReceiptValidation_CUZJROMPTUCM += 1;  \
ReceiptValidation_FNRNNCEXFXAX -= 14; ReceiptValidation_FNRNNCEXFXAX *= 5;  \
ReceiptValidation_GetGUID046_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str2); \
}
#endif
    
    
    // CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA052(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        CFDictionaryRef ReceiptValidation_searchDict = NULL;
        char *ReceiptValidation_str1;
        CFTypeRef ReceiptValidation_str2 = NULL;
        CFIndex ReceiptValidation_idx;
        CFTypeRef ReceiptValidation_results = NULL;
        SecCertificateRef ReceiptValidation_certificate = NULL;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;
        const void *ReceiptValidation_searchKeys[5];
        const void *ReceiptValidation_searchValues[5];
        volatile int ReceiptValidation_code = 11; ReceiptValidation_code -= 1; ReceiptValidation_code *= 17; ReceiptValidation_code += 3;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[509]), ReceiptValidation_str1_, 50, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_00E101AD(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = ReceiptValidation_CFArrayCreateMutable_00D401EE(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01A70168);
        ReceiptValidation_FGVSMJUBSRIK_01A7014A((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
        // Create the criteria dictionary to find the Apple Root CA certificate
        ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[451]), 179, 16);
        ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00E10111;
        ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_015E00CC;
        ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00E100D6;
        ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
        ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_015E0203;
        ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
        ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_015E00E2;
        ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00E101DE;
        ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00E10249;
        ReceiptValidation_searchValues[4] = kCFBooleanTrue;
        ReceiptValidation_searchDict = ReceiptValidation_IBNQQCBEGLIG_01A7003B(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01A70137, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D401F5);
        while(ReceiptValidation_count2-- > 0) {
            ReceiptValidation_QKHEAAOULPHS_01A7003E((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]);
        }
        // Perform the actual search
        ReceiptValidation_status = ReceiptValidation_CUZJROMPTUCM_02200214(ReceiptValidation_searchDict, &ReceiptValidation_results);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_00D40039((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
            ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_RYYEBKCREKCP_014300E7((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_YVEWTRCAJJQM_022000D7(ReceiptValidation_certificate);
        }
        // Global variables computation
        // From 489 to 162
        ReceiptValidation_AGFRDNDDPBID += 321; ReceiptValidation_AGFRDNDDPBID /= 5;
        // From 215 to 66
        ReceiptValidation_YVEWTRCAJJQM += 115; ReceiptValidation_YVEWTRCAJJQM /= 5;
        // From 135 to 84
        ReceiptValidation_FNRNNCEXFXAX += 117; ReceiptValidation_FNRNNCEXFXAX /= 3;
    ReceiptValidation_GetRootCA052_ReceiptValidation_bail:
        if (ReceiptValidation_str2) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str2);
        if (ReceiptValidation_results) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_results);
        if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_searchDict);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA052(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
CFDictionaryRef ReceiptValidation_searchDict = NULL; \
char *ReceiptValidation_str1; \
CFTypeRef ReceiptValidation_str2 = NULL; \
CFIndex ReceiptValidation_idx; \
CFTypeRef ReceiptValidation_results = NULL; \
SecCertificateRef ReceiptValidation_certificate = NULL; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 4; ReceiptValidation_count2 -= 3; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
const void *ReceiptValidation_searchKeys[5]; \
const void *ReceiptValidation_searchValues[5]; \
volatile int ReceiptValidation_code = 11; ReceiptValidation_code -= 1; ReceiptValidation_code *= 17; ReceiptValidation_code += 3;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[509]), ReceiptValidation_str1_, 50, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_00E101AD(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = ReceiptValidation_CFArrayCreateMutable_00D401EE(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_01A70168); \
ReceiptValidation_FGVSMJUBSRIK_01A7014A((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[451]), 179, 16); \
ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_00E10111; \
ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_015E00CC; \
ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_00E100D6; \
ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_015E0203; \
ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_015E00E2; \
ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_00E101DE; \
ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00E10249; \
ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
ReceiptValidation_searchDict = ReceiptValidation_IBNQQCBEGLIG_01A7003B(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_01A70137, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00D401F5); \
while(ReceiptValidation_count2-- > 0) { \
ReceiptValidation_QKHEAAOULPHS_01A7003E((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]); \
} \
ReceiptValidation_status = ReceiptValidation_CUZJROMPTUCM_02200214(ReceiptValidation_searchDict, &ReceiptValidation_results); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
} \
for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_CFArrayGetCount_00D40039((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_RYYEBKCREKCP_014300E7((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_YVEWTRCAJJQM_022000D7(ReceiptValidation_certificate); \
} \
ReceiptValidation_AGFRDNDDPBID += 321; ReceiptValidation_AGFRDNDDPBID /= 5;  \
ReceiptValidation_YVEWTRCAJJQM += 115; ReceiptValidation_YVEWTRCAJJQM /= 5;  \
ReceiptValidation_FNRNNCEXFXAX += 117; ReceiptValidation_FNRNNCEXFXAX /= 3;  \
ReceiptValidation_GetRootCA052_ReceiptValidation_bail: \
if (ReceiptValidation_str2) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_str2); \
if (ReceiptValidation_results) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_results); \
if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_searchDict); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_014300F1(ReceiptValidation_keychain); \
}
#endif
#endif
    
#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA052(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        char *ReceiptValidation_str1, *ReceiptValidation_str2;
        SecKeychainAttributeList ReceiptValidation_attributeList;
        SecKeychainAttribute ReceiptValidation_attribute;
        SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
        SecKeychainItemRef ReceiptValidation_itemRef = nil;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;
        volatile CFIndex ReceiptValidation_count3 = 10; ReceiptValidation_count3 -= 6; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;
        volatile int ReceiptValidation_code = 38; ReceiptValidation_code -= 10; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[256]), ReceiptValidation_str1_, 204, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_00E101AD(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = ReceiptValidation_CFArrayCreateMutable_01A701EE(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_014300A6);
        ReceiptValidation_FGVSMJUBSRIK_01A7014A((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain);
        // Create the criteria dictionary to find the Apple Root CA certificate
        char ReceiptValidation_str2_[608];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[362]), ReceiptValidation_str2_, 240, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_attributeList.count = 1;
        ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
        ReceiptValidation_attribute.tag = kSecLabelItemAttr;
        ReceiptValidation_attribute.data = ReceiptValidation_str2;
        ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
        ReceiptValidation_status = ReceiptValidation_FNRNNCEXFXAX_02200087(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        while(ReceiptValidation_AGFRDNDDPBID_00E101E9(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_YVEWTRCAJJQM_022000D7((SecCertificateRef) ReceiptValidation_itemRef);
        }
        // Global variables computation
        // From 489 to 162
        ReceiptValidation_AGFRDNDDPBID += 321; ReceiptValidation_AGFRDNDDPBID /= 5;
        // From 215 to 66
        ReceiptValidation_YVEWTRCAJJQM += 115; ReceiptValidation_YVEWTRCAJJQM /= 5;
        // From 135 to 84
        ReceiptValidation_FNRNNCEXFXAX += 117; ReceiptValidation_FNRNNCEXFXAX /= 3;
    ReceiptValidation_GetRootCA052_ReceiptValidation_bail:
        if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_itemRef);
        if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_searchRef);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA052(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
char *ReceiptValidation_str1, *ReceiptValidation_str2; \
SecKeychainAttributeList ReceiptValidation_attributeList; \
SecKeychainAttribute ReceiptValidation_attribute; \
SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
SecKeychainItemRef ReceiptValidation_itemRef = nil; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 3; ReceiptValidation_count2 -= 2; ReceiptValidation_count2 *= 3; ReceiptValidation_count2 += 2;  \
volatile CFIndex ReceiptValidation_count3 = 10; ReceiptValidation_count3 -= 6; ReceiptValidation_count3 *= 3; ReceiptValidation_count3 += 1;  \
volatile int ReceiptValidation_code = 38; ReceiptValidation_code -= 10; ReceiptValidation_code *= 6; ReceiptValidation_code += 5;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[256]), ReceiptValidation_str1_, 204, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_SecKeychainOpen_00E101AD(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = ReceiptValidation_CFArrayCreateMutable_01A701EE(kCFAllocatorDefault, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_014300A6); \
ReceiptValidation_FGVSMJUBSRIK_01A7014A((CFMutableArrayRef) ReceiptValidation_searchList, ReceiptValidation_keychain); \
char ReceiptValidation_str2_[608]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[362]), ReceiptValidation_str2_, 240, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_attributeList.count = 1; \
ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
ReceiptValidation_attribute.data = ReceiptValidation_str2; \
ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
ReceiptValidation_status = ReceiptValidation_FNRNNCEXFXAX_02200087(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA052_ReceiptValidation_bail; \
} \
while(ReceiptValidation_AGFRDNDDPBID_00E101E9(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_YVEWTRCAJJQM_022000D7((SecCertificateRef) ReceiptValidation_itemRef); \
} \
ReceiptValidation_AGFRDNDDPBID += 321; ReceiptValidation_AGFRDNDDPBID /= 5;  \
ReceiptValidation_YVEWTRCAJJQM += 115; ReceiptValidation_YVEWTRCAJJQM /= 5;  \
ReceiptValidation_FNRNNCEXFXAX += 117; ReceiptValidation_FNRNNCEXFXAX /= 3;  \
ReceiptValidation_GetRootCA052_ReceiptValidation_bail: \
if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_itemRef); \
if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_searchRef); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_keychain); \
}
#endif
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[148]), 183, 21);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_01A70054((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_01A70028);
        if (ReceiptValidation_AGFRDNDDPBID_00D400A2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            volatile int ReceiptValidation_code = 128; ReceiptValidation_code -= 71; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C40112(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 162 to 548
        ReceiptValidation_AGFRDNDDPBID -= 53; ReceiptValidation_AGFRDNDDPBID *= 5; ReceiptValidation_AGFRDNDDPBID += 3;
        // From 62 to 31
        ReceiptValidation_QKHEAAOULPHS += 31; ReceiptValidation_QKHEAAOULPHS /= 3;
        ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[148]), 183, 21); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_01A70054((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_01A70028); \
if (ReceiptValidation_AGFRDNDDPBID_00D400A2(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
volatile int ReceiptValidation_code = 128; ReceiptValidation_code -= 71; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C40112(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1); \
} \
ReceiptValidation_AGFRDNDDPBID -= 53; ReceiptValidation_AGFRDNDDPBID *= 5; ReceiptValidation_AGFRDNDDPBID += 3;  \
ReceiptValidation_QKHEAAOULPHS += 31; ReceiptValidation_QKHEAAOULPHS /= 3;  \
ReceiptValidation_CFRelease_00D4007E(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleVersion061(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
        volatile int ReceiptValidation_code = 69; ReceiptValidation_code -= 26; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[73]), 18, 16);
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[299]), 220, 35);
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_QKHEAAOULPHS_00D4001F((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_AGFRDNDDPBID_01A70224(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2);
        }
        // Global variables computation
        // From 548 to 330
        ReceiptValidation_AGFRDNDDPBID += 442; ReceiptValidation_AGFRDNDDPBID /= 3;
        // From 231 to 287
        ReceiptValidation_RYYEBKCREKCP -= 136; ReceiptValidation_RYYEBKCREKCP *= 3; ReceiptValidation_RYYEBKCREKCP += 2;
        // From 66 to 581
        ReceiptValidation_YVEWTRCAJJQM -= 8; ReceiptValidation_YVEWTRCAJJQM *= 10; ReceiptValidation_YVEWTRCAJJQM += 1;
        // From 330 to 147
        ReceiptValidation_FGVSMJUBSRIK += 258; ReceiptValidation_FGVSMJUBSRIK /= 4;
        // From 31 to 464
        ReceiptValidation_QKHEAAOULPHS -= 2; ReceiptValidation_QKHEAAOULPHS *= 16;
        // From 59 to 536
        ReceiptValidation_IBNQQCBEGLIG -= 11; ReceiptValidation_IBNQQCBEGLIG *= 11; ReceiptValidation_IBNQQCBEGLIG += 8;
        // From 532 to 242
        ReceiptValidation_CUZJROMPTUCM += 436; ReceiptValidation_CUZJROMPTUCM /= 4;
        // Set to 245
        ReceiptValidation_FNRNNCEXFXAX = 245;
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion061(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
volatile int ReceiptValidation_code = 69; ReceiptValidation_code -= 26; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[73]), 18, 16); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[299]), 220, 35); \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_QKHEAAOULPHS_00D4001F((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_AGFRDNDDPBID_01A70224(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2); \
} \
ReceiptValidation_AGFRDNDDPBID += 442; ReceiptValidation_AGFRDNDDPBID /= 3;  \
ReceiptValidation_RYYEBKCREKCP -= 136; ReceiptValidation_RYYEBKCREKCP *= 3; ReceiptValidation_RYYEBKCREKCP += 2;  \
ReceiptValidation_YVEWTRCAJJQM -= 8; ReceiptValidation_YVEWTRCAJJQM *= 10; ReceiptValidation_YVEWTRCAJJQM += 1;  \
ReceiptValidation_FGVSMJUBSRIK += 258; ReceiptValidation_FGVSMJUBSRIK /= 4;  \
ReceiptValidation_QKHEAAOULPHS -= 2; ReceiptValidation_QKHEAAOULPHS *= 16;  \
ReceiptValidation_IBNQQCBEGLIG -= 11; ReceiptValidation_IBNQQCBEGLIG *= 11; ReceiptValidation_IBNQQCBEGLIG += 8;  \
ReceiptValidation_CUZJROMPTUCM += 436; ReceiptValidation_CUZJROMPTUCM /= 4;  \
ReceiptValidation_FNRNNCEXFXAX = 245; \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void ReceiptValidation_GetReceiptInformation064(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
        ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
        CFNumberRef ReceiptValidation_key;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
        CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
        int ReceiptValidation_type;
        int ReceiptValidation_xclass;
        long ReceiptValidation_length;
        CFDateFormatterRef ReceiptValidation_formatter = NULL;
        CFTimeZoneRef ReceiptValidation_tz = NULL;
        BIO *ReceiptValidation_bio_p7;
        PKCS7 *ReceiptValidation_pkcs7;
        ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
        ASN1_INTEGER *ReceiptValidation_value;
        const unsigned char *ReceiptValidation_seq_end;
        long ReceiptValidation_attr_type;
        long ReceiptValidation_attr_version;
        int ReceiptValidation_str_type;
        long ReceiptValidation_str_length;
        const unsigned char *ReceiptValidation_str_ptr;
        volatile int ReceiptValidation_code = 122; ReceiptValidation_code -= 65; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
        long ReceiptValidation_number;
        int ReceiptValidation_num_type;
        long ReceiptValidation_num_length;
        const unsigned char *ReceiptValidation_num_ptr;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010B0002(ReceiptValidation_BIO_s_mem_000000E3());
        ReceiptValidation_BIO_write_009600E0(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_0143005D((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_000000E5(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00D401D3(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[199]), 22, 33);
        ReceiptValidation_CUZJROMPTUCM_01A700F2(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
        ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1);
        ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_00D400A0(NULL, 0.0);
        ReceiptValidation_FGVSMJUBSRIK_01A70093(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_01A7016F, ReceiptValidation_tz);
        ReceiptValidation_CFRelease_014301A3(ReceiptValidation_tz);
        // Initial context
        ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
        ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
        ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
        ReceiptValidation_receipt_context.parent = NULL;
        ReceiptValidation_receipt_context.dictionary = NULL;
        ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            if (!ReceiptValidation_current_context->dictionary) {
                // Create the target dictionary
                ReceiptValidation_current_context->dictionary = ReceiptValidation_RYYEBKCREKCP_00D4011F(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0143015D, ReceiptValidation_kCFTypeDictionaryValueCallBacks_014301F5);
                // Decode payload from ASN.1
                ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SET) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                }
            }
            // Iterate over attributes
            while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
                // Parse attribute sequence
                ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                }
                ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
                ReceiptValidation_attr_type = 0;
                ReceiptValidation_attr_version = 0;
                // Parse the attribute type
                ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value);
                // Parse the attribute version
                ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value);
                // Check the attribute value
                ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                }
                ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3));
                ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3) + 1);
                ReceiptValidation_value1 = NULL;
                ReceiptValidation_value2 = NULL;
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
                switch (ReceiptValidation_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                        ReceiptValidation_value2 = ReceiptValidation_YVEWTRCAJJQM_01430245(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                    case ReceiptValidation_InAppAttributeTypeCancellationDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                        ReceiptValidation_value1 = ReceiptValidation_IBNQQCBEGLIG_01A70218(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                    case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                    {
                        ReceiptValidation_num_type = 0;
                        ReceiptValidation_num_length = 0;
                        ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                        if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_00C401FC(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                        ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value);
                        ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value);
                        ReceiptValidation_value1 = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberLongType, &ReceiptValidation_number);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                    {
                        ReceiptValidation_value1 = ReceiptValidation_YVEWTRCAJJQM_01430245(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_0143005D((CFDataRef) ReceiptValidation_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                        ReceiptValidation_inapp_context.dictionary = NULL;
                        ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                        ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                        goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key;
                    }
                    default:
                        break;
                }
                if (ReceiptValidation_value1) {
                    ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                    ReceiptValidation_CFDictionaryAddValue_01A7003E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1);
                }
                if (ReceiptValidation_value2) {
                    ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                    ReceiptValidation_CFDictionaryAddValue_01A7003E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                    ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value2);
                }
                // Move past the attribute
                ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            }
        ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key:
            // If the current context is a new one, continue parsing
            if (!ReceiptValidation_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (ReceiptValidation_current_context->parent) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
                ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
                ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01430015((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
                if (!ReceiptValidation_value1) {
                    ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01A701EE(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_014300A6);
                    ReceiptValidation_CFDictionarySetValue_00D40044((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1);
                }
                ReceiptValidation_AGFRDNDDPBID_00D4014A((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_014301A3(ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key);
                // Switch to parent context
                ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
                // Move past the child context
                ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
            }
        }
        if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
        // Global variables computation
        // Set to 155
        ReceiptValidation_YVEWTRCAJJQM = 155;
        // From 147 to 188
        ReceiptValidation_FGVSMJUBSRIK -= 85; ReceiptValidation_FGVSMJUBSRIK *= 3; ReceiptValidation_FGVSMJUBSRIK += 2;
    ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail:
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_010B0040(ReceiptValidation_pkcs7);
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0000007F(ReceiptValidation_bio_p7);
        if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_formatter);
    }
#else
#define ReceiptValidation_GetReceiptInformation064(ReceiptValidation_ctx) { \
ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
CFNumberRef ReceiptValidation_key; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
int ReceiptValidation_type; \
int ReceiptValidation_xclass; \
long ReceiptValidation_length; \
CFDateFormatterRef ReceiptValidation_formatter = NULL; \
CFTimeZoneRef ReceiptValidation_tz = NULL; \
BIO *ReceiptValidation_bio_p7; \
PKCS7 *ReceiptValidation_pkcs7; \
ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
ASN1_INTEGER *ReceiptValidation_value; \
const unsigned char *ReceiptValidation_seq_end; \
long ReceiptValidation_attr_type; \
long ReceiptValidation_attr_version; \
int ReceiptValidation_str_type; \
long ReceiptValidation_str_length; \
const unsigned char *ReceiptValidation_str_ptr; \
volatile int ReceiptValidation_code = 122; ReceiptValidation_code -= 65; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
long ReceiptValidation_number; \
int ReceiptValidation_num_type; \
long ReceiptValidation_num_length; \
const unsigned char *ReceiptValidation_num_ptr; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010B0002(ReceiptValidation_BIO_s_mem_000000E3()); \
ReceiptValidation_BIO_write_009600E0(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_0143005D((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_000000E5(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_00D401D3(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[199]), 22, 33); \
ReceiptValidation_CUZJROMPTUCM_01A700F2(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1); \
ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_00D400A0(NULL, 0.0); \
ReceiptValidation_FGVSMJUBSRIK_01A70093(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_01A7016F, ReceiptValidation_tz); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_tz); \
ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
ReceiptValidation_receipt_context.parent = NULL; \
ReceiptValidation_receipt_context.dictionary = NULL; \
ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
if (!ReceiptValidation_current_context->dictionary) { \
ReceiptValidation_current_context->dictionary = ReceiptValidation_RYYEBKCREKCP_00D4011F(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_0143015D, ReceiptValidation_kCFTypeDictionaryValueCallBacks_014301F5); \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SET) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
} \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
ReceiptValidation_attr_type = 0; \
ReceiptValidation_attr_version = 0; \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3)); \
ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 3) + 1); \
ReceiptValidation_value1 = NULL; \
ReceiptValidation_value2 = NULL; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
switch (ReceiptValidation_attr_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
ReceiptValidation_value2 = ReceiptValidation_YVEWTRCAJJQM_01430245(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
case ReceiptValidation_InAppAttributeTypeCancellationDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[466])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
ReceiptValidation_value1 = ReceiptValidation_IBNQQCBEGLIG_01A70218(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_InAppAttributeTypeQuantity: \
case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
{ \
ReceiptValidation_num_type = 0; \
ReceiptValidation_num_length = 0; \
ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_010B01A1(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C401FC(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_0096008F(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_010B003D(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_010B016D(ReceiptValidation_value); \
ReceiptValidation_value1 = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberLongType, &ReceiptValidation_number); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
{ \
ReceiptValidation_value1 = ReceiptValidation_YVEWTRCAJJQM_01430245(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_0143005D((CFDataRef) ReceiptValidation_value1)); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
{ \
ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
ReceiptValidation_inapp_context.dictionary = NULL; \
ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
goto ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key; \
} \
default: \
break; \
} \
if (ReceiptValidation_value1) { \
ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_CFDictionaryAddValue_01A7003E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1); \
} \
if (ReceiptValidation_value2) { \
ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
ReceiptValidation_CFDictionaryAddValue_01A7003E((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value2); \
} \
ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
} \
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_key: \
if (!ReceiptValidation_current_context->dictionary) { \
continue; \
} \
if (ReceiptValidation_current_context->parent) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A701D0(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01430015((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
if (!ReceiptValidation_value1) { \
ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_01A701EE(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_014300A6); \
ReceiptValidation_CFDictionarySetValue_00D40044((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_value1); \
} \
ReceiptValidation_AGFRDNDDPBID_00D4014A((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key); \
ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
} \
} \
if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
ReceiptValidation_YVEWTRCAJJQM = 155; \
ReceiptValidation_FGVSMJUBSRIK -= 85; ReceiptValidation_FGVSMJUBSRIK *= 3; ReceiptValidation_FGVSMJUBSRIK += 2;  \
ReceiptValidation_GetReceiptInformation064_ReceiptValidation_bail: \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_010B0040(ReceiptValidation_pkcs7); \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_0000007F(ReceiptValidation_bio_p7); \
if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_014301A3(ReceiptValidation_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature069(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        BIO *ReceiptValidation_bio_p7 = NULL;
        PKCS7 *ReceiptValidation_pkcs7 = NULL;
        STACK_OF(X509) *ReceiptValidation_certificates = NULL;
        X509 *ReceiptValidation_certificate = NULL;
        int ReceiptValidation_count, ReceiptValidation_index1;
        unsigned int ReceiptValidation_index2;
        ASN1_OBJECT *ReceiptValidation_oid = NULL;
        char *ReceiptValidation_str1;
        char *ReceiptValidation_str2;
        char *ReceiptValidation_str3;
        char *ReceiptValidation_str4;
        char *ReceiptValidation_str5;
        int ReceiptValidation_verify, ReceiptValidation_status;
        BIO *ReceiptValidation_bio_apple = NULL;
        X509 *ReceiptValidation_apple = NULL;
        X509_STORE *ReceiptValidation_store = NULL;
        volatile int ReceiptValidation_code = 116; ReceiptValidation_code -= 59; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010B00F7(ReceiptValidation_BIO_s_mem_00000204());
        ReceiptValidation_BIO_write_00000126(ReceiptValidation_bio_p7, (void *) ReceiptValidation_YVEWTRCAJJQM_0143009B((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_FGVSMJUBSRIK_01A700BC((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00960252(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        ReceiptValidation_OpenSSL_add_all_digests_00000174();
        // If the Apple Root CA certificate has been loaded, then check the receipt against it.
        if (ReceiptValidation_ctx->ca_data) {
            ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_010B00F7(ReceiptValidation_BIO_s_mem_00000204());
            ReceiptValidation_BIO_write_00000126(ReceiptValidation_bio_apple, (void *) ReceiptValidation_YVEWTRCAJJQM_0143009B((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_FGVSMJUBSRIK_01A700BC((CFDataRef) ReceiptValidation_ctx->ca_data));
            ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00000033(ReceiptValidation_bio_apple, NULL);
            if (!ReceiptValidation_apple) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            ReceiptValidation_store = ReceiptValidation_X509_STORE_new_0096011A();
            ReceiptValidation_X509_STORE_add_cert_0000006F(ReceiptValidation_store, ReceiptValidation_apple);
            // Check that the PKCS7_verify function is not tampered with
            // Check that the PKCS7 content is signed by the Apple Root CA certificate
            ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_010B00DD(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2829;
            if (ReceiptValidation_verify != 2829) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
        }
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        ReceiptValidation_verify = 0;
        ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
        ReceiptValidation_count = ReceiptValidation_sk_num_010B00FF((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0096001D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            char ReceiptValidation_common_name[608];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            // Retrieve the common name
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_010B0207(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608);
            if (ReceiptValidation_status <= 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            volatile unsigned int ReceiptValidation_digest_length = 19; ReceiptValidation_digest_length -= 13; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;
            char ReceiptValidation_str2_[608];
            ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[582]), ReceiptValidation_str2_, 230, 16);
            ReceiptValidation_str2 = ReceiptValidation_str2_;
            const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_0000002A(ReceiptValidation_str2);
            unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
            unsigned int ReceiptValidation_len = 0;
            // Check that the X509_digest function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_digest_010B021E(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2829;
            if (ReceiptValidation_status == 2829 || ReceiptValidation_len > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            ReceiptValidation_status = ReceiptValidation_X509_digest_010B021E(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2829;
            if (ReceiptValidation_status != 2829 || ReceiptValidation_len != ReceiptValidation_digest_length) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            char ReceiptValidation_fingerprint[608];
            volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;
            for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
                snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X", ReceiptValidation_digest[ReceiptValidation_index2]);
            }
            char ReceiptValidation_str3_[608];
            ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[172]), ReceiptValidation_str3_, 107, 49);
            ReceiptValidation_str3 = ReceiptValidation_str3_;
            // Check the common name and the fingerprint
            char ReceiptValidation_str1_[608];
            ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[236]), ReceiptValidation_str1_, 140, 16);
            ReceiptValidation_str1 = ReceiptValidation_str1_;
            volatile size_t ReceiptValidation_num = 12; ReceiptValidation_num -= 8; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;
            if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[169])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[169])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
                ReceiptValidation_verify = 2829;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2829) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char ReceiptValidation_str4_[608];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[171]), ReceiptValidation_str4_, 235, 34);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0000025E(ReceiptValidation_str4, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00960099(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_00000213(ReceiptValidation_oid);
        if (ReceiptValidation_verify >= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char ReceiptValidation_str5_[608];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[171]), ReceiptValidation_str5_, 235, 34);
        ReceiptValidation_str5 = ReceiptValidation_str5_;
        ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_0000010F(ReceiptValidation_pkcs7, NULL, 0);
        ReceiptValidation_count = ReceiptValidation_sk_num_010B00FF((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0096001D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0000025E(ReceiptValidation_str5, 0);
            ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00960099(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
            ReceiptValidation_ASN1_OBJECT_free_00000213(ReceiptValidation_oid);
            if (ReceiptValidation_verify == -1) {
                sk_X509_free (ReceiptValidation_certificates);
                ReceiptValidation_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB01FC(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Global variables computation
        // From 287 to 589
        ReceiptValidation_RYYEBKCREKCP -= 140; ReceiptValidation_RYYEBKCREKCP *= 4; ReceiptValidation_RYYEBKCREKCP += 1;
        // From 188 to 69
        ReceiptValidation_FGVSMJUBSRIK += 88; ReceiptValidation_FGVSMJUBSRIK /= 4;
        // From 245 to 6
        ReceiptValidation_FNRNNCEXFXAX += 7; ReceiptValidation_FNRNNCEXFXAX /= 42;
    ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail:
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_010B007F(ReceiptValidation_bio_p7);
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00000040(ReceiptValidation_pkcs7);
        if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
        if (ReceiptValidation_apple) ReceiptValidation_X509_free_010B001E(ReceiptValidation_apple);
        if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_010B007F(ReceiptValidation_bio_apple);
        if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_010B0104(ReceiptValidation_store);
    }
#else
#define ReceiptValidation_CheckReceiptSignature069(ReceiptValidation_ctx) { \
BIO *ReceiptValidation_bio_p7 = NULL; \
PKCS7 *ReceiptValidation_pkcs7 = NULL; \
STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
X509 *ReceiptValidation_certificate = NULL; \
int ReceiptValidation_count, ReceiptValidation_index1; \
unsigned int ReceiptValidation_index2; \
ASN1_OBJECT *ReceiptValidation_oid = NULL; \
char *ReceiptValidation_str1; \
char *ReceiptValidation_str2; \
char *ReceiptValidation_str3; \
char *ReceiptValidation_str4; \
char *ReceiptValidation_str5; \
int ReceiptValidation_verify, ReceiptValidation_status; \
BIO *ReceiptValidation_bio_apple = NULL; \
X509 *ReceiptValidation_apple = NULL; \
X509_STORE *ReceiptValidation_store = NULL; \
volatile int ReceiptValidation_code = 116; ReceiptValidation_code -= 59; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_010B00F7(ReceiptValidation_BIO_s_mem_00000204()); \
ReceiptValidation_BIO_write_00000126(ReceiptValidation_bio_p7, (void *) ReceiptValidation_YVEWTRCAJJQM_0143009B((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_FGVSMJUBSRIK_01A700BC((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00960252(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_OpenSSL_add_all_digests_00000174(); \
if (ReceiptValidation_ctx->ca_data) { \
ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_010B00F7(ReceiptValidation_BIO_s_mem_00000204()); \
ReceiptValidation_BIO_write_00000126(ReceiptValidation_bio_apple, (void *) ReceiptValidation_YVEWTRCAJJQM_0143009B((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_FGVSMJUBSRIK_01A700BC((CFDataRef) ReceiptValidation_ctx->ca_data)); \
ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_00000033(ReceiptValidation_bio_apple, NULL); \
if (!ReceiptValidation_apple) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_store = ReceiptValidation_X509_STORE_new_0096011A(); \
ReceiptValidation_X509_STORE_add_cert_0000006F(ReceiptValidation_store, ReceiptValidation_apple); \
ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_010B00DD(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2829; \
if (ReceiptValidation_verify != 2829) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
} \
ReceiptValidation_verify = 0; \
ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
ReceiptValidation_count = ReceiptValidation_sk_num_010B00FF((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0096001D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
char ReceiptValidation_common_name[608]; \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_010B0207(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608); \
if (ReceiptValidation_status <= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
volatile unsigned int ReceiptValidation_digest_length = 19; ReceiptValidation_digest_length -= 13; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
char ReceiptValidation_str2_[608]; \
ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[582]), ReceiptValidation_str2_, 230, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_0000002A(ReceiptValidation_str2); \
unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
unsigned int ReceiptValidation_len = 0; \
ReceiptValidation_status = ReceiptValidation_X509_digest_010B021E(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2829; \
if (ReceiptValidation_status == 2829 || ReceiptValidation_len > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_digest_010B021E(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2829; \
if (ReceiptValidation_status != 2829 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_fingerprint[608]; \
volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;  \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X", ReceiptValidation_digest[ReceiptValidation_index2]); \
} \
char ReceiptValidation_str3_[608]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[172]), ReceiptValidation_str3_, 107, 49); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[236]), ReceiptValidation_str1_, 140, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
volatile size_t ReceiptValidation_num = 12; ReceiptValidation_num -= 8; ReceiptValidation_num *= 3; ReceiptValidation_num += 1;  \
if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[169])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[169])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
ReceiptValidation_verify = 2829; \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2829) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_str4_[608]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[171]), ReceiptValidation_str4_, 235, 34); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0000025E(ReceiptValidation_str4, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00960099(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_00000213(ReceiptValidation_oid); \
if (ReceiptValidation_verify >= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_str5_[608]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[171]), ReceiptValidation_str5_, 235, 34); \
ReceiptValidation_str5 = ReceiptValidation_str5_; \
ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_0000010F(ReceiptValidation_pkcs7, NULL, 0); \
ReceiptValidation_count = ReceiptValidation_sk_num_010B00FF((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0096001D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_0000025E(ReceiptValidation_str5, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00960099(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_00000213(ReceiptValidation_oid); \
if (ReceiptValidation_verify == -1) { \
sk_X509_free (ReceiptValidation_certificates); \
ReceiptValidation_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB01FC(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_RYYEBKCREKCP -= 140; ReceiptValidation_RYYEBKCREKCP *= 4; ReceiptValidation_RYYEBKCREKCP += 1;  \
ReceiptValidation_FGVSMJUBSRIK += 88; ReceiptValidation_FGVSMJUBSRIK /= 4;  \
ReceiptValidation_FNRNNCEXFXAX += 7; ReceiptValidation_FNRNNCEXFXAX /= 42;  \
ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail: \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_010B007F(ReceiptValidation_bio_p7); \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00000040(ReceiptValidation_pkcs7); \
if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
if (ReceiptValidation_apple) ReceiptValidation_X509_free_010B001E(ReceiptValidation_apple); \
if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_010B007F(ReceiptValidation_bio_apple); \
if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_010B0104(ReceiptValidation_store); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[148]), 183, 21);
        volatile int ReceiptValidation_code = 150; ReceiptValidation_code -= 93; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D4024D(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_00D40006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
        if (ReceiptValidation_FGVSMJUBSRIK_01430045(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C40112(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 330 to 6
        ReceiptValidation_AGFRDNDDPBID += 12; ReceiptValidation_AGFRDNDDPBID /= 57;
        // From 155 to 548
        ReceiptValidation_YVEWTRCAJJQM -= 46; ReceiptValidation_YVEWTRCAJJQM *= 5; ReceiptValidation_YVEWTRCAJJQM += 3;
        // From 464 to 11
        ReceiptValidation_QKHEAAOULPHS += 20; ReceiptValidation_QKHEAAOULPHS /= 44;
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction003CF((ReceiptValidation_Strings[148]), 183, 21); \
volatile int ReceiptValidation_code = 150; ReceiptValidation_code -= 93; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D4024D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_00D40006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
if (ReceiptValidation_FGVSMJUBSRIK_01430045(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C40112(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1); \
} \
ReceiptValidation_AGFRDNDDPBID += 12; ReceiptValidation_AGFRDNDDPBID /= 57;  \
ReceiptValidation_YVEWTRCAJJQM -= 46; ReceiptValidation_YVEWTRCAJJQM *= 5; ReceiptValidation_YVEWTRCAJJQM += 3;  \
ReceiptValidation_QKHEAAOULPHS += 20; ReceiptValidation_QKHEAAOULPHS /= 44;  \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[435]), 179, 21);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D4024D(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_00D40006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key);
        if (ReceiptValidation_FGVSMJUBSRIK_01430045(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 330 to 6
        ReceiptValidation_AGFRDNDDPBID += 12; ReceiptValidation_AGFRDNDDPBID /= 57;
        // From 155 to 548
        ReceiptValidation_YVEWTRCAJJQM -= 46; ReceiptValidation_YVEWTRCAJJQM *= 5; ReceiptValidation_YVEWTRCAJJQM += 3;
        // From 464 to 11
        ReceiptValidation_QKHEAAOULPHS += 20; ReceiptValidation_QKHEAAOULPHS /= 44;
        ReceiptValidation_CFRelease_014301A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[435]), 179, 21); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D4024D(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_FNRNNCEXFXAX_00D40006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_key); \
if (ReceiptValidation_FGVSMJUBSRIK_01430045(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_AGFRDNDDPBID += 12; ReceiptValidation_AGFRDNDDPBID /= 57;  \
ReceiptValidation_YVEWTRCAJJQM -= 46; ReceiptValidation_YVEWTRCAJJQM *= 5; ReceiptValidation_YVEWTRCAJJQM += 3;  \
ReceiptValidation_QKHEAAOULPHS += 20; ReceiptValidation_QKHEAAOULPHS /= 44;  \
ReceiptValidation_CFRelease_014301A3(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        volatile int ReceiptValidation_code = 8; ReceiptValidation_code -= 1; ReceiptValidation_code *= 23; ReceiptValidation_code += 12;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[50]), 83, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A7000B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AGFRDNDDPBID_01430006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
        if (ReceiptValidation_YVEWTRCAJJQM_01A70224(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00EB006B(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 6 to 11
        ReceiptValidation_AGFRDNDDPBID -= 3; ReceiptValidation_AGFRDNDDPBID *= 3; ReceiptValidation_AGFRDNDDPBID += 2;
        // From 589 to 431
        ReceiptValidation_RYYEBKCREKCP += 273; ReceiptValidation_RYYEBKCREKCP /= 2;
        // Set to 320
        ReceiptValidation_YVEWTRCAJJQM = 320;
        // Set to 457
        ReceiptValidation_FGVSMJUBSRIK = 457;
        // From 11 to 543
        ReceiptValidation_QKHEAAOULPHS -= 1; ReceiptValidation_QKHEAAOULPHS *= 51; ReceiptValidation_QKHEAAOULPHS += 33;
        // From 536 to 93
        ReceiptValidation_IBNQQCBEGLIG += 115; ReceiptValidation_IBNQQCBEGLIG /= 7;
        // From 242 to 48
        ReceiptValidation_CUZJROMPTUCM += 94; ReceiptValidation_CUZJROMPTUCM /= 7;
        // Set to 352
        ReceiptValidation_FNRNNCEXFXAX = 352;
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
volatile int ReceiptValidation_code = 8; ReceiptValidation_code -= 1; ReceiptValidation_code *= 23; ReceiptValidation_code += 12;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[50]), 83, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A7000B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AGFRDNDDPBID_01430006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
if (ReceiptValidation_YVEWTRCAJJQM_01A70224(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00EB006B(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1); \
} \
ReceiptValidation_AGFRDNDDPBID -= 3; ReceiptValidation_AGFRDNDDPBID *= 3; ReceiptValidation_AGFRDNDDPBID += 2;  \
ReceiptValidation_RYYEBKCREKCP += 273; ReceiptValidation_RYYEBKCREKCP /= 2;  \
ReceiptValidation_YVEWTRCAJJQM = 320; \
ReceiptValidation_FGVSMJUBSRIK = 457; \
ReceiptValidation_QKHEAAOULPHS -= 1; ReceiptValidation_QKHEAAOULPHS *= 51; ReceiptValidation_QKHEAAOULPHS += 33;  \
ReceiptValidation_IBNQQCBEGLIG += 115; ReceiptValidation_IBNQQCBEGLIG /= 7;  \
ReceiptValidation_CUZJROMPTUCM += 94; ReceiptValidation_CUZJROMPTUCM /= 7;  \
ReceiptValidation_FNRNNCEXFXAX = 352; \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[73]), 18, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A7000B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AGFRDNDDPBID_01430006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_01A701A3(ReceiptValidation_key);
        if (ReceiptValidation_YVEWTRCAJJQM_01A70224(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 6 to 11
        ReceiptValidation_AGFRDNDDPBID -= 3; ReceiptValidation_AGFRDNDDPBID *= 3; ReceiptValidation_AGFRDNDDPBID += 2;
        // From 589 to 431
        ReceiptValidation_RYYEBKCREKCP += 273; ReceiptValidation_RYYEBKCREKCP /= 2;
        // Set to 320
        ReceiptValidation_YVEWTRCAJJQM = 320;
        // Set to 457
        ReceiptValidation_FGVSMJUBSRIK = 457;
        // From 11 to 543
        ReceiptValidation_QKHEAAOULPHS -= 1; ReceiptValidation_QKHEAAOULPHS *= 51; ReceiptValidation_QKHEAAOULPHS += 33;
        // From 536 to 93
        ReceiptValidation_IBNQQCBEGLIG += 115; ReceiptValidation_IBNQQCBEGLIG /= 7;
        // From 242 to 48
        ReceiptValidation_CUZJROMPTUCM += 94; ReceiptValidation_CUZJROMPTUCM /= 7;
        // Set to 352
        ReceiptValidation_FNRNNCEXFXAX = 352;
        ReceiptValidation_CFRelease_01A701A3(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion081(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[73]), 18, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_QKHEAAOULPHS_01A7000B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_AGFRDNDDPBID_01430006((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A701A3(ReceiptValidation_key); \
if (ReceiptValidation_YVEWTRCAJJQM_01A70224(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_AGFRDNDDPBID -= 3; ReceiptValidation_AGFRDNDDPBID *= 3; ReceiptValidation_AGFRDNDDPBID += 2;  \
ReceiptValidation_RYYEBKCREKCP += 273; ReceiptValidation_RYYEBKCREKCP /= 2;  \
ReceiptValidation_YVEWTRCAJJQM = 320; \
ReceiptValidation_FGVSMJUBSRIK = 457; \
ReceiptValidation_QKHEAAOULPHS -= 1; ReceiptValidation_QKHEAAOULPHS *= 51; ReceiptValidation_QKHEAAOULPHS += 33;  \
ReceiptValidation_IBNQQCBEGLIG += 115; ReceiptValidation_IBNQQCBEGLIG /= 7;  \
ReceiptValidation_CUZJROMPTUCM += 94; ReceiptValidation_CUZJROMPTUCM /= 7;  \
ReceiptValidation_FNRNNCEXFXAX = 352; \
ReceiptValidation_CFRelease_01A701A3(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptHash091(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
        CFMutableDataRef ReceiptValidation_data4;
        unsigned char ReceiptValidation_digest[608];
        volatile int ReceiptValidation_counter = 3; ReceiptValidation_counter -= 1; ReceiptValidation_counter *= 8; ReceiptValidation_counter += 4;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
        CFNumberRef ReceiptValidation_key;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
        ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
        ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
        ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key);
        ReceiptValidation_data4 = ReceiptValidation_FGVSMJUBSRIK_014301C9(NULL, 0);
        ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_IBNQQCBEGLIG_00D4005D((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data1), ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data1));
        ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data2), ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data2));
        ReceiptValidation_SHA1_010B0189(ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data4), ReceiptValidation_digest);
        ReceiptValidation_OpenSSL_add_all_digests_00960174();
        EVP_MD_CTX ReceiptValidation_hashctx2;
        ReceiptValidation_EVP_MD_CTX_init_010B0072(&ReceiptValidation_hashctx2);
        const EVP_MD *ReceiptValidation_digester = EVP_sha1();
        ReceiptValidation_EVP_DigestInit_00000007(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
        ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data1), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data1));
        ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data2), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data2));
        ReceiptValidation_EVP_DigestFinal_00000237(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
        CFDataRef ReceiptValidation_data5 = ReceiptValidation_CUZJROMPTUCM_01430030(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
        if (!ReceiptValidation_FNRNNCEXFXAX_01A70160(ReceiptValidation_data3, ReceiptValidation_data5)) {
            volatile int ReceiptValidation_code = 44; ReceiptValidation_code -= 10; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_00C40112(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data4);
            ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5);
            goto ReceiptValidation_CheckReceiptHash091_ReceiptValidation_bail;
        }
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5);
        // Global variables computation
        // From 11 to 198
        ReceiptValidation_AGFRDNDDPBID -= 2; ReceiptValidation_AGFRDNDDPBID *= 20; ReceiptValidation_AGFRDNDDPBID += 18;
        // From 431 to 464
        ReceiptValidation_RYYEBKCREKCP -= 277; ReceiptValidation_RYYEBKCREKCP *= 3; ReceiptValidation_RYYEBKCREKCP += 2;
        // From 320 to 285
        ReceiptValidation_YVEWTRCAJJQM += 250; ReceiptValidation_YVEWTRCAJJQM /= 2;
        // From 457 to 1
        ReceiptValidation_FGVSMJUBSRIK += 2; ReceiptValidation_FGVSMJUBSRIK /= 459;
        // From 352 to 500
        ReceiptValidation_FNRNNCEXFXAX -= 186; ReceiptValidation_FNRNNCEXFXAX *= 3; ReceiptValidation_FNRNNCEXFXAX += 2;
    ReceiptValidation_CheckReceiptHash091_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash091(ReceiptValidation_ctx) { \
CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
CFMutableDataRef ReceiptValidation_data4; \
unsigned char ReceiptValidation_digest[608]; \
volatile int ReceiptValidation_counter = 3; ReceiptValidation_counter -= 1; ReceiptValidation_counter *= 8; ReceiptValidation_counter += 4;  \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
CFNumberRef ReceiptValidation_key; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
ReceiptValidation_key = ReceiptValidation_AGFRDNDDPBID_00D4000B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_0143011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_key); \
ReceiptValidation_data4 = ReceiptValidation_FGVSMJUBSRIK_014301C9(NULL, 0); \
ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_IBNQQCBEGLIG_00D4005D((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data1), ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data1)); \
ReceiptValidation_YVEWTRCAJJQM_01A70140(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data2), ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data2)); \
ReceiptValidation_SHA1_010B0189(ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data4), ReceiptValidation_digest); \
ReceiptValidation_OpenSSL_add_all_digests_00960174(); \
EVP_MD_CTX ReceiptValidation_hashctx2; \
ReceiptValidation_EVP_MD_CTX_init_010B0072(&ReceiptValidation_hashctx2); \
const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
ReceiptValidation_EVP_DigestInit_00000007(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data1), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data1)); \
ReceiptValidation_EVP_DigestUpdate_0000003A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_01A701B8(ReceiptValidation_data2), (size_t) ReceiptValidation_IBNQQCBEGLIG_00D4005D(ReceiptValidation_data2)); \
ReceiptValidation_EVP_DigestFinal_00000237(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
CFDataRef ReceiptValidation_data5 = ReceiptValidation_CUZJROMPTUCM_01430030(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
if (!ReceiptValidation_FNRNNCEXFXAX_01A70160(ReceiptValidation_data3, ReceiptValidation_data5)) { \
volatile int ReceiptValidation_code = 44; ReceiptValidation_code -= 10; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_00C40112(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data1); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data2); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data4); \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5); \
goto ReceiptValidation_CheckReceiptHash091_ReceiptValidation_bail; \
} \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data5); \
ReceiptValidation_AGFRDNDDPBID -= 2; ReceiptValidation_AGFRDNDDPBID *= 20; ReceiptValidation_AGFRDNDDPBID += 18;  \
ReceiptValidation_RYYEBKCREKCP -= 277; ReceiptValidation_RYYEBKCREKCP *= 3; ReceiptValidation_RYYEBKCREKCP += 2;  \
ReceiptValidation_YVEWTRCAJJQM += 250; ReceiptValidation_YVEWTRCAJJQM /= 2;  \
ReceiptValidation_FGVSMJUBSRIK += 2; ReceiptValidation_FGVSMJUBSRIK /= 459;  \
ReceiptValidation_FNRNNCEXFXAX -= 186; ReceiptValidation_FNRNNCEXFXAX *= 3; ReceiptValidation_FNRNNCEXFXAX += 2;  \
ReceiptValidation_CheckReceiptHash091_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_00D401A3(ReceiptValidation_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
        volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
        CFDateRef ReceiptValidation_date1 = ReceiptValidation_FGVSMJUBSRIK_01A70001(NULL, ReceiptValidation_FNRNNCEXFXAX_00D401F4());
        CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D401D0(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_YVEWTRCAJJQM_01A7011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
        if (ReceiptValidation_date2 && ReceiptValidation_AGFRDNDDPBID_01A700C6(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_021D01FC(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key);
            ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1);
        }
        // Global variables computation
        // From 543 to 78
        ReceiptValidation_QKHEAAOULPHS += 81; ReceiptValidation_QKHEAAOULPHS /= 8; 
        ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1);
    }
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
volatile int ReceiptValidation_code = 49; ReceiptValidation_code -= 15; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
CFDateRef ReceiptValidation_date1 = ReceiptValidation_FGVSMJUBSRIK_01A70001(NULL, ReceiptValidation_FNRNNCEXFXAX_00D401F4()); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_RYYEBKCREKCP_00D401D0(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_YVEWTRCAJJQM_01A7011D((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
if (ReceiptValidation_date2 && ReceiptValidation_AGFRDNDDPBID_01A700C6(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_021D01FC(ReceiptValidation_code); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_key); \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1); \
} \
ReceiptValidation_QKHEAAOULPHS += 81; ReceiptValidation_QKHEAAOULPHS /= 8;  \
ReceiptValidation_CFRelease_01A7007E(ReceiptValidation_date1); \
}
#endif
    
    
    // CodeBlock AppRunner
#ifdef RUNNER
#define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 78);
#endif
    
    inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
        ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_QKHEAAOULPHS))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
        ReceiptValidation_QKHEAAOULPHS_01EA004E((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
    }
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void ReceiptValidation_CleanUp0AD(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
        int ReceiptValidation_idx;
        CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
        for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) {
            if (ReceiptValidation_references[ReceiptValidation_idx]) {
                ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_references[ReceiptValidation_idx]);
                ReceiptValidation_references[ReceiptValidation_idx] = NULL;
            }
        }
    }
#else
#define ReceiptValidation_CleanUp0AD(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
int ReceiptValidation_idx; \
CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
for(ReceiptValidation_idx = 0; ReceiptValidation_idx < 4; ReceiptValidation_idx++) { \
if (ReceiptValidation_references[ReceiptValidation_idx]) { \
ReceiptValidation_CFRelease_01A700F1(ReceiptValidation_references[ReceiptValidation_idx]); \
ReceiptValidation_references[ReceiptValidation_idx] = NULL; \
} \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
        // Create contexts
        ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // Arguments for running the application
        ReceiptValidation_ctx1.argc = _argc;
        ReceiptValidation_ctx1.argv = (const char **) _argv;
        // Call each step
        ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
        ReceiptValidation_LoadReceipt02C((&ReceiptValidation_ctx1));
        ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1));
        ReceiptValidation_GetRootCA052((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1));
        ReceiptValidation_GetReceiptInformation064((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptSignature069((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptHash091((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
        ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
        ReceiptValidation_CleanUp0AD((&ReceiptValidation_ctx1));
        return 0;
        _Pragma("clang diagnostic pop")
    }
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
ReceiptValidation_ctx1.argc = _argc; \
ReceiptValidation_ctx1.argv = (const char **) _argv; \
ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
ReceiptValidation_LoadReceipt02C((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetGUID046((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetRootCA052((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetReceiptInformation064((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptSignature069((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptVersion081((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptHash091((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
ReceiptValidation_CleanUp0AD((&ReceiptValidation_ctx1)); \
0; \
_Pragma("clang diagnostic pop") \
})
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

