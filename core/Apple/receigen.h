//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.treasurebox.gear.ios
// CFBundleVersion            : 24
// Prefix                     : ReceiptValidation
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __ReceiptValidation_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^ReceiptValidation_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        ReceiptValidation_StoreNone = 812,
        // Bundle identifier
        ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1),
        ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
        // Application version
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 1),
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 1) + 1,
        // Opaque value
        ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 1),
        // Hash value
        ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 1),
        // In-app purchase receipt
        ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 1),
        // Original Application Version
        ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 1),
        // Receipt Expiration Date
        ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 1),
        // Quantity
        ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 1),
        // Product identifier
        ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 1),
        // Transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 1),
        // Purchase date
        ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 1),
        // Original transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 1),
        // Original purchase date
        ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 1),
        // Subscription Expiration Date
        ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 1),
        // Web Order Line Item ID
        ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 1),
        // Cancellation Date
        ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 1)
        
    } ReceiptValidation_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _ReceiptValidation_CheckingContext {
        CFTypeRef dummy000A;
        CFTypeRef main_bundle;
        CFTypeRef dummy000B;
        CFTypeRef dummy0003;
        CFTypeRef dummy0009;
        CFTypeRef dummy0008;
        CFTypeRef dummy000C;
        CFTypeRef dummy0004;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0006;
        CFTypeRef dummy0000;
        CFTypeRef dummy0007;
        CFTypeRef dummy0001;
        CFTypeRef inapp_block;
        CFTypeRef receipt_data;
        CFTypeRef inapp_identifiers;
        CFTypeRef dummy000D;
        CFTypeRef dummy000E;
        CFTypeRef ca_data;
        CFTypeRef dummy0002;
        CFTypeRef dummy0005;
        CFTypeRef guid_data;
    } ReceiptValidation_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _ReceiptValidation_ParsingContext {
        CFTypeRef dummy000A;
        CFTypeRef dummy0006;
        CFTypeRef dummy0000;
        const unsigned char * ptr;
        const unsigned char * end;
        CFTypeRef dummy0003;
        CFTypeRef dummy0002;
        CFTypeRef dummy0008;
        CFTypeRef dummy0001;
        CFTypeRef dummy0009;
        CFTypeRef dummy0007;
        CFTypeRef dictionary;
        CFTypeRef dummy0004;
        struct _ReceiptValidation_ParsingContext * parent;
        CFTypeRef dummy0005;
    } ReceiptValidation_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__ReceiptValidation_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__ReceiptValidation_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__ReceiptValidation_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__ReceiptValidation_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__ReceiptValidation_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *ReceiptValidation_Strings[483] = {
        // "objc_getClass" / M(Xor1) / S(95) / L(13)
        "\x30\x3d\x35\x3c\x00\x38\x3a\x2b\x1c\x33\x3e\x2c\x2c\x5f\xe7\x52",
        // "" / M(None) / S(0) / L(0)
        "\xd6\x24\xea\x17\x8a\xb5\x7e\xf9\x4f\xe5\x44\x31\x55\x9a\x0b\xdd\xbb\xaf\x3d\xa7\xd2\x4a\xb6\x2e\x42\xa1\x16\x2e\x57\x7e\x33\xa2",
        // "/usr/lib/libSystem.dylib" / M(Xor4) / S(221) / L(24)
        "\x52\x08\x0e\x0f\x52\x11\x14\x1f\x52\x11\x14\x1f\x2e\x04\x0e\x09\x18\x10\x53\x19\x04\x11\x14\x1f\x7d\x18\xa5\xba\x8b\xe8\x8d\x4a\xfb",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(191) / L(66)
        "\xd2\xae\x84\x8e\x89\x98\x90\xd2\xb1\x94\x9f\x8f\x9c\x8f\x84\xd2\xbb\x8f\x9c\x90\x98\x8a\x92\x8f\x96\x8e\xd2\xbe\x92\x8f\x98\xbb\x92\x88\x93\x99\x9c\x89\x94\x92\x93\xd3\x9b\x8f\x9c\x90\x98\x8a\x92\x8f\x96\xd2\xbe\x92\x8f\x98\xbb\x92\x88\x93\x99\x9c\x89\x94\x92\x93\xfd",
        // "" / M(None) / S(0) / L(0)
        "\xe3\x12\xde\x4d\x16\x62\xdb\x90\x2f\xf7\x44\x6c\x5a\x32\xc2\xe0\x81\x5a\xcf\xb9\x19\x5a\x37\x6d\xc0\xa6\xe1\xd1\x60\xeb\xb1\x78",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(70) / L(24)
        "\xb1\x89\x8c\x8a\xa7\xba\xab\x8c\xb5\xb8\xb3\xa7\xba\xba\xab\xb8\x9a\xaf\xb3\xab\xa0\xb5\xb4\xab\x46\x4b\x75\x45\xbf\xb2\x83\x59\x82",
        // "" / M(None) / S(0) / L(0)
        "\x4e\xcb\x55\x77\xab\xcd\x8e\x28\x4c\x1d\x04\x9d\xfe\x19\x73\x05\x73\x38\xee\x46\xd1\x7b\xfb\x23\x6c\x01\xbd\x1f\xb5\xec\x90\xee",
        // "CFDateCompare" / M(Xor4) / S(90) / L(13)
        "\xe3\xe6\xe4\xc1\xd4\xc5\xe3\xcf\xcd\xd0\xc1\xd2\xc5\xa0\xfe\x1f",
        // "start" / M(Rot) / S(4) / L(5)
        "\x77\x78\x65\x76\x78\x04\x5e\x9e\xe8\x67\x28\xe2\xb7\x0e\x94\x87",
        // "" / M(None) / S(0) / L(0)
        "\xa9\x68\x2e\x36\x74\x6c\xdb\x6c\xc8\xe7\x2c\x65\x84\xdc\x14\x01\x62\x94\x5e\xdc\x14\xec\x5a\xa0\xef\x08\x31\x37\xa5\x27\xb6\xed",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(64) / L(19)
        "\x0c\x61\x64\x6d\x0b\x33\x31\x20\x0b\x31\x2c\x20\x0b\x36\x2d\x0b\x1b\x16\x1e\x54",
        // "CFBundleGetIdentifier" / M(Xor4) / S(184) / L(21)
        "\x93\x96\x92\xa5\xbe\xb4\xbc\xb5\x97\xb5\xa4\x99\xb4\xb5\xbe\xa4\xb9\xb6\xb9\xb5\xa2\xd0",
        // "" / M(None) / S(0) / L(0)
        "\xf3\xa6\xab\x55\xfe\xf9\x38\xde\x65\x6f\xde\xc0\x2f\x18\x95\x72\x23\x73\x5b\x3c\xc3\xc1\x19\x25\xc4\xd3\x55\xa3\x78\xb9\xe9\x7e",
        // "CFReadStreamClose" / M(Xor2) / S(121) / L(17)
        "\x28\x2d\x39\x0e\x0a\x0f\x38\x1f\x19\x0e\x0a\x06\x28\x07\x04\x18\x0e\x6b",
        // "%02X:" / M(Xor1) / S(142) / L(5)
        "\xab\xbe\xbc\xd6\xb4\x8e\x9f\xa3\x8c\x43\x69\x1f\xa3\xf5\x81\x8a",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(206) / L(25)
        "\x1f\x1a\x18\x35\x3f\x28\x35\x33\x32\x3d\x2e\x25\x1f\x2e\x39\x3d\x28\x39\x11\x29\x28\x3d\x3e\x30\x39\x5c\x47\xa4\x9e\x93\x6e\x22\xef\x89",
        // "objc_lookUpClass" / M(Xor1) / S(64) / L(16)
        "\x2f\x22\x2a\x23\x1f\x2c\x2f\x2f\x2b\x15\x30\x03\x2c\x21\x33\x33\x40",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(196) / L(23)
        "\xcf\xf0\xe5\xee\xd3\xd3\xcc\xdf\xe1\xe4\xe4\xdf\xe1\xec\xec\xdf\xe4\xe9\xe7\xe5\xf3\xf4\xf3\x80\x2f\x79\xaf\x13\x6c\xa3\xd2\x8d",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(199) / L(24)
        "\xcc\xe4\xe1\xe3\xc6\xd3\xc2\xe1\xc8\xd5\xca\xc6\xd3\xd3\xc2\xd5\xf3\xce\xca\xc2\xfd\xc8\xc9\xc2\xa7\xf9\x1c\xf9\x23\x81\x72\xcf\xe4",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(140) / L(59)
        "\xfe\xf9\xf2\xf9\x8d\xf2\xfd\x8a\xf2\xfe\xfe\xf2\xfa\x8b\xf2\xfd\xf1\xf2\xfb\x89\xf2\xf8\xf0\xf2\x8e\x8e\xf2\xfd\xf0\xf2\x8c\xf9\xf2\xfc\x89\xf2\x8d\xfa\xf2\xfa\xfc\xf2\xfd\xfa\xf2\x8c\xf9\xf2\xf1\xf0\xf2\x8c\x8e\xf2\xfe\x8b\xf2\xfe\xf8\xc8\x94\xbd\x7f\x18\x5e\x89\x73\xa0",
        // "CFNumberCreate" / M(Xor4) / S(165) / L(14)
        "\x13\x16\x1e\x25\x3d\x32\x35\x22\x13\x22\x35\x31\x24\x35\x50\x2c",
        // "CFBundleIdentifier" / M(Xor2) / S(238) / L(18)
        "\xbe\xbb\xbf\x88\x93\x99\x91\x98\xb4\x99\x98\x93\x89\x94\x9b\x94\x98\x8f\xfd",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(102) / L(21)
        "\x17\x3f\x3a\x28\x05\x0c\x19\x3d\x0e\x0e\x1d\x05\x3f\x1d\x10\x10\x3e\x1d\x1f\x17\x0f\x7c",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xcd\xde\xdb\xd6\xa6\xc8\x05\xb7\x07\xb4\xf8\x72\x09\x3a\x37\xf3\x20\x16\x1b\x35\x0f\x84\x98\x08\xad\xfc\x5f\xc8\x90\xa5\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x42\x76\xeb\xf1\x80\x16\x25\xf9\x00\x25\xa5\x27\x40\x12\x2b\x20\x5f\x90\x09\x83\x46\xb0\xc6\x2e\x07\xa4\xbd\x5f\x31\x5c\x7b\x81",
        // "CFArrayGetCount" / M(Rot) / S(181) / L(15)
        "\xf8\xfb\xf6\x27\x27\x16\x2e\xfc\x1a\x29\xf8\x24\x2a\x23\x29\xb5",
        // "%02x" / M(Xor3) / S(225) / L(4)
        "\xd4\xc1\xc3\x89\xf1\x5c\x78\x7a\x10\x54\xbd\xe8\x04\xfc\x04\x9b",
        // "" / M(None) / S(0) / L(0)
        "\x76\x80\xad\xd3\x08\xdc\x72\x9d\x7f\x13\x1a\x66\x35\x8e\x95\x25\x4e\x30\x2b\xaa\x28\xb5\xe2\xfa\x3f\x98\x32\x9d\x75\x20\x7e\xff",
        // "" / M(None) / S(0) / L(0)
        "\xf3\x28\xdb\x92\xe1\x11\x42\xab\x57\xc1\x01\x52\x21\xfe\x2e\x35\x4e\xd9\x4a\xb5\x61\x7e\x12\xc6\xda\xe6\x57\xc9\xd9\xf3\xfc\x87",
        // "" / M(None) / S(0) / L(0)
        "\xd9\x22\xea\xfd\xac\xc2\xe7\x57\xd7\xd2\x59\x3b\x8e\xb7\x45\x72\xec\x58\x05\x0e\x60\x53\xe7\xca\xe1\x08\x6e\x08\x4a\x5c\x78\x7a",
        // "longjmp" / M(Xor4) / S(187) / L(7)
        "\xdc\xdf\xde\xd7\xda\xdd\xc0\xb0\x03\xc2\xb3\x60\x76\x48\x1a\xc4",
        // "CFStringCreateWithBytes" / M(Xor3) / S(164) / L(23)
        "\x87\x82\x97\xb0\xb6\xad\xaa\xa3\x87\xb6\xa1\xa5\xb0\xa1\x93\xad\xb0\xac\x86\xbd\xb0\xa1\xb7\xc4\xbe\x68\x2f\x98\x60\x6c\xaa\x85",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(123) / L(24)
        "\x38\x3d\x3f\x1a\x0f\x1e\x3d\x14\x09\x16\x1a\x0f\x0f\x1e\x09\x28\x1e\x0f\x3d\x14\x09\x16\x1a\x0f\x7b\x59\x2a\xa9\x9c\x27\xad\x0d\x80",
        // "BIO_free" / M(Xor1) / S(120) / L(8)
        "\x3a\x31\x37\x27\x1e\x0a\x1d\x1d\x78\xbd\xfb\x42\x16\xdc\xe7\x9d",
        // "X509_digest" / M(Xor4) / S(83) / L(11)
        "\x68\x05\x00\x09\x6f\x54\x59\x57\x55\x43\x44\x30\x14\xec\x5a\xa0",
        // "d2i_X509_bio" / M(Xor4) / S(100) / L(12)
        "\x24\x72\x29\x1f\x18\x75\x70\x79\x1f\x22\x29\x2f\x40\x53\xa6\xd1",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(211) / L(59)
        "\xe5\xe2\xe9\xe2\xb6\xe9\xe6\xb1\xe9\xe5\xe5\xe9\xe1\xb0\xe9\xe6\xea\xe9\xe0\xb2\xe9\xe3\xeb\xe9\xb5\xb5\xe9\xe6\xeb\xe9\xb7\xe2\xe9\xe7\xb2\xe9\xb6\xe1\xe9\xe1\xe7\xe9\xe6\xe1\xe9\xb7\xe2\xe9\xea\xeb\xe9\xb7\xb5\xe9\xe5\xb0\xe9\xe5\xe3\xd3\x8b\xcd\x60\x43\xee\xff\x50\x41",
        // "X509_get_ext_by_OBJ" / M(Xor3) / S(16) / L(19)
        "\x7c\x11\x14\x1d\x7b\x43\x41\x50\x7b\x41\x5c\x50\x7b\x46\x5d\x7b\x6b\x66\x6e\x24",
        // "RTLD_MAIN_ONLY" / M(Xor4) / S(223) / L(14)
        "\xa2\xa4\xbc\xb4\xaf\xbd\xb1\xb9\xbe\xaf\xbf\xbe\xbc\xa9\xf0\x90",
        // "" / M(None) / S(0) / L(0)
        "\x10\x54\xbd\xe8\x04\xfc\x04\x9b\xde\x9b\x25\xc4\x69\x3e\xb8\x6d\x14\xd9\x34\xbc\xf1\xb9\x57\xd2\xf4\xde\x5a\x78\x9a\x0b\x09\xc2",
        // "NSBundle" / M(Xor3) / S(74) / L(8)
        "\x14\x09\x18\x2f\x34\x3e\x36\x3f\x5a\xc4\xce\x6a\xdd\xb3\x2e\xae",
        // "NSBundle" / M(Xor3) / S(218) / L(8)
        "\xa4\xb9\xa8\x9f\x84\x8e\x86\x8f\xea\x01\x65\xa2\xed\xf4\xf8\x92",
        // "SHA1_Final" / M(Xor1) / S(131) / L(10)
        "\xd0\xcb\xc2\xb2\xdc\xc5\xea\xed\xe2\xef\x83\x50\x8e\xe1\xcb\x7c",
        // "ASN1_INTEGER_free" / M(Xor1) / S(166) / L(17)
        "\xe7\xf5\xe8\x97\xf9\xef\xe8\xf2\xe3\xe1\xe3\xf4\xf9\xc0\xd4\xc3\xc3\xa6",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(174) / L(59)
        "\x0e\x09\x02\x09\x5d\x02\x0d\x5a\x02\x0e\x0e\x02\x0a\x5b\x02\x0d\x01\x02\x0b\x59\x02\x08\x00\x02\x5e\x5e\x02\x0d\x00\x02\x5c\x09\x02\x0c\x59\x02\x5d\x0a\x02\x0a\x0c\x02\x0d\x0a\x02\x5c\x09\x02\x01\x00\x02\x5c\x5e\x02\x0e\x5b\x02\x0e\x08\x38\x4d\x3e\x25\x98\x1b\x05\xad\xda",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(60) / L(22)
        "\x40\x68\x6d\x69\x5e\x45\x4f\x47\x4e\x62\x4f\x4e\x45\x5f\x42\x4d\x42\x4e\x59\x60\x4e\x52\x2b",
        // "CC_SHA1_Update" / M(Xor3) / S(73) / L(14)
        "\x1a\x1a\x06\x0a\x11\x18\x68\x06\x0c\x29\x3d\x38\x2d\x3c\x59\xaf",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(132) / L(21)
        "\x33\x1b\x1e\x0c\x21\x28\x3d\x19\x2a\x2a\x39\x21\x1b\x39\x34\x34\x1a\x39\x3b\x33\x2b\x58",
        // "NSBundle" / M(Xor1) / S(232) / L(8)
        "\xa6\xbb\xaa\x9d\x86\x8c\x84\x8d\xe8\x21\xc6\x62\xa3\x83\x74\xac",
        // "" / M(None) / S(0) / L(0)
        "\xed\x6d\x96\xe2\xa7\xdb\x1f\x71\x5c\xde\x16\x1b\x6d\x13\xeb\x62\xeb\x0f\x7f\x50\x8c\x08\x9b\x16\x23\x36\x36\xd2\x27\xa5\xa4\x9a",
        // "exit" / M(Xor1) / S(252) / L(4)
        "\x99\x84\x95\x88\xfc\x75\x37\x56\x28\x8c\xa0\xe6\xc1\x9a\xbf\x04",
        // "OBJ_txt2obj" / M(Xor1) / S(127) / L(11)
        "\x30\x3d\x35\x20\x0b\x07\x0b\x4d\x10\x1d\x15\x7f\xc0\x02\x8c\xea",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x68\x85\xff\x9e\x6a\x0f\x8f\x85\x8b\x8e\x10\x7b\x53\xf1\x28\x03\xf4\x9e\x19\x00\x42\x7a\x0b\x80\xd5\x4c\xfd\x39\xfd\xea\x75",
        // "sk_free" / M(Xor3) / S(178) / L(7)
        "\xb1\xa9\x9d\xa4\xb0\xa7\xa7\xc2\x8b\x74\xba\xf0\xb8\xf6\x49\xf6",
        // "" / M(None) / S(0) / L(0)
        "\xf4\x13\xbf\x72\x75\x18\x7d\x6c\x54\x27\x4f\x47\xab\xcc\xe2\x48\xe8\xa5\xec\x1e\xcb\xf7\x69\xb5\x02\xf7\x4b\xb9\xcd\x6c\x35\x00",
        // "CFArrayGetCount" / M(Rot) / S(171) / L(15)
        "\xee\xf1\xec\x1d\x1d\x0c\x24\xf2\x10\x1f\xee\x1a\x20\x19\x1f\xab",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(73) / L(40)
        "\x7f\x7a\x7a\x8e\x7e\x8b\x7f\x7f\x7b\x8c\x7e\x82\x7c\x8a\x79\x81\x8f\x8f\x7e\x81\x8d\x7a\x7d\x8a\x8e\x7b\x7b\x7d\x7e\x7b\x8d\x7a\x82\x81\x8d\x8f\x7f\x8c\x7f\x79\x49\xf1\x6a\xa1\x74\x60\x57\x16\x21",
        // "init" / M(Xor2) / S(117) / L(4)
        "\x0c\x0b\x0c\x11\x65\x70\x5c\xce\x10\x82\x03\xc2\x58\x0f\xd3\x5e",
        // "CFDataCreateMutable" / M(Xor1) / S(239) / L(19)
        "\xac\xa9\xab\x8e\x9b\x8e\xac\x9d\x8a\x8e\x9b\x8a\xa2\x9a\x9b\x8e\x8d\x83\x8a\xef",
        // "%02X:" / M(Rot) / S(31) / L(5)
        "\x44\x4f\x51\x77\x59\x1f\x65\x04\x53\x1d\x28\xc8\x2c\x00\x0d\xfd",
        // "SHA1" / M(Rot) / S(5) / L(4)
        "\x58\x4d\x46\x36\x05\x7a\x2e\xa2\x9a\x68\x01\xfe\x2b\x2f\xf0\x79",
        // "strlen" / M(Xor1) / S(153) / L(6)
        "\xea\xed\xeb\xf5\xfc\xf7\x99\x93\xc4\x19\x7e\xe1\x4b\x39\x21\xb0",
        // "" / M(None) / S(0) / L(0)
        "\x35\xef\x6e\x18\x68\x5b\x54\x8d\x1b\x6d\xd7\x52\x4a\xad\xbe\x14\xf6\x90\x2e\x40\xa5\x92\xba\x91\xa7\xa5\x00\x38\xf0\x72\x43\xc1",
        // "CFNumberCreate" / M(Xor1) / S(125) / L(14)
        "\x3e\x3b\x33\x08\x10\x1f\x18\x0f\x3e\x0f\x18\x1c\x09\x18\x7d\x6b",
        // "%02X:" / M(Xor4) / S(21) / L(5)
        "\x75\x60\x62\x08\x6a\x50\xeb\x62\xeb\x0f\x7f\x50\x8c\x08\x9b\x16",
        // "mainBundle" / M(Xor1) / S(69) / L(10)
        "\x28\x24\x2c\x2b\x07\x30\x2b\x21\x29\x20\x45\x75\x5a\x9c\x4e\xea",
        // "SHA1" / M(Xor3) / S(44) / L(4)
        "\x6f\x74\x7d\x0d\x3c\x49\xfa\xa5\x49\xa7\xb9\xc1\x3c\x16\xe5\xa9",
        // "EVP_DigestInit" / M(Rot) / S(114) / L(14)
        "\xb7\xc8\xc2\xd1\xb6\xdb\xd9\xd7\xe5\xe6\xbb\xe0\xdb\xe6\x72\x57",
        // "alloc" / M(Rot) / S(206) / L(5)
        "\x2f\x3a\x3a\x3d\x31\xce\x0c\xcc\xaf\x4c\xcd\xc0\x14\xd1\x00\x3f",
        // "CC_SHA1_Final" / M(Xor3) / S(232) / L(13)
        "\xbb\xbb\xa7\xab\xb0\xb9\xc9\xa7\xbe\x91\x96\x99\x94\xf8\x94\x74",
        // "" / M(None) / S(0) / L(0)
        "\x48\xa7\xec\x8c\xfc\x7d\x64\x4f\xdf\xa0\x88\x23\x00\x38\x54\x42\x40\x4c\xd3\x5b\x6a\x90\x9d\xd3\xde\xeb\xde\xd8\xc6\xbd\xbd\xff",
        // "CFDataGetBytePtr" / M(Xor3) / S(187) / L(16)
        "\x8f\x8a\x88\xad\xb8\xad\x8b\xa9\xb8\x8e\xb5\xb8\xa9\x9c\xb8\xbe\xcc",
        // "SHA1_Init" / M(Xor2) / S(118) / L(9)
        "\x35\x2e\x27\x57\x39\x2f\x08\x0f\x12\x66\x65\xb2\x7c\x63\x91\x4b",
        // "start" / M(Xor2) / S(89) / L(5)
        "\x3a\x3d\x28\x3b\x3d\x49\x6b\x99\x4d\x48\x47\xba\x36\x98\xc4\x3a",
        // "CFStringCreateWithBytes" / M(Xor3) / S(176) / L(23)
        "\x93\x96\x83\xa4\xa2\xb9\xbe\xb7\x93\xa2\xb5\xb1\xa4\xb5\x87\xb9\xa4\xb8\x92\xa9\xa4\xb5\xa3\xd0\xa1\xc5\x73\x19\xd1\xea\x16\x81",
        // "CFBundleVersion" / M(Rot) / S(84) / L(15)
        "\x97\x9a\x96\xc9\xc2\xb8\xc0\xb9\xaa\xb9\xc6\xc7\xbd\xc3\xc2\x54",
        // "" / M(None) / S(0) / L(0)
        "\x2e\xcc\x49\x7e\x5f\x08\xf5\x43\x91\x8f\xde\x78\x67\xc2\x20\xee\x2e\x7f\x49\x4d\xc5\x87\x92\xf4\xbc\x8d\xc7\x89\xca\x18\xc3\x30",
        // "CC_SHA1" / M(Rot) / S(242) / L(7)
        "\x35\x35\x51\x45\x3a\x33\x23\xf2\x85\x2e\xe4\x92\x2b\x1c\x31\x84",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(164) / L(24)
        "\x67\x62\x60\x45\x50\x41\x62\x4b\x56\x49\x45\x50\x50\x41\x56\x77\x41\x50\x62\x4b\x56\x49\x45\x50\x24\x26\xfc\xa7\xc3\x4d\x59\x10\x52",
        // "d2i_PKCS7_bio" / M(Xor4) / S(58) / L(13)
        "\xc4\x92\xc9\xff\xf0\xeb\xe3\xf3\x97\xff\xc2\xc9\xcf\xa0\x46\x66",
        // "CFReadStreamOpen" / M(Xor2) / S(80) / L(16)
        "\x02\x07\x13\x24\x20\x25\x12\x35\x33\x24\x20\x2c\x0e\x31\x24\x2f\x41",
        // "%02x:" / M(Xor2) / S(248) / L(5)
        "\xcd\xd8\xda\x90\xd2\xe8\x50\xa8\x61\x50\x43\xb0\xd1\x8e\x6c\xec",
        // "" / M(None) / S(0) / L(0)
        "\x92\xbc\xd2\x95\x5f\x1f\x65\xd9\x21\xd0\x84\x24\x71\x8d\x6f\xb8\x6f\x4c\x94\x2b\xff\xb8\xd3\x49\x3b\x40\x82\xed\x70\x07\x69\xce",
        // "CFNumberCreate" / M(Rot) / S(210) / L(14)
        "\x15\x18\x20\x47\x3f\x34\x37\x44\x15\x44\x37\x33\x46\x37\xd2\x64",
        // "EVP_MD_CTX_init" / M(Rot) / S(214) / L(15)
        "\x1b\x2c\x26\x35\x23\x1a\x35\x19\x2a\x2e\x35\x3f\x44\x3f\x4a\xd6",
        // "alloc" / M(Xor4) / S(34) / L(5)
        "\x41\x4c\x4c\x4f\x43\x20\xc0\xf8\x8e\xe6\x96\xa0\x68\x24\xc8\x5a",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(95) / L(36)
        "\x39\x3c\x38\x0f\x14\x1e\x16\x1f\x3d\x1f\x0e\x2c\x1b\x16\x0f\x1f\x3c\x15\x08\x33\x14\x1c\x15\x3e\x13\x19\x0e\x13\x15\x14\x1b\x08\x03\x31\x1f\x03\x7a",
        // "ASN1_OBJECT_free" / M(Xor3) / S(63) / L(16)
        "\x11\x03\x1e\x61\x0f\x1f\x12\x1a\x15\x13\x04\x0f\x36\x22\x35\x35\x50",
        // "EVP_get_digestbyname" / M(Rot) / S(233) / L(20)
        "\x2e\x3f\x39\x48\x50\x4e\x5d\x48\x4d\x52\x50\x4e\x5c\x5d\x4b\x62\x57\x4a\x56\x4e\xe9",
        // "CC_SHA1" / M(Rot) / S(74) / L(7)
        "\x8d\x8d\xa9\x9d\x92\x8b\x7b\x4a\xb5\x6d\xe0\x94\x28\xbc\x4d\xf5",
        // "EVP_DigestFinal" / M(Xor1) / S(90) / L(15)
        "\x1f\x0c\x0a\x05\x1e\x33\x3d\x3f\x29\x2e\x1c\x33\x34\x3b\x36\x5a",
        // "CFBundleVersion" / M(Xor2) / S(126) / L(15)
        "\x2d\x28\x2c\x1b\x00\x0a\x02\x0b\x38\x0b\x1c\x1d\x07\x01\x00\x6e",
        // "" / M(None) / S(0) / L(0)
        "\xbc\x35\x83\x40\xc5\x66\x91\x60\x1f\xcd\x28\xb0\x8e\x35\x11\xc1\xca\x18\x45\x97\xe7\x27\x0b\x1c\x8d\x22\x2b\x07\x18\x01\x18\x7a",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xa8\x4a\x11\x2e\xa4\x25\xa2\x44\xfd\xf4\x2d\xe0\x8b\x38\x0f\x86\x04\x57\xf6\x67\xe0\xf7\xf5\x82\x02\xa1\x3c\x8e\x81\x28\xb3",
        // "BIO_s_mem" / M(Rot) / S(61) / L(9)
        "\x7f\x86\x8c\x9c\xb0\x9c\xaa\xa2\xaa\x3d\x4d\xc2\x98\x60\x68\x52",
        // "" / M(None) / S(0) / L(0)
        "\x70\x4e\xdf\x21\xe4\xf0\x39\x78\xb0\x3a\x97\x13\x8e\x6c\x36\x77\x42\xd6\x71\x06\xdf\xa5\x3b\x5f\x4f\xd7\x56\xf0\x87\x84\xc0\x96",
        // "" / M(None) / S(0) / L(0)
        "\x7f\x5f\x8b\xcb\x9c\xf3\x0f\x73\x19\x31\x0c\xa5\x41\xfb\xcd\xb6\xf8\x4a\xed\xc6\xe9\x87\x93\xca\xf0\x65\x34\x47\xbd\x24\xc0\xae",
        // "BIO_new" / M(Rot) / S(124) / L(7)
        "\xbe\xc5\xcb\xdb\xea\xe1\xf3\x7c\xfb\x2f\x57\xa0\x41\x00\x52\x70",
        // "EVP_get_digestbyname" / M(Xor1) / S(139) / L(20)
        "\xce\xdd\xdb\xd4\xec\xee\xff\xd4\xef\xe2\xec\xee\xf8\xff\xe9\xf2\xe5\xea\xe6\xee\x8b",
        // "%02X" / M(Xor4) / S(180) / L(4)
        "\x65\x70\x72\x18\x40\xaf\xd4\xef\x8a\x07\x78\xc8\x94\xb3\x9f\x6f",
        // "BIO_free" / M(Xor3) / S(253) / L(8)
        "\x4f\x44\x42\x52\x6b\x7f\x68\x68\x0d\x09\x94\xf7\x1b\xc7\x81\x08",
        // "sk_value" / M(Xor2) / S(199) / L(8)
        "\xa4\xbc\x88\xa1\xb6\xbb\xa2\xb2\xd7\xdc\x75\x03\xbb\xbe\x0b\xb7",
        // "" / M(None) / S(0) / L(0)
        "\xfa\x64\xab\x94\x6f\xce\x46\xba\xf7\xe3\x88\xdd\xda\x88\xc6\xd5\xb5\x74\x24\x57\x33\x1c\x31\x93\x0a\x99\x71\x93\x1f\x3d\x4f\xfa",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor2) / S(226) / L(39)
        "\x91\x94\x86\xbb\xbf\xb7\x88\xbd\xbc\xb7\x91\xa0\xb7\xb3\xa6\xb7\x85\xbb\xa6\xba\x86\xbb\xbf\xb7\x9b\xbc\xa6\xb7\xa0\xa4\xb3\xbe\x94\xa0\xbd\xbf\x95\x9f\x86\xd2\x49\x8f\x51\x4a\x77\x50\x9a\x8b",
        // "%02X" / M(Xor4) / S(195) / L(4)
        "\x15\x00\x02\x68\x30\xb6\xaa\x4b\xe4\x08\x18\x5e\x69\x1d\x0b\x83",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(96) / L(22)
        "\x4f\x15\x13\x12\x4f\x0c\x09\x02\x4f\x0c\x09\x02\x0f\x02\x0a\x03\x4e\x04\x19\x0c\x09\x02\x60",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(171) / L(16)
        "\xc8\x99\xc2\xf4\xea\xf8\xe5\x9a\xf4\xe2\xe5\xff\xee\xec\xee\xf9\xab",
        // "" / M(None) / S(0) / L(0)
        "\xdb\xc6\xa9\x5e\x3e\x18\xf4\x16\x25\x3e\x01\xab\xcf\x96\x85\xd9\xf2\xfb\x0a\x58\x91\x36\x3e\x05\x8e\xa7\x30\x3c\xd6\x57\x02\xda",
        // "CFAbsoluteTimeGetCurrent" / M(Rot) / S(28) / L(24)
        "\x5f\x62\x5d\x7e\x8f\x8b\x88\x91\x90\x81\x70\x85\x89\x81\x63\x81\x90\x5f\x91\x8e\x8e\x81\x8a\x90\x1c\x8c\xe4\xcd\x0c\x21\xa8\x00\xd0",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(91) / L(22)
        "\x0f\x0a\x0d\x3e\x3e\x2d\x35\x0b\x29\x38\x1a\x2d\x20\x39\x29\x0d\x38\x05\x22\x28\x29\x34\x4c",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(28) / L(25)
        "\x4d\x4a\x4e\x4a\x54\x50\x4c\x4a\x4d\x4d\x4f\x52\x4f\x51\x4a\x4d\x4c\x4c\x4a\x52\x4a\x4d\x4d\x4a\x4d\x1c\xba\xd7\xd3\x1c\xbc\xd7\x06\xb3",
        // "start" / M(Rot) / S(241) / L(5)
        "\x64\x65\x52\x63\x65\xf1\x3d\x50\x6a\xc5\x68\x45\xdc\x55\xa5\x70",
        // "CC_SHA1_Init" / M(Xor1) / S(226) / L(12)
        "\xa1\xa1\xbd\xb1\xaa\xa3\xd3\xbd\xab\x8c\x8b\x96\xe2\x67\xbf\x65",
        // "CFDateFormatterSetProperty" / M(Xor4) / S(207) / L(26)
        "\x0e\x0b\x09\x2c\x39\x28\x0b\x22\x3f\x20\x2c\x39\x39\x28\x3f\x1e\x28\x39\x1d\x3f\x22\x3d\x28\x3f\x39\x34\x4d\x0a\xc2\xd9\x6f\x2e\x98\x42\xce",
        // "CFStringCreateWithBytes" / M(Xor1) / S(92) / L(23)
        "\x1f\x1a\x0f\x28\x2e\x35\x32\x3b\x1f\x2e\x39\x3d\x28\x39\x0b\x35\x28\x34\x1e\x25\x28\x39\x2f\x5c\x22\x40\xb7\x85\xc3\x45\x84\x3b",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor3) / S(58) / L(40)
        "\x5d\x5a\x5a\x2e\x5e\x29\x5d\x5d\x59\x28\x5e\x52\x58\x2a\x5b\x53\x2d\x2d\x5e\x53\x2f\x5a\x5f\x2a\x2e\x59\x59\x5f\x5e\x59\x2f\x5a\x52\x53\x2f\x2d\x5d\x28\x5d\x5b\x6b\x50\x88\x64\xb1\x16\xf4\x59\x38",
        // "PKCS7_free" / M(Xor4) / S(93) / L(10)
        "\x80\x9b\x93\x83\xe7\x8f\xb6\xa2\xb5\xb5\xd0\xaf\xf8\x55\x10\x6d",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x97\x12\x7e\xbf\xd8\x6c\xbe\x84\x6e\x2d\xfd\xb6\xb4\x93\xf3\x04\xdc\x34\x31\xb6\x80\x92\x1e\x12\x78\x6b\x51\x49\x8a\x34\xdb",
        // "CFDictionaryAddValue" / M(Xor1) / S(93) / L(20)
        "\x1e\x1b\x19\x34\x3e\x29\x34\x32\x33\x3c\x2f\x24\x1c\x39\x39\x0b\x3c\x31\x28\x38\x5d",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x05\x77\x7f\x6c\xd1\x97\x09\x68\x95\x2d\x19\x07\x20\x39\x54\x76\xa5\x3c\x23\x1f\x8e\xcf\xd4\x6c\x89\x3e\x0b\x1c\x36\x47\xd0",
        // "" / M(None) / S(0) / L(0)
        "\xc0\xa5\xe4\xc9\xb4\x54\x3e\x41\xbe\x59\x5a\xcd\x61\x7d\x2f\xd7\x94\xd7\xa9\x52\xf8\x46\xe3\x75\x5a\x9c\x4e\xea\x8b\xc6\xc0\x58",
        // "EVP_get_digestbyname" / M(Xor2) / S(25) / L(20)
        "\x49\x5a\x5c\x53\x6b\x69\x78\x53\x68\x65\x6b\x69\x7f\x78\x6e\x75\x62\x6d\x61\x69\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x81\xf9\x78\xbc\xc4\xce\x6a\xdd\xb3\x2e\xae\x37\x78\xde\x02\x08\xf1\x92\x63\x5e\x12\xb9\x90\x9b\x3e\x55\x1a\x65\x71\x57\x64",
        // "kCFBundleIdentifierKey" / M(Xor3) / S(176) / L(22)
        "\xac\x84\x81\x85\xb2\xa9\xa3\xab\xa2\x8e\xa3\xa2\xa9\xb3\xae\xa1\xae\xa2\xb5\x8c\xa2\xbe\xc7",
        // "SKReceiptRefreshRequest" / M(Xor1) / S(40) / L(23)
        "\x7b\x63\x7a\x4d\x4b\x4d\x41\x58\x5c\x7a\x4d\x4e\x5a\x4d\x5b\x40\x7a\x4d\x59\x5d\x4d\x5b\x5c\x28\xe2\x63\x99\x4e\x69\xc7\xbc\xd0",
        // "CFStringCompare" / M(Rot) / S(18) / L(15)
        "\x55\x58\x65\x86\x84\x7b\x80\x79\x55\x81\x7f\x82\x73\x84\x77\x12",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x04\xf5\xd2\x6e\xc7\xcf\xeb\x92\xdd\x97\xeb\x25\xfd\x43\xd3\x23\x46\xc6\x4e\xa2\x22\xdf\x23\x2d\x66\xed\x13\xbc\x9c\xa8\x2b",
        // "CFBundleShortVersionString" / M(Xor3) / S(98) / L(26)
        "\xc6\xc3\xc7\xf0\xeb\xe1\xe9\xe0\xd6\xed\xea\xf7\xf1\xd3\xe0\xf7\xf6\xec\xea\xeb\xd6\xf1\xf7\xec\xeb\xe2\x85\xd9\xf2\xfb\x0a\x58\x05\x3e\x36",
        // "Apple Root CA" / M(Xor4) / S(77) / L(13)
        "\x91\xa0\xa0\xbc\xb5\xf0\x82\xbf\xbf\xa4\xf0\x93\x91\xd0\x1f\xc5",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(88) / L(31)
        "\x13\x3b\x3e\x2c\x01\x08\x1d\x3c\x11\x1b\x0c\x11\x17\x16\x19\x0a\x01\x2e\x19\x14\x0d\x1d\x3b\x19\x14\x14\x3a\x19\x1b\x13\x0b\x78",
        // "" / M(None) / S(0) / L(0)
        "\x47\xa0\xe7\x42\xe2\x63\x99\x4e\x69\xc7\xbc\xd0\x72\xa0\xdf\xc0\x65\xda\x6b\x99\x4d\x48\x47\xba\x36\x98\xc4\x3a\x4c\x14\x54\x8d",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(56) / L(26)
        "\x7b\x7e\x6a\x5d\x59\x5c\x6b\x4c\x4a\x5d\x59\x55\x7b\x4a\x5d\x59\x4c\x5d\x6f\x51\x4c\x50\x7e\x51\x54\x5d\x38\xc4\x60\x8a\x83\xa0\xed\x0f\xdf",
        // "sk_value" / M(Xor4) / S(233) / L(8)
        "\xe3\xfb\xcf\xe6\xf1\xfc\xe5\xf5\x90\x28\x1d\xe0\xe8\x2c\xc5\x2a",
        // "BIO_new" / M(Xor4) / S(38) / L(7)
        "\x22\x29\x2f\x3f\x0e\x05\x17\x60\x57\xbf\x8e\x73\x17\x9e\x05\x53",
        // "" / M(None) / S(0) / L(0)
        "\xce\x58\x89\x0d\x12\xce\xc9\xf1\x0a\xd6\x80\x09\xf0\xd4\xd2\x8d\x3d\x9b\x8c\xa3\x3e\xfb\x4f\xcb\x37\x33\xd0\x90\x42\x72\x89\x3d",
        // "%02x" / M(Rot) / S(210) / L(4)
        "\xf7\x02\x04\x4a\xd2\xb1\x41\x8f\x09\xe3\xcc\x66\x05\xb4\xf2\x57",
        // "CFBundleIdentifier" / M(Xor4) / S(83) / L(18)
        "\x6a\x6f\x6b\x5c\x47\x4d\x45\x4c\x60\x4d\x4c\x47\x5d\x40\x4f\x40\x4c\x5b\x29",
        // "" / M(None) / S(0) / L(0)
        "\xe9\x9c\x04\x95\x87\xb9\xe8\x91\x46\x88\xa1\x26\xdf\x7f\x0f\x88\x9e\xeb\x35\xc5\xb8\x88\x5c\xfb\x7e\x21\xe8\x62\x1c\x52\x70\x4f",
        // "X509_STORE_add_cert" / M(Rot) / S(140) / L(19)
        "\xe4\xc1\xbc\xc5\xeb\xdf\xe0\xdb\xde\xd1\xeb\xed\xf0\xf0\xeb\xef\xf1\xfe\x00\x8c",
        // "CC_SHA1" / M(Xor1) / S(225) / L(7)
        "\xa2\xa2\xbe\xb2\xa9\xa0\xd0\xe1\xf2\x26\x38\x5a\xdc\x71\x17\x2c",
        // "CFDataCreate" / M(Xor1) / S(80) / L(12)
        "\x13\x16\x14\x31\x24\x31\x13\x22\x35\x31\x24\x35\x50\x01\x2e\x4a",
        // "sk_value" / M(Xor4) / S(4) / L(8)
        "\x33\x2b\x1f\x36\x21\x2c\x35\x25\x40\xcb\x55\x77\xab\xcd\x8e\x28",
        // "" / M(None) / S(0) / L(0)
        "\x2d\x3e\xf8\xc9\x51\x3e\x2d\xc7\x76\xa1\x04\x24\xe9\xdb\xce\x19\x61\xd7\x9b\x9b\xdf\xdc\xe0\x15\x62\x46\x7d\x11\x73\xb7\xf3\xcd",
        // "SHA1_Final" / M(Xor2) / S(81) / L(10)
        "\x12\x09\x00\x70\x1e\x07\x28\x2f\x20\x2d\x41\x2f\x91\x5c\x71\x13",
        // "PKCS7_verify" / M(Xor4) / S(48) / L(12)
        "\x50\x4b\x43\x53\x37\x5f\x76\x65\x72\x69\x66\x79\x00\xc0\x69\x86",
        // "%02x" / M(Xor1) / S(21) / L(4)
        "\x30\x25\x27\x6d\x15\x41\x2d\x69\x96\x8a\x73\x72\xda\x3e\xa2\x48",
        // "PKCS7_free" / M(Xor4) / S(194) / L(10)
        "\x70\x6b\x63\x73\x17\x7f\x46\x52\x45\x45\x20\x0b\xde\x2d\xdb\x2a",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(179) / L(23)
        "\xfc\xc3\xd6\xdd\xe0\xe0\xff\xec\xd2\xd7\xd7\xec\xd2\xdf\xdf\xec\xd7\xda\xd4\xd6\xc0\xc7\xc0\xb3\x00\xc4\x47\x2a\x80\xd3\x48\x2e",
        // "Apple Root CA" / M(Xor3) / S(197) / L(13)
        "\x94\xa5\xa5\xb9\xb0\xf5\x87\xba\xba\xa1\xf5\x96\x94\xd5\xb1\xc7",
        // "" / M(None) / S(0) / L(0)
        "\xa1\xfb\xc8\x4f\x4a\x98\xfe\x33\x11\xa1\x29\x06\x22\xf4\x6c\x50\x47\x04\xf2\xba\x45\x24\xc8\x59\xe1\xfb\xac\x80\xbe\x2a\xa7\x2a",
        // "." / M(Xor2) / S(114) / L(1)
        "\x4c\x62\x59\x3b\x8e\xb7\x45\x72\xec\x58\x05\x0e\x60\x53\xe7\xca",
        // "" / M(None) / S(0) / L(0)
        "\xb5\x8a\xab\xa8\xfa\x09\x94\xf7\x1b\xc7\x81\x08\x27\xc0\xd8\x5e\x35\x45\x11\xd9\x57\xbf\x8e\x73\x17\x9e\x05\x53\xe2\xe2\xf7\x8f",
        // "setjmp" / M(Rot) / S(239) / L(6)
        "\x62\x54\x63\x59\x5c\x5f\xef\xc5\xb7\x55\x51\x1a\xb7\xfc\x03\xe2",
        // "X509_digest" / M(Xor4) / S(167) / L(11)
        "\x28\x45\x40\x49\x2f\x14\x19\x17\x15\x03\x04\x70\x75\xa7\xc7\x1a",
        // "CFReadStreamRead" / M(Rot) / S(75) / L(16)
        "\x8e\x91\x9d\xb0\xac\xaf\x9e\xbf\xbd\xb0\xac\xb8\x9d\xb0\xac\xaf\x4b",
        // "CFBundleGetIdentifier" / M(Xor3) / S(108) / L(21)
        "\xc1\xc4\xc0\xf7\xec\xe6\xee\xe7\xc5\xe7\xf6\xcb\xe6\xe7\xec\xf6\xeb\xe4\xeb\xe7\xf0\x82",
        // "CFBundleGetMainBundle" / M(Rot) / S(246) / L(21)
        "\x39\x3c\x38\x6b\x64\x5a\x62\x5b\x3d\x5b\x6a\x43\x57\x5f\x64\x38\x6b\x64\x5a\x62\x5b\xf6",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(65) / L(66)
        "\x70\x94\xba\xb4\xb5\xa6\xae\x70\x8d\xaa\xa3\xb3\xa2\xb3\xba\x70\x87\xb3\xa2\xae\xa6\xb8\xb0\xb3\xac\xb4\x70\x84\xb0\xb3\xa6\x87\xb0\xb6\xaf\xa5\xa2\xb5\xaa\xb0\xaf\x6f\xa7\xb3\xa2\xae\xa6\xb8\xb0\xb3\xac\x70\x84\xb0\xb3\xa6\x87\xb0\xb6\xaf\xa5\xa2\xb5\xaa\xb0\xaf\x41",
        // "%02x:" / M(Xor3) / S(128) / L(5)
        "\xb5\xa0\xa2\xe8\xaa\x90\xfd\xf3\x12\xb3\xf2\xd1\x8f\xa9\x6a\x1a",
        // "ASN1_OBJECT_free" / M(Xor4) / S(207) / L(16)
        "\xfe\xec\xf1\x8e\xe0\xf0\xfd\xf5\xfa\xfc\xeb\xe0\xd9\xcd\xda\xda\xbf",
        // "getUUIDBytes:" / M(Xor1) / S(11) / L(13)
        "\x6c\x6e\x7f\x5e\x5e\x42\x4f\x49\x72\x7f\x6e\x78\x31\x0b\xda\x5f",
        // "" / M(None) / S(0) / L(0)
        "\xd9\x92\x2e\xad\xea\xae\x4d\xc2\x98\x60\x68\x52\xca\x0c\xc6\x5e\xfe\xbd\xbd\xd0\xd1\x2c\x7c\x6a\x79\x60\x45\x84\xbc\x92\xc7\xde",
        // "setDelegate:" / M(Xor3) / S(234) / L(12)
        "\x89\x9f\x8e\xbe\x9f\x96\x9f\x9d\x9b\x8e\x9f\xc0\xfa\xad\x43\x19",
        // "" / M(None) / S(0) / L(0)
        "\x34\x21\xaa\x9d\x18\xb8\x57\x23\xe2\xd6\x24\x22\x9e\x7d\xed\xcf\x2f\x37\xeb\x24\x76\x2c\x5a\x11\x85\x2e\xe4\x92\x2b\x1c\x31\x84",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x23\x4c\x65\x3d\xab\x34\x5b\xed\x2e\x76\xb4\xab\xc9\x4e\xdd\x2c\xf6\x10\xe3\xd5\x80\x0e\xf1\x40\x41\x40\x29\xd8\x67\xbf\x65",
        // "OBJ_txt2obj" / M(Xor3) / S(244) / L(11)
        "\x4b\x46\x4e\x5b\x70\x7c\x70\x36\x6b\x66\x6e\x04\x09\x1b\x30\x43",
        // "CC_SHA1_Update" / M(Xor2) / S(233) / L(14)
        "\xba\xba\xa6\xaa\xb1\xb8\xc8\xa6\xac\x89\x9d\x98\x8d\x9c\xf9\x2f",
        // "/usr/lib/libSystem.dylib" / M(Rot) / S(67) / L(24)
        "\x72\xb8\xb6\xb5\x72\xaf\xac\xa5\x72\xaf\xac\xa5\x96\xbc\xb6\xb7\xa8\xb0\x71\xa7\xbc\xaf\xac\xa5\x43\x40\xce\xa1\xf9\xf1\x62\x29\x82",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(25) / L(29)
        "\xdd\xf5\xf0\xe2\xcf\xc6\xd3\xf2\xdf\xd5\xc2\xdf\xd9\xd8\xd7\xc4\xcf\xfd\xd3\xcf\xf5\xd7\xda\xda\xf4\xd7\xd5\xdd\xc5\xb6\x39\x4d\x18\xdf\x74\x01\x07\xe7",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(31) / L(40)
        "\x29\x2e\x2e\x7a\x2a\x7d\x29\x29\x2d\x7c\x2a\x26\x2c\x7e\x2f\x27\x79\x79\x2a\x27\x7b\x2e\x2b\x7e\x7a\x2d\x2d\x2b\x2a\x2d\x7b\x2e\x26\x27\x7b\x79\x29\x7c\x29\x2f\x1f\x12\xdd\xd8\x1b\xb2\xb3\x1a\xc4",
        // "UIDevice" / M(Xor1) / S(77) / L(8)
        "\x18\x04\x09\x28\x3b\x24\x2e\x28\x4d\xce\xc9\xf1\x0a\xd6\x80\x09",
        // "setDelegate:" / M(Xor3) / S(2) / L(12)
        "\x61\x77\x66\x56\x77\x7e\x77\x75\x73\x66\x77\x28\x12\x3e\x55\x1a",
        // "RTLD_MAIN_ONLY" / M(Xor4) / S(67) / L(14)
        "\x62\x64\x7c\x74\x6f\x7d\x71\x79\x7e\x6f\x7f\x7e\x7c\x69\x30\x15",
        // "strlen" / M(Xor4) / S(139) / L(6)
        "\xc3\xc4\xc2\xdc\xd5\xde\xb0\x99\x1c\xaa\xc7\x44\x28\x3a\x43\xe6",
        // "SHA1_Init" / M(Rot) / S(2) / L(9)
        "\x55\x4a\x43\x33\x61\x4b\x70\x6b\x76\x02\xea\x17\x8a\xb5\x7e\xf9",
        // "" / M(None) / S(0) / L(0)
        "\xfe\xa3\xec\x64\xe1\xcd\x66\xc0\xb5\x89\x95\x16\x35\xc6\x01\x43\x0a\xa1\xd3\x1d\xaa\x25\x63\xa1\x50\x9c\xce\xf2\x41\xba\x76\x0f",
        // "" / M(None) / S(0) / L(0)
        "\xd7\xa4\xcc\x0f\x3c\xb2\x38\xe2\xac\xd1\x2b\xb1\x6b\x25\x3e\x21\x01\x98\x4f\xa2\xad\x54\xbe\x31\x27\x4a\x11\x1f\x3e\x64\x08\xe0",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(116) / L(22)
        "\x20\x25\x22\x11\x11\x02\x1a\x24\x06\x17\x35\x02\x0f\x16\x06\x22\x17\x2a\x0d\x07\x06\x1b\x63",
        // "" / M(None) / S(0) / L(0)
        "\x83\x2d\xa3\x51\xde\x90\x5b\xfe\x34\x9d\xea\xe4\xa9\xf4\x82\x13\x38\xb1\x92\x15\x2c\xa7\x5b\xa4\xae\x59\xab\xb5\xd5\x26\xdc\x93",
        // "CFArrayCreateMutable" / M(Xor4) / S(183) / L(20)
        "\x40\x45\x42\x71\x71\x62\x7a\x40\x71\x66\x62\x77\x66\x4e\x76\x77\x62\x61\x6f\x66\x03",
        // "CFDictionaryAddValue" / M(Xor2) / S(25) / L(20)
        "\x4f\x4a\x48\x65\x6f\x78\x65\x63\x62\x6d\x7e\x75\x4d\x68\x68\x5a\x6d\x60\x79\x69\x0c",
        // "CFDataCreateMutable" / M(Xor3) / S(16) / L(19)
        "\x67\x62\x60\x45\x50\x45\x67\x56\x41\x45\x50\x41\x69\x51\x50\x45\x46\x48\x41\x24",
        // "CFReadStreamClose" / M(Xor2) / S(135) / L(17)
        "\xd6\xd3\xc7\xf0\xf4\xf1\xc6\xe1\xe7\xf0\xf4\xf8\xd6\xf9\xfa\xe6\xf0\x95",
        // "CC_SHA1_Init" / M(Xor3) / S(15) / L(12)
        "\x5c\x5c\x40\x4c\x57\x5e\x2e\x40\x56\x71\x76\x6b\x1f\xc9\xe6\x34",
        // "" / M(None) / S(0) / L(0)
        "\x83\x14\x93\xab\xd8\x73\xe2\x25\x1a\xcf\xbb\x53\x52\x25\x94\xea\x64\x9b\xb6\x09\x16\x3e\x84\xe7\xf8\x40\x26\x98\x9f\xdf\x9a\x89",
        // "mainBundle" / M(Xor2) / S(231) / L(10)
        "\x9a\x96\x9e\x99\xb5\x82\x99\x93\x9b\x92\xf7\x54\xcb\xf0\xea\xbd",
        // "OBJ_txt2obj" / M(Rot) / S(236) / L(11)
        "\x3b\x2e\x36\x4b\x60\x64\x60\x1e\x5b\x4e\x56\xec\x47\xba\xb8\xc5",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(35) / L(24)
        "\x07\x02\x06\x31\x2a\x20\x28\x21\x11\x2a\x28\x2b\x25\x20\x01\x3c\x21\x27\x31\x30\x25\x26\x28\x21\x44\x9c\xd0\x6f\x6f\x96\xdc\x83\x1c",
        // "PKCS7_verify" / M(Xor1) / S(153) / L(12)
        "\xc9\xd2\xda\xca\xae\xc6\xef\xfc\xeb\xf0\xff\xe0\x99\xec\x49\xfb",
        // "CFDateCompare" / M(Xor4) / S(54) / L(13)
        "\x23\x26\x24\x01\x14\x05\x23\x0f\x0d\x10\x01\x12\x05\x60\x32\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x15\xac\xa3\x5a\x0b\x74\x30\xc1\xb9\xc9\xb6\xd2\x1f\xf4\x41\x06\x9d\x55\xd1\x7a\x40\x8a\x31\xc3\x96\x05\x8f\x53\x96\x18\xb3\xe0",
        // "EVP_MD_CTX_init" / M(Xor2) / S(147) / L(15)
        "\xc6\xd5\xd3\xdc\xce\xc7\xdc\xc0\xd7\xdb\xdc\xea\xed\xea\xf7\x83",
        // "" / M(None) / S(0) / L(0)
        "\xc0\x3e\xb5\xef\x3d\x64\x23\x8d\x88\x44\x2c\xa3\x03\xeb\x63\x10\x13\xda\x25\x34\x8f\x73\x27\x65\x0c\x30\xee\x48\x7f\x34\xbd\x31",
        // "" / M(None) / S(0) / L(0)
        "\xef\x23\x8e\x67\xd6\x37\x83\x31\xe0\x04\x78\x2e\x3f\x04\xd7\xce\x34\x53\x43\xfa\xb5\xe4\x08\xea\x6f\x1b\x54\x5c\x03\x2f\x2b\xb3",
        // "." / M(Xor4) / S(194) / L(1)
        "\x0e\x20\x59\xa5\x1e\x5b\xb7\xe5\x76\xae\xf6\x33\x89\x0a\x6c\x00",
        // "BIO_write" / M(Rot) / S(119) / L(9)
        "\xb9\xc0\xc6\xd6\xee\xe9\xe0\xeb\xdc\x77\xbe\xc2\x1d\xfd\xe1\x31",
        // "CFDataAppendBytes" / M(Xor3) / S(132) / L(17)
        "\xd5\xd0\xd2\xf7\xe2\xf7\xd7\xe6\xe6\xf3\xf8\xf2\xd4\xef\xe2\xf3\xe5\x96",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(13) / L(31)
        "\x46\x6e\x6b\x79\x54\x5d\x48\x69\x44\x4e\x59\x44\x42\x43\x4c\x5f\x54\x7b\x4c\x41\x58\x48\x6e\x4c\x41\x41\x6f\x4c\x4e\x46\x5e\x2d",
        // "PKCS7_free" / M(Xor4) / S(30) / L(10)
        "\xb0\xab\xa3\xb3\xd7\xbf\x86\x92\x85\x85\xe0\x43\xe7\x70\x1d\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x19\x02\x2e\xf8\x9c\x53\x7a\x18\xc7\x0f\x3f\xce\xb7\xb6\x7d\xb3\xec\x4e\xf3\xd4\xf0\x59\x63\x29\x39\x0e\x8e\xd4\x3e\x01\x9b\xd1",
        // "PKCS7_get0_signers" / M(Xor4) / S(67) / L(18)
        "\xa9\xb2\xba\xaa\xce\xa6\x9e\x9c\x8d\xc9\xa6\x8a\x90\x9e\x97\x9c\x8b\x8a\xf9",
        // "" / M(None) / S(0) / L(0)
        "\x57\xdb\xe6\x27\x64\x2a\xac\x62\xb0\x98\x5b\x74\x06\x97\x14\x49\xda\x50\xe3\xd7\x19\x16\xfe\xc8\x8d\xa0\x00\x29\x34\xd5\x50\x8e",
        // "CFRelease" / M(Xor4) / S(173) / L(9)
        "\x93\x96\x82\xb5\xbc\xb5\xb1\xa3\xb5\xd0\x79\x79\xab\x38\x70\x8d",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(147) / L(23)
        "\x33\x2b\x32\x05\x03\x05\x09\x10\x14\x32\x05\x06\x12\x05\x13\x08\x32\x05\x11\x15\x05\x13\x14\x60\x9c\x30\x0c\xb0\xf7\xbb\x77\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x25\xe6\x3a\xb2\xec\xda\x77\x35\x0c\xcd\xb9\x5e\xef\xa0\x3d\xd5\xc4\xa6\x6f\xbe\xf2\x83\x99\x6f\x14\xd5\x6f\xcf\xa1\xfe\x40\xe2",
        // "" / M(None) / S(0) / L(0)
        "\xd0\x9c\xf6\x9d\xfb\x30\x8e\x54\xbb\x48\x9c\x5d\xfd\x0e\x77\xe0\x8d\xc3\x5a\x0c\xe8\xed\xd2\x9a\xe6\xb1\xf8\x23\x65\x91\x28\xa4",
        // "CFDateCreate" / M(Rot) / S(87) / L(12)
        "\x9a\x9d\x9b\xb8\xcb\xbc\x9a\xc9\xbc\xb8\xcb\xbc\x57\x5b\x31\xbb",
        // "ASN1_get_object" / M(Xor1) / S(218) / L(15)
        "\x9b\x89\x94\xeb\x85\xbd\xbf\xae\x85\xb5\xb8\xb0\xbf\xb9\xae\xda",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(199) / L(25)
        "\x2d\x28\x2a\x07\x0d\x1a\x07\x01\x00\x0f\x1c\x17\x2d\x1c\x0b\x0f\x1a\x0b\x23\x1b\x1a\x0f\x0c\x02\x0b\x6e\xef\x7b\x76\x70\x86\x64\xca\x07",
        // "" / M(None) / S(0) / L(0)
        "\x87\x34\xbb\x0b\x5e\x9f\x7f\xb0\xaf\xba\xca\xd5\xf1\x28\xfe\x1f\x20\x98\xfa\x25\x20\x4e\xc3\xca\xdc\x41\x3c\xdc\x66\x53\x50\xe8",
        // "CFReadStreamRead" / M(Xor3) / S(23) / L(16)
        "\x6b\x6e\x7a\x4d\x49\x4c\x7b\x5c\x5a\x4d\x49\x45\x7a\x4d\x49\x4c\x28",
        // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(178) / L(25)
        "\xe5\xfa\xe6\xfa\xec\xe0\xe4\xfa\xe5\xe5\xe7\xe2\xe7\xe1\xfa\xe5\xe4\xe4\xfa\xe2\xfa\xe5\xe5\xfa\xe5\xd4\x9e\x19\x00\x42\x7a\x0b\xfd\x4c",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(100) / L(31)
        "\xcf\xa7\xaa\xb8\xdd\xd4\xc9\xa8\xcd\xc7\xd8\xcd\xd3\xd2\xc5\xd6\xdd\xba\xc5\xd0\xd9\xc9\xa7\xc5\xd0\xd0\xa6\xc5\xc7\xcf\xd7\x64",
        // "X509_STORE_new" / M(Xor4) / S(3) / L(14)
        "\x68\x05\x00\x09\x6f\x63\x64\x7f\x62\x75\x6f\x5e\x55\x47\x30\xb6",
        // "strncmp" / M(Xor3) / S(101) / L(7)
        "\x06\x01\x07\x1b\x16\x18\x05\x75\x93\x97\x83\xbe\x8e\x51\x21\xb0",
        // "" / M(None) / S(0) / L(0)
        "\xd1\x5e\xb2\x0b\x53\x4b\xbd\x51\x31\x1d\x04\x15\xe8\x6c\x56\x5c\xed\x7e\x53\x10\x28\x1f\x5c\x8e\x71\xb6\x63\xef\x7e\x2d\xa9\xa8",
        // "EVP_DigestInit" / M(Xor1) / S(2) / L(14)
        "\x47\x54\x52\x5d\x46\x6b\x65\x67\x71\x76\x4b\x6c\x6b\x76\x02\x0f",
        // "X509_STORE_free" / M(Rot) / S(2) / L(15)
        "\x5a\x37\x32\x3b\x61\x55\x56\x51\x54\x47\x61\x68\x74\x67\x67\x02",
        // "" / M(None) / S(0) / L(0)
        "\x69\x61\x3b\xf5\x3a\x9c\xa6\x01\x19\xd5\x8b\x9c\x5c\x2e\x67\x2c\xde\x36\xfa\xa4\x15\x53\x12\x1e\x6a\x3f\xbe\x13\x2a\xce\xaf\x35",
        // "BIO_s_mem" / M(Xor1) / S(247) / L(9)
        "\xb5\xbe\xb8\xa8\x84\xa8\x9a\x92\x9a\xf7\x65\xa9\x0d\x51\x73\x79",
        // "objc_getClass" / M(Rot) / S(198) / L(13)
        "\x35\x28\x30\x29\x25\x2d\x2b\x3a\x09\x32\x27\x39\x39\xc6\x1b\xc5",
        // "CFArrayCreateMutable" / M(Xor2) / S(144) / L(20)
        "\xc6\xc3\xc4\xf7\xf7\xe4\xfc\xc6\xf7\xe0\xe4\xf1\xe0\xc8\xf0\xf1\xe4\xe7\xe9\xe0\x85",
        // "CFBundleIdentifier" / M(Xor3) / S(113) / L(18)
        "\xc7\xc2\xc6\xf1\xea\xe0\xe8\xe1\xcd\xe0\xe1\xea\xf0\xed\xe2\xed\xe1\xf6\x84",
        // "." / M(Xor3) / S(52) / L(1)
        "\x6a\x44\x4d\x03\xe2\xcc\x79\x40\xc0\xfb\x6d\xf6\x9a\xc9\xc5\xaf",
        // "ASN1_INTEGER_get" / M(Rot) / S(49) / L(16)
        "\x72\x84\x7f\x62\x90\x7a\x7f\x85\x76\x78\x76\x83\x90\x98\x96\xa5\x31",
        // "CC_SHA1_Init" / M(Xor4) / S(63) / L(12)
        "\xb3\xb3\xaf\xa3\xb8\xb1\xc1\xaf\xb9\x9e\x99\x84\xf0\x97\xf3\xea",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(29) / L(22)
        "\xd8\xdd\xda\xe9\xe9\xfa\xe2\xdc\xfe\xef\xcd\xfa\xf7\xee\xfe\xda\xef\xd2\xf5\xff\xfe\xe3\x9b",
        // "kCFBundleIdentifierKey" / M(Rot) / S(137) / L(22)
        "\xf4\xcc\xcf\xcb\xfe\xf7\xed\xf5\xee\xd2\xed\xee\xf7\xfd\xf2\xef\xf2\xee\xfb\xd4\xee\x02\x89",
        // "" / M(None) / S(0) / L(0)
        "\xe2\x88\x9b\x56\x0c\x12\x86\x11\xf1\x1e\x90\x01\xdb\x28\xc0\x9f\xce\x38\x5c\x60\xd0\x59\x2a\xa9\x9c\x27\xad\x0d\x17\x5a\x6a\x80",
        // "" / M(None) / S(0) / L(0)
        "\x6c\xa5\x94\xdf\x89\x8b\x81\x30\xbf\xdb\x46\x3d\xe7\x47\xcf\xab\xfb\x65\x7a\x6d\x6f\x13\x4f\xad\xe8\x26\x1a\x90\x7d\xcc\x52\x63",
        // "CC_SHA1_Final" / M(Xor3) / S(80) / L(13)
        "\x23\x23\x3f\x33\x28\x21\x51\x3f\x26\x09\x0e\x01\x0c\x60\x4e\xdd",
        // "" / M(None) / S(0) / L(0)
        "\x3c\x40\x82\x55\xf8\x37\x01\x1e\xfd\x06\xe5\xf7\x6f\x5a\xea\x06\xfc\xd8\xb9\x82\xcf\xe4\xd7\x1f\x66\x70\x33\xad\x3b\x81\xd2\x0d",
        // "CFStringCreateWithCString" / M(Xor4) / S(234) / L(25)
        "\x57\x52\x47\x60\x66\x7d\x7a\x73\x57\x66\x71\x75\x60\x71\x43\x7d\x60\x7c\x57\x47\x60\x66\x7d\x7a\x73\x14\xa1\xe0\xd8\x8a\x3d\x27\xe1\x4d",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(241) / L(25)
        "\x33\x2c\x30\x2c\x3a\x36\x32\x2c\x33\x33\x31\x34\x31\x37\x2c\x33\x32\x32\x2c\x34\x2c\x33\x33\x2c\x33\x02\xd2\x52\xb2\x63\x54\xfa\xd0\xef",
        // "" / M(None) / S(0) / L(0)
        "\x89\x12\x6a\x3b\xe0\xf6\x92\x21\xd9\x98\xc0\xed\xbf\xf6\x21\x7d\xf0\x8d\x92\xa0\xc2\xf7\xef\x7b\x76\x70\x86\x64\x25\xcc\x07\xca",
        // "%02x:" / M(Xor1) / S(144) / L(5)
        "\xb5\xa0\xa2\xe8\xaa\x90\x09\xc2\xed\x6d\x96\xe2\xa7\xdb\x1f\x71",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(201) / L(25)
        "\xa8\xad\xaf\x82\x88\x9f\x82\x84\x85\x8a\x99\x92\xa8\x99\x8e\x8a\x9f\x8e\xa6\x9e\x9f\x8a\x89\x87\x8e\xeb\xb0\xa7\x84\xaa\x86\x0d\xa8\xe2",
        // "SHA1_Final" / M(Xor3) / S(1) / L(10)
        "\x42\x59\x50\x20\x4e\x57\x78\x7f\x70\x7d\x11\xee\x02\xa8\x06\x76",
        // "CFArrayGetCount" / M(Rot) / S(68) / L(15)
        "\x87\x8a\x85\xb6\xb6\xa5\xbd\x8b\xa9\xb8\x87\xb3\xb9\xb2\xb8\x44",
        // "currentDevice" / M(Xor3) / S(136) / L(13)
        "\xfb\xed\xea\xea\xfd\xf6\xec\xdc\xfd\xee\xf1\xfb\xfd\x98\x92\x1e",
        // "" / M(None) / S(0) / L(0)
        "\x3b\xf4\xdf\xbc\xf3\x73\xb2\x2f\x88\xe5\x98\xed\xc2\xde\xf4\x60\x2b\x8b\x24\x5b\x7a\x64\x82\xae\x4f\x61\xa3\x4e\x22\x8f\x98\xc1",
        // "ASN1_INTEGER_get" / M(Xor3) / S(86) / L(16)
        "\x26\x34\x29\x56\x38\x2e\x29\x33\x22\x20\x22\x35\x38\x00\x02\x13\x67",
        // "setjmp" / M(Xor3) / S(184) / L(6)
        "\xbb\xad\xbc\xa2\xa5\xb8\xc8\xd3\x74\x2d\x49\xdb\x4e\x48\x4f\xf2",
        // "" / M(None) / S(0) / L(0)
        "\x2b\x5c\xf1\x35\xff\x00\x97\x97\x3c\xa5\x15\x1b\x45\xdc\x36\xeb\x90\x51\x7f\x7b\x68\x9f\x0d\x0a\xec\x32\xb7\xdf\x7a\xbf\xe5\x23",
        // "" / M(None) / S(0) / L(0)
        "\xad\x93\x94\x94\x19\xb7\x74\x11\xb6\x2e\x8f\x9d\x9e\xf5\xd7\x6b\x16\x1b\xae\xd2\x7a\x78\x1c\xff\x80\x66\x48\x16\xf2\xf1\x41\x7d",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(167) / L(24)
        "\xcc\xe4\xe1\xe3\xc6\xd3\xc2\xe1\xc8\xd5\xca\xc6\xd3\xd3\xc2\xd5\xf3\xce\xca\xc2\xfd\xc8\xc9\xc2\xa7\x84\x22\x77\x4b\xe1\x19\x18\x3f",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(92) / L(35)
        "\x1f\x1a\x18\x3d\x28\x39\x1a\x33\x2e\x31\x3d\x28\x28\x39\x2e\x1f\x2e\x39\x3d\x28\x39\x18\x3d\x28\x39\x1a\x2e\x33\x31\x0f\x28\x2e\x35\x32\x3b\x5c",
        // "" / M(None) / S(0) / L(0)
        "\x9d\x66\x96\x98\x3c\x13\x40\x47\x34\xfa\x54\x4e\x2f\x6a\xc4\xc7\xbb\xa9\xbb\x2e\xed\xbe\xd6\x3c\xff\x18\x8f\xdb\xfb\x5d\xda\x0e",
        // "EVP_DigestUpdate" / M(Xor3) / S(75) / L(16)
        "\x19\x0a\x0c\x03\x18\x35\x3b\x39\x2f\x28\x09\x2c\x38\x3d\x28\x39\x5c",
        // "d2i_X509_bio" / M(Rot) / S(215) / L(12)
        "\x3b\x09\x40\x36\x2f\x0c\x07\x10\x36\x39\x40\x46\xd7\xea\x59\x48",
        // "CFArrayAppendValue" / M(Xor3) / S(212) / L(18)
        "\xa4\xa1\xa6\x95\x95\x86\x9e\xa6\x97\x97\x82\x89\x83\xb1\x86\x8b\x92\x82\xe7",
        // "" / M(None) / S(0) / L(0)
        "\x91\x45\xfe\xf6\x5f\x93\xc7\xf7\x0f\x09\x5a\xd8\x34\xca\x22\x36\xf3\x8c\xa9\x51\x74\xea\x6e\x1d\xd0\x15\x1c\x03\x42\xed\xd5\x08",
        // "UIDevice" / M(Xor3) / S(186) / L(8)
        "\x9f\x83\x8e\xaf\xbc\xa3\xa9\xaf\xca\xe9\xcd\x31\x87\x59\xe7\xd6",
        // "sel_registerName" / M(Xor2) / S(65) / L(16)
        "\x23\x35\x3c\x0f\x22\x35\x37\x39\x23\x24\x35\x22\x1e\x31\x3d\x35\x50",
        // "CFDataGetLength" / M(Xor3) / S(50) / L(15)
        "\x01\x04\x06\x23\x36\x23\x05\x27\x36\x0e\x27\x2c\x25\x36\x2a\x42",
        // "objc_lookUpClass" / M(Xor2) / S(192) / L(16)
        "\xbe\xb3\xbb\xb2\x8e\xbd\xbe\xbe\xba\x84\xa1\x92\xbd\xb0\xa2\xa2\xd1",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(130) / L(19)
        "\x70\x1d\x18\x11\x77\x4f\x4d\x5c\x77\x4d\x50\x5c\x77\x4a\x51\x77\x67\x6a\x62\x28",
        // "EVP_DigestInit" / M(Rot) / S(93) / L(14)
        "\xa2\xb3\xad\xbc\xa1\xc6\xc4\xc2\xd0\xd1\xa6\xcb\xc6\xd1\x5d\x79",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x43\x27\x30\xa9\x1e\xf1\x8f\x4f\x61\xc1\xf2\x19\x14\x9f\xd0\x24\x58\xa5\xad\xb5\x79\x16\x58\xd8\xb6\xf7\xea\x69\x8f\x73\xb0",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(40) / L(32)
        "\xa1\xa1\xa1\xa1\x4f\x55\x4f\x75\x75\x4f\x55\x4f\x8c\x8c\x4f\x7c\x4f\x70\x70\x4f\x62\x4f\x95\x95\x4f\x62\x4f\x9b\x9b\x4f\x82\x4f\x28",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(221) / L(24)
        "\xbd\xb8\xba\x9f\x8a\x9b\xb8\x91\x8c\x93\x9f\x8a\x8a\x9b\x8c\xad\x9b\x8a\xb8\x91\x8c\x93\x9f\x8a\xfe\x16\x23\xa4\xca\xdf\x14\x91\x56",
        // "" / M(None) / S(0) / L(0)
        "\xf5\xd3\xde\xb7\x97\xe3\x27\xbe\x3b\x16\x13\xd0\xa3\x76\xc0\xd0\x43\x69\x97\xfa\xb8\x8e\x6a\xf9\x07\x7e\x39\x0d\xbd\x78\x9a\xac",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(84) / L(24)
        "\x36\x33\x37\x00\x1b\x11\x19\x10\x20\x1b\x19\x1a\x14\x11\x30\x0d\x10\x16\x00\x01\x14\x17\x19\x10\x75\x0e\x8e\xd4\x3e\x01\x9b\xd1\x27",
        // "" / M(None) / S(0) / L(0)
        "\xaa\x84\xc2\x29\xaa\x1e\xb0\xe6\xbe\x68\x2f\x98\x60\x6c\xaa\x85\x56\xe5\xfa\x94\xd1\xa9\x1b\x14\xb5\x2b\x81\xf1\x3c\x2f\x8f\x34",
        // "mainBundle" / M(Xor3) / S(143) / L(10)
        "\xf2\xfe\xf6\xf1\xdd\xea\xf1\xfb\xf3\xfa\x9f\xab\x60\x0e\x66\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x77\x21\xa8\x01\xa7\x5e\x8f\xec\x2a\xef\xac\x40\x9d\x97\x74\x97\x5b\x13\x01\xfc\x6e\x8d\xbc\xec\xd1\x35\xee\x64\x4d\xc1\xd6\xca",
        // "sk_free" / M(Xor3) / S(11) / L(7)
        "\x68\x70\x44\x7d\x69\x7e\x7e\x1b\xe3\x12\xde\x4d\x16\x62\xdb\x90",
        // "X509_free" / M(Xor1) / S(47) / L(9)
        "\x77\x1a\x1f\x16\x70\x49\x5d\x4a\x4a\x2f\x4c\x15\xde\xf9\xf6\x7b",
        // "CFEqual" / M(Xor2) / S(247) / L(7)
        "\xa4\xa1\xa2\x96\x92\x86\x8b\xe7\xaa\x89\xf5\xe5\x2c\x8c\xf7\x6f",
        // "CFStringCreateWithCString" / M(Xor2) / S(152) / L(25)
        "\xf9\xfc\xe9\xce\xc8\xd3\xd4\xdd\xf9\xc8\xdf\xdb\xce\xdf\xed\xd3\xce\xd2\xf9\xe9\xce\xc8\xd3\xd4\xdd\xba\xbb\x3e\x48\xb4\x22\x02\x63\xd6",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(128) / L(25)
        "\xfa\x97\x92\x9b\xfd\xec\xe3\xef\xe7\xfd\xc5\xc7\xd6\xfd\xd6\xc7\xda\xd6\xfd\xc0\xdb\xfd\xec\xeb\xe6\xa2\x84\x98\x08\xad\xfc\x5f\xc2\xa5",
        // "sel_registerName" / M(Xor4) / S(174) / L(16)
        "\xfd\xeb\xe2\xd1\xfc\xeb\xe9\xe7\xfd\xfa\xeb\xfc\xc0\xef\xe3\xeb\x8e",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(249) / L(29)
        "\x74\x5c\x59\x4b\x66\x6f\x7a\x5b\x76\x7c\x6b\x76\x70\x71\x7e\x6d\x66\x54\x7a\x66\x5c\x7e\x73\x73\x5d\x7e\x7c\x74\x6c\x1f\x4e\xcb\xec\x27\x6e\x8d\xf1\x2c",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(153) / L(22)
        "\xb6\xec\xea\xeb\xb6\xf5\xf0\xfb\xb6\xf5\xf0\xfb\xf6\xfb\xf3\xfa\xb7\xfd\xe0\xf5\xf0\xfb\x99",
        // "" / M(None) / S(0) / L(0)
        "\x02\xa8\x6c\xc3\xb3\x4d\x64\x9d\x59\xf1\xf8\x99\x19\x8a\xde\x0c\x07\xed\xcd\x3d\xb7\x80\x9f\x0c\x6d\x9a\x9f\x7c\x49\x8f\x51\x4a",
        // "CFBundleGetMainBundle" / M(Xor4) / S(200) / L(21)
        "\x73\x76\x72\x45\x5e\x54\x5c\x55\x77\x55\x44\x7d\x51\x59\x5e\x72\x45\x5e\x54\x5c\x55\x30",
        // "CFBundleGetIdentifier" / M(Xor2) / S(209) / L(21)
        "\x84\x81\x85\xb2\xa9\xa3\xab\xa2\x80\xa2\xb3\x8e\xa3\xa2\xa9\xb3\xae\xa1\xae\xa2\xb5\xc7",
        // "" / M(None) / S(0) / L(0)
        "\x77\x50\x9a\x8b\x39\xa0\xe6\x8f\x46\xc2\x14\x1b\xe3\xf0\x8b\xee\x92\x38\xfe\xd5\x08\x91\xd7\x56\x0b\xdc\x72\x35\xb9\xdc\x8a\x00",
        // "appStoreReceiptURL" / M(Xor1) / S(202) / L(18)
        "\xab\xba\xba\x99\xbe\xa5\xb8\xaf\x98\xaf\xa9\xaf\xa3\xba\xbe\x9f\x98\x86\xca",
        // "UIDevice" / M(Xor1) / S(171) / L(8)
        "\xfe\xe2\xef\xce\xdd\xc2\xc8\xce\xab\x80\xcc\x58\xb6\x8c\xb1\x65",
        // "CFArrayCreateMutable" / M(Xor2) / S(47) / L(20)
        "\x79\x7c\x7b\x48\x48\x5b\x43\x79\x48\x5f\x5b\x4e\x5f\x77\x4f\x4e\x5b\x58\x56\x5f\x3a",
        // "" / M(None) / S(0) / L(0)
        "\x13\x9b\x41\x00\x61\x73\xd5\xe9\x15\xdc\xb0\xba\xc0\x1d\x72\xf4\xe1\x99\x02\xd9\x03\x08\xb2\x0a\xd9\x74\xb6\x4a\x7b\x97\x75\x18",
        // "EVP_DigestUpdate" / M(Xor4) / S(130) / L(16)
        "\xe7\xf4\xf2\xfd\xe6\xcb\xc5\xc7\xd1\xd6\xf7\xd2\xc6\xc3\xd6\xc7\xa2",
        // "strncmp" / M(Rot) / S(232) / L(7)
        "\x5b\x5c\x5a\x56\x4b\x55\x58\xe8\x63\xfb\xf5\x5b\x2b\xd1\x82\xb0",
        // "com.treasurebox.gear.ios" / M(Xor4) / S(75) / L(24)
        "\xc8\xc4\xc6\x85\xdf\xd9\xce\xca\xd8\xde\xd9\xce\xc9\xc4\xd3\x85\xcc\xce\xca\xd9\x85\xc2\xc4\xd8\xab\x62\xe7\x55\x63\x82\x0e\x72\x61",
        // "" / M(None) / S(0) / L(0)
        "\x47\xca\x65\x33\xf3\xe7\x40\x2b\x41\x13\x25\x9a\x37\xe2\xc8\x61\x59\x17\x7f\x80\x33\xf6\x92\xe4\x9e\x9f\x0e\x5a\x13\x0f\xb3\x69",
        // "init" / M(Xor2) / S(186) / L(4)
        "\xc3\xc4\xc3\xde\xaa\xa5\xe4\xc9\xb4\x54\x3e\x41\xbe\x59\x5a\xcd",
        // "CFDataGetLength" / M(Xor4) / S(247) / L(15)
        "\x33\x36\x34\x11\x04\x11\x37\x15\x04\x3c\x15\x1e\x17\x04\x18\x70",
        // "" / M(None) / S(0) / L(0)
        "\xc8\x2f\xd4\x57\x53\x1d\x8d\x86\x8d\x3d\xca\x24\xd1\x63\x35\x19\xf3\x73\xb6\xb8\x91\x2a\xf7\x41\x01\x47\x7f\x31\x5d\xdf\xb0\xad",
        // "dlsym" / M(Rot) / S(244) / L(5)
        "\x58\x60\x67\x6d\x61\xf4\xb6\x4a\x7b\x97\x75\x18\x47\xca\x65\x33",
        // "CC_SHA1_Update" / M(Xor4) / S(62) / L(14)
        "\xa3\xa3\xbf\xb3\xa8\xa1\xd1\xbf\xb5\x90\x84\x81\x94\x85\xe0\x43",
        // "identifierForVendor" / M(Xor2) / S(203) / L(19)
        "\xb6\xbb\xba\xb1\xab\xb6\xb9\xb6\xba\xad\x99\xb0\xad\x89\xba\xb1\xbb\xb0\xad\xdf",
        // "CFBundleVersion" / M(Xor3) / S(185) / L(15)
        "\x8a\x8f\x8b\xbc\xa7\xad\xa5\xac\x9f\xac\xbb\xba\xa0\xa6\xa7\xc9",
        // "SHA1" / M(Xor3) / S(98) / L(4)
        "\x21\x3a\x33\x43\x72\x71\x37\x28\x44\x1d\x0b\x33\x93\x7c\x27\xcf",
        // "" / M(None) / S(0) / L(0)
        "\xc0\x9d\x63\xae\x71\x29\xff\x5c\xca\x59\xeb\x1e\xb3\x69\x35\x9a\xbd\xbf\x75\xe5\x32\x14\x59\xa7\xe5\x2d\x51\x7d\xb1\x36\x2e\x00",
        // "sha1" / M(Xor4) / S(80) / L(4)
        "\x73\x68\x61\x31\x00\x96\x7c\xd2\x95\x2a\x61\x61\x3c\x3d\xb9\x1f",
        // "/usr/lib/libSystem.dylib" / M(Xor4) / S(39) / L(24)
        "\x28\x72\x74\x75\x28\x6b\x6e\x65\x28\x6b\x6e\x65\x54\x7e\x74\x73\x62\x6a\x29\x63\x7e\x6b\x6e\x65\x07\x50\xcf\x3b\x81\x35\x7a\xb1\xe3",
        // "alloc" / M(Xor2) / S(36) / L(5)
        "\x55\x58\x58\x5b\x57\x34\x71\x06\xdf\xa5\x3b\x5f\x4f\xd7\x56\xf0",
        // "CFEqual" / M(Rot) / S(250) / L(7)
        "\x3d\x40\x3f\x6b\x6f\x5b\x66\xfa\xe8\x50\xdc\x3c\x75\x8c\x1b\x30",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(31) / L(32)
        "\x86\x86\x86\x86\xd8\xd2\xd8\xb2\xb2\xd8\xd2\xd8\x9b\x9b\xd8\xab\xd8\xb7\xb7\xd8\xc5\xd8\x92\x92\xd8\xc5\xd8\x8c\x8c\xd8\xa5\xd8\xff",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(239) / L(23)
        "\xaf\x90\x85\x8e\xb3\xb3\xac\xbf\x81\x84\x84\xbf\x81\x8c\x8c\xbf\x84\x89\x87\x85\x93\x94\x93\xe0\xcc\x1b\x10\x1c\xe9\xb5\x31\xb8",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(38) / L(16)
        "\x89\x58\x8f\x85\x67\x79\x74\x57\x85\x6f\x74\x7a\x6b\x6d\x6b\x78\x26",
        // "" / M(None) / S(0) / L(0)
        "\x40\xa3\xd6\x01\xd1\xfd\x13\x94\xb1\x67\xe6\xf0\x09\x66\xa0\x0e\xb7\x5b\xf6\x2c\xf5\x9c\x3a\x43\x61\xa9\xf4\x12\x2f\x03\xa0\x8e",
        // "CFRelease" / M(Xor1) / S(32) / L(9)
        "\x63\x66\x72\x45\x4c\x45\x41\x53\x45\x20\xf7\xea\x69\x8f\x73\xb0",
        // "CFDictionaryAddValue" / M(Xor2) / S(170) / L(20)
        "\xfc\xf9\xfb\xd6\xdc\xcb\xd6\xd0\xd1\xde\xcd\xc6\xfe\xdb\xdb\xe9\xde\xd3\xca\xda\xbf",
        // "objc_msgSend" / M(Xor1) / S(144) / L(12)
        "\xff\xf2\xfa\xf3\xcf\xfd\xe3\xf7\xc3\xf5\xfe\xf4\x90\x0a\x9a\x6a",
        // "" / M(None) / S(0) / L(0)
        "\x82\x86\x09\xda\xfb\x6d\x6d\x6b\x04\x12\x9c\xc4\x34\x85\xf2\x11\xf1\x7e\xa6\xb0\xd4\x09\x67\xf8\xc5\xed\x16\xdc\x21\xf2\x72\xb1",
        // "dlopen" / M(Rot) / S(199) / L(6)
        "\x2b\x33\x36\x37\x2c\x35\xc7\x37\x32\xd4\xe5\xfa\x6d\x89\xd8\x6b",
        // "CFEqual" / M(Rot) / S(58) / L(7)
        "\x7d\x80\x7f\xab\xaf\x9b\xa6\x3a\xec\x32\xb7\xdf\x7a\xbf\xe5\x23",
        // "PKCS7_verify" / M(Xor2) / S(197) / L(12)
        "\x85\x9e\x96\x86\xe2\x8a\xa3\xb0\xa7\xbc\xb3\xac\xd5\xbc\x4a\xe3",
        // "SHA1_Update" / M(Xor2) / S(187) / L(11)
        "\xf8\xe3\xea\x9a\xf4\xfe\xdb\xcf\xca\xdf\xce\xab\xd2\x4a\xb6\x2e",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(145) / L(40)
        "\xa7\xa0\xa0\xd4\xa4\xd3\xa7\xa7\xa3\xd2\xa4\xa8\xa2\xd0\xa1\xa9\xd7\xd7\xa4\xa9\xd5\xa0\xa5\xd0\xd4\xa3\xa3\xa5\xa4\xa3\xd5\xa0\xa8\xa9\xd5\xd7\xa7\xd2\xa7\xa1\x91\x4e\xdf\x21\xe4\xf0\x39\x78\x13",
        // "sha1" / M(Xor4) / S(204) / L(4)
        "\xb3\xa8\xa1\xf1\xc0\x04\xf5\xd2\x6e\xc7\xcf\xeb\x92\xdd\x97\xeb",
        // "" / M(None) / S(0) / L(0)
        "\x77\x4b\x75\x45\xbf\xb2\x83\x59\x45\x34\x79\x82\xf3\x24\xfb\xa9\x98\x99\x53\xb6\x9f\xd5\x41\x51\xb8\x7c\x71\x03\xd9\x1d\x09\x1d",
        // "EVP_DigestFinal" / M(Rot) / S(78) / L(15)
        "\x93\xa4\x9e\xad\x92\xb7\xb5\xb3\xc1\xc2\x94\xb7\xbc\xaf\xba\x4e",
        // "" / M(None) / S(0) / L(0)
        "\xf1\xd1\x2c\x18\xb2\x39\x9e\xe0\xbb\xce\x7d\xbe\x77\xe3\xb2\x71\x8f\x67\x8e\x5b\x7d\xf3\xf9\x29\xa1\x71\xe9\xed\x5b\x40\x38\x3c",
        // "" / M(None) / S(0) / L(0)
        "\xe9\x56\xef\x6c\x2f\x6e\xf6\x79\x00\x94\x57\xfb\x9a\xd3\xd2\x29\x43\xd2\x4e\x7b\xd3\xe4\xeb\x9f\xdc\xf2\x18\xfc\x31\xc1\xe3\xf4",
        // "d2i_X509_bio" / M(Xor2) / S(176) / L(12)
        "\xc4\x92\xc9\xff\xf8\x95\x90\x99\xff\xc2\xc9\xcf\xa0\x9b\x41\x00",
        // "setjmp" / M(Xor1) / S(65) / L(6)
        "\x32\x24\x35\x2b\x2c\x31\x41\xe6\x94\x76\x81\x1a\x0c\xf4\x6b\x33",
        // "identifierForVendor" / M(Rot) / S(75) / L(19)
        "\xb4\xaf\xb0\xb9\xbf\xb4\xb1\xb4\xb0\xbd\x91\xba\xbd\xa1\xb0\xb9\xaf\xba\xbd\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x41\x66\x8b\x39\xbf\x13\x77\x96\x38\xd6\x87\xdc\x71\x99\x9e\x2c\xa3\xef\x15\xd7\x03\xc2\xb3\x60\x76\x48\x1a\xc4\xd8\x22\x01\x97",
        // "SKReceiptRefreshRequest" / M(Rot) / S(54) / L(23)
        "\x89\x81\x88\x9b\x99\x9b\x9f\xa6\xaa\x88\x9b\x9c\xa8\x9b\xa9\x9e\x88\x9b\xa7\xab\x9b\xa9\xaa\x36\x74\x2f\xa4\x67\x78\xfd\x22\x66",
        // "CFDateCreate" / M(Rot) / S(63) / L(12)
        "\x82\x85\x83\xa0\xb3\xa4\x82\xb1\xa4\xa0\xb3\xa4\x3f\x53\x50\xe8",
        // "CFArrayAppendValue" / M(Rot) / S(229) / L(18)
        "\x28\x2b\x26\x57\x57\x46\x5e\x26\x55\x55\x4a\x53\x49\x3b\x46\x51\x5a\x4a\xe5",
        // "" / M(None) / S(0) / L(0)
        "\x0a\x7b\x3b\xfd\x65\xaa\x6c\x09\xc0\x02\x8c\xea\x73\x6f\x55\xc5\x17\xfd\x0c\x9b\x5c\xf9\xe1\xee\xbe\x77\x3d\xd6\x23\xc8\x75\xc5",
        // "" / M(None) / S(0) / L(0)
        "\x71\xa6\x40\x8a\x07\xba\xb3\x3d\x77\x40\x8b\xa9\x1e\x12\xec\x89\xde\xa4\x3f\x85\xb4\x52\xeb\x14\x50\x5d\x30\xf3\x76\x0a\x9a\x6a",
        // "" / M(None) / S(0) / L(0)
        "\x47\x1b\x6f\x36\x1a\x9d\xf6\x01\x74\x41\xe7\xda\x0e\x83\x46\x92\x50\x32\x55\x5a\x78\xb2\x95\x25\x2f\x79\xaf\x13\x6c\xa3\xd2\x8d",
        // "" / M(None) / S(0) / L(0)
        "\x08\xbd\x83\x02\xae\x14\x46\x00\xf1\x75\x15\xaf\xf8\x55\x10\x6d\xb9\x10\x79\x7e\xcc\xdc\x59\xb6\x05\x1d\x86\x18\x8d\x71\x76\x39",
        // "" / M(None) / S(0) / L(0)
        "\x55\x62\xee\x30\x87\x73\xd8\xdc\x7a\xe6\x1d\x62\xe6\x28\x18\x0a\xe0\xec\x49\xfb\x02\x05\x9e\xd0\x42\x4f\xc5\x19\xe9\xf7\xae\xf7",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(33) / L(24)
        "\x01\x04\x00\x37\x2c\x26\x2e\x27\x17\x2c\x2e\x2d\x23\x26\x07\x3a\x27\x21\x37\x36\x23\x20\x2e\x27\x42\x6f\x27\x9f\x42\x5a\x05\x82\x5f",
        // "objc_msgSend" / M(Rot) / S(88) / L(12)
        "\xc7\xba\xc2\xbb\xb7\xc5\xcb\xbf\xab\xbd\xc6\xbc\x58\xd7\xbe\x47",
        // "" / M(None) / S(0) / L(0)
        "\x50\xd0\xdf\x81\xa9\x51\xd8\x57\x39\xb2\xa7\x0e\xe7\xc3\x92\xd3\x74\x2d\x49\xdb\x4e\x48\x4f\xf2\xa0\xff\xfb\xe5\xea\x71\x37\x28",
        // "" / M(None) / S(0) / L(0)
        "\x44\x1d\x0b\x33\x93\x7c\x27\xcf\x2b\xdf\x18\xf8\x9f\x31\x6d\xa1\x18\x40\x10\x2f\x91\x5c\x71\x13\xd9\x28\x83\xf2\xeb\xb9\x58\x52",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(219) / L(35)
        "\x98\x9d\x9f\xba\xaf\xbe\x9d\xb4\xa9\xb6\xba\xaf\xaf\xbe\xa9\x98\xa9\xbe\xba\xaf\xbe\x9f\xba\xaf\xbe\x9d\xa9\xb4\xb6\x88\xaf\xa9\xb2\xb5\xbc\xdb",
        // "" / M(None) / S(0) / L(0)
        "\x53\xed\x65\xb2\x7c\x63\x91\x4b\xbd\xc9\xb4\xe4\x07\x7c\x34\x28\xe4\x39\x01\x00\x0d\xb9\x44\xa1\xbf\x55\x17\xfd\xf2\x48\x1d\x99",
        // "EVP_DigestFinal" / M(Xor4) / S(39) / L(15)
        "\x35\x26\x20\x2f\x34\x19\x17\x15\x03\x04\x36\x19\x1e\x11\x1c\x70",
        // "CFDataAppendBytes" / M(Rot) / S(97) / L(17)
        "\xa4\xa7\xa5\xc2\xd5\xc2\xa2\xd1\xd1\xc6\xcf\xc5\xa3\xda\xd5\xc6\xd4\x61",
        // "CFReadStreamOpen" / M(Xor1) / S(200) / L(16)
        "\x8b\x8e\x9a\xad\xa9\xac\x9b\xbc\xba\xad\xa9\xa5\x87\xb8\xad\xa6\xc8",
        // "" / M(None) / S(0) / L(0)
        "\x21\xa5\x56\x09\x9b\xfa\x1a\x22\x53\x6c\xf0\x58\xe7\x3e\xf8\xe2\xf1\xee\x19\xb7\xb7\x69\xf3\xf5\x64\x76\x8b\xbd\x99\x4c\xfa\x8f",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(110) / L(29)
        "\xff\xd7\xd2\xc0\xed\xe4\xf1\xd0\xfd\xf7\xe0\xfd\xfb\xfa\xf5\xe6\xed\xdf\xf1\xed\xd7\xf5\xf8\xf8\xd6\xf5\xf7\xff\xe7\x94\xef\x6c\x2f\x6e\xf6\x79\xfb\x57",
        // "CFDateFormatterCreate" / M(Xor1) / S(57) / L(21)
        "\x7a\x7f\x7d\x58\x4d\x5c\x7f\x56\x4b\x54\x58\x4d\x4d\x5c\x4b\x7a\x4b\x5c\x58\x4d\x5c\x39",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(10) / L(26)
        "\x49\x4c\x58\x6f\x6b\x6e\x59\x7e\x78\x6f\x6b\x67\x49\x78\x6f\x6b\x7e\x6f\x5d\x63\x7e\x62\x4c\x63\x66\x6f\x0a\xb2\xcc\x7b\xa9\xc7\xe9\xd1\x32",
        // "CFRelease" / M(Rot) / S(54) / L(9)
        "\x79\x7c\x88\x9b\xa2\x9b\x97\xa9\x9b\x36\xc9\xe0\xc6\x9d\xae\x27",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(215) / L(66)
        "\x6a\x16\x3c\x36\x31\x20\x28\x6a\x09\x2c\x27\x37\x24\x37\x3c\x6a\x03\x37\x24\x28\x20\x32\x2a\x37\x2e\x36\x6a\x06\x2a\x37\x20\x03\x2a\x30\x2b\x21\x24\x31\x2c\x2a\x2b\x6b\x23\x37\x24\x28\x20\x32\x2a\x37\x2e\x6a\x06\x2a\x37\x20\x03\x2a\x30\x2b\x21\x24\x31\x2c\x2a\x2b\x45",
        // "" / M(None) / S(0) / L(0)
        "\x20\xdc\x75\x03\xbb\xbe\x0b\xb7\xe1\xc0\x43\xae\xd2\x98\x5d\x99\x1c\xaa\xc7\x44\x28\x3a\x43\xe6\x3f\xff\xc6\xb1\x41\x7d\x40\x97",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(171) / L(36)
        "\xcd\xc8\xcc\xfb\xe0\xea\xe2\xeb\xc9\xeb\xfa\xd8\xef\xe2\xfb\xeb\xc8\xe1\xfc\xc7\xe0\xe8\xe1\xca\xe7\xed\xfa\xe7\xe1\xe0\xef\xfc\xf7\xc5\xeb\xf7\x8e",
        // "strncmp" / M(Xor4) / S(10) / L(7)
        "\xd3\xd4\xd2\xce\xc3\xcd\xd0\xa0\xa9\x68\x2e\x36\x74\x6c\xdb\x6c",
        // "" / M(None) / S(0) / L(0)
        "\x63\xfb\xf5\x5b\x2b\xd1\x82\xb0\x9e\xaf\x77\x34\x1b\xfb\x26\x3e\x1f\xe4\xe6\xe3\x75\xa7\xc7\x1a\x11\xe9\x6c\x18\x45\x2a\x57\x32",
        // "X509_digest" / M(Xor3) / S(87) / L(11)
        "\x3f\x52\x57\x5e\x38\x03\x0e\x00\x02\x14\x13\x67\xcc\x05\x21\x37",
        // "CFDateFormatterCreate" / M(Rot) / S(9) / L(21)
        "\x4c\x4f\x4d\x6a\x7d\x6e\x4f\x78\x7b\x76\x6a\x7d\x7d\x6e\x7b\x4c\x7b\x6e\x6a\x7d\x6e\x09",
        // "" / M(None) / S(0) / L(0)
        "\xaa\xbd\x4c\x15\xde\xf9\xf6\x7b\xe2\xdd\x86\xa4\x81\xf5\x6b\x29\xfd\x59\x95\xe9\x1e\x10\xe3\xe2\x5e\x0b\xb8\xa9\xfd\x69\x45\x9a",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(64) / L(24)
        "\x03\x06\x01\x22\x33\x2f\x2c\x35\x34\x25\x14\x29\x2d\x25\x07\x25\x34\x03\x35\x32\x32\x25\x2e\x34\x40\x8f\x70\x3d\xa2\x28\x4d\x77\xd4",
        // "BIO_write" / M(Xor3) / S(156) / L(9)
        "\xee\xe5\xe3\xf3\xdb\xde\xc5\xd8\xc9\xac\x63\x5c\x63\x33\xad\x72",
        // "CFDataCreateMutable" / M(Xor1) / S(151) / L(19)
        "\xd4\xd1\xd3\xf6\xe3\xf6\xd4\xe5\xf2\xf6\xe3\xf2\xda\xe2\xe3\xf6\xf5\xfb\xf2\x97",
        // "CFDictionaryGetValue" / M(Rot) / S(184) / L(20)
        "\xfb\xfe\xfc\x21\x1b\x2c\x21\x27\x26\x19\x2a\x31\xff\x1d\x2c\x0e\x19\x24\x2d\x1d\xb8",
        // "CFDataAppendBytes" / M(Xor3) / S(62) / L(17)
        "\x13\x16\x14\x31\x24\x31\x11\x20\x20\x35\x3e\x34\x12\x29\x24\x35\x23\x50",
        // "objc_msgSend" / M(Xor1) / S(231) / L(12)
        "\x88\x85\x8d\x84\xb8\x8a\x94\x80\xb4\x82\x89\x83\xe7\x98\xb3\xbb",
        // "X509_STORE_free" / M(Xor4) / S(81) / L(15)
        "\x48\x25\x20\x29\x4f\x43\x44\x5f\x42\x55\x4f\x76\x62\x75\x75\x10",
        // "" / M(None) / S(0) / L(0)
        "\xe1\xe1\xf6\xca\x33\xfe\x74\xb9\x10\xea\x0c\x0f\x1d\x92\x01\xa1\xf6\x06\x90\xd7\x68\x01\x5f\x65\xe0\x1b\xb9\x56\x0c\x6c\x94\xc8",
        // "kCFTypeArrayCallBacks" / M(Rot) / S(154) / L(21)
        "\x05\xdd\xe0\xee\x13\x0a\xff\xdb\x0c\x0c\xfb\x13\xdd\xfb\x06\x06\xdc\xfb\xfd\x05\x0d\x9a",
        // "currentDevice" / M(Rot) / S(65) / L(13)
        "\xa4\xb6\xb3\xb3\xa6\xaf\xb5\x85\xa6\xb7\xaa\xa4\xa6\x41\x36\x64",
        // "24" / M(Xor1) / S(15) / L(2)
        "\x3d\x3b\x0f\x6c\x09\x08\x8b\x7f\x7b\xe8\x52\x1a\x6c\x97\xf6\x2e",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(242) / L(39)
        "\xb1\xb4\xa6\x9b\x9f\x97\xa8\x9d\x9c\x97\xb1\x80\x97\x93\x86\x97\xa5\x9b\x86\x9a\xa6\x9b\x9f\x97\xbb\x9c\x86\x97\x80\x84\x93\x9e\xb4\x80\x9d\x9f\xb5\xbf\xa6\xf2\x44\x11\xa9\x58\x8e\x3e\x81\xf7",
        // "X509_free" / M(Rot) / S(66) / L(9)
        "\x9a\x77\x72\x7b\xa1\xa8\xb4\xa7\xa7\x42\xab\x55\xfe\xf9\x38\xde",
        // "CFStringCompare" / M(Rot) / S(40) / L(15)
        "\x6b\x6e\x7b\x9c\x9a\x91\x96\x8f\x6b\x97\x95\x98\x89\x9a\x8d\x28",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(158) / L(36)
        "\xe1\xe4\xe0\x13\x0c\x02\x0a\x03\xe5\x03\x12\xf4\xff\x0a\x13\x03\xe4\x0d\x10\xe7\x0c\x04\x0d\xe2\x07\x01\x12\x07\x0d\x0c\xff\x10\x17\xe9\x03\x17\x9e",
        // "sk_free" / M(Xor3) / S(95) / L(7)
        "\x1c\x04\x30\x09\x1d\x0a\x0a\x6f\x21\xa5\x56\x09\x9b\xfa\x1a\x22",
        // "CFDataGetBytePtr" / M(Xor1) / S(171) / L(16)
        "\xe8\xed\xef\xca\xdf\xca\xec\xce\xdf\xe9\xd2\xdf\xce\xfb\xdf\xd9\xab",
        // "currentDevice" / M(Xor3) / S(47) / L(13)
        "\x5c\x4a\x4d\x4d\x5a\x51\x4b\x7b\x5a\x49\x56\x5c\x5a\x3f\x2a\x34",
        // "RTLD_MAIN_ONLY" / M(Xor1) / S(42) / L(14)
        "\x78\x7e\x66\x6e\x75\x67\x6b\x63\x64\x75\x65\x64\x66\x73\x2a\x2c",
        // "" / M(None) / S(0) / L(0)
        "\x38\x9c\x08\xa9\x84\x6d\x4e\x8e\x24\xe7\x60\x2a\x10\x44\xfc\xb5\xdd\x59\x18\xf7\x77\x21\x01\x85\x2b\x25\x75\x49\x6b\xa1\xeb\xf5",
        // "com.treasurebox.gear.ios" / M(Xor1) / S(199) / L(24)
        "\xa4\xa8\xaa\xe9\xb3\xb5\xa2\xa6\xb4\xb2\xb5\xa2\xa5\xa8\xbf\xe9\xa0\xa2\xa6\xb5\xe9\xae\xa8\xb4\xc7\x3d\x5f\xee\xfc\xaf\x49\xfc\x0e",
        // "CFReadStreamClose" / M(Xor1) / S(61) / L(17)
        "\x7e\x7b\x6f\x58\x5c\x59\x6e\x49\x4f\x58\x5c\x50\x7e\x51\x52\x4e\x58\x3d",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(65) / L(40)
        "\x77\x72\x72\xa6\x76\xa3\x77\x77\x73\xa4\x76\x7a\x74\xa2\x71\x79\xa7\xa7\x76\x79\xa5\x72\x75\xa2\xa6\x73\x73\x75\x76\x73\xa5\x72\x7a\x79\xa5\xa7\x77\xa4\x77\x71\x41\xef\x97\x60\xca\x05\x3b\xc9\xf1",
        // "CFDataCreate" / M(Xor4) / S(146) / L(12)
        "\x63\x66\x64\x41\x54\x41\x63\x52\x45\x41\x54\x45\x20\xe4\xe3\x03",
        // "appStoreReceiptURL" / M(Xor4) / S(248) / L(18)
        "\x09\x18\x18\x3b\x1c\x07\x1a\x0d\x3a\x0d\x0b\x0d\x01\x18\x1c\x3d\x3a\x24\x68",
        // "ASN1_INTEGER_get" / M(Xor1) / S(1) / L(16)
        "\x40\x52\x4f\x30\x5e\x48\x4f\x55\x44\x46\x44\x53\x5e\x66\x64\x75\x01",
        // "ASN1_get_object" / M(Xor4) / S(221) / L(15)
        "\x91\x83\x9e\xe1\x8f\xb7\xb5\xa4\x8f\xbf\xb2\xba\xb5\xb3\xa4\xd0",
        // "CFDictionarySetValue" / M(Xor3) / S(47) / L(20)
        "\x07\x02\x00\x2d\x27\x30\x2d\x2b\x2a\x25\x36\x3d\x17\x21\x30\x12\x25\x28\x31\x21\x44",
        // "EVP_DigestUpdate" / M(Rot) / S(167) / L(16)
        "\xec\xfd\xf7\x06\xeb\x10\x0e\x0c\x1a\x1b\xfc\x17\x0b\x08\x1b\x0c\xa7",
        // "sk_num" / M(Rot) / S(58) / L(6)
        "\xad\xa5\x99\xa8\xaf\xa7\x3a\xe0\x81\x5a\xcf\xb9\x19\x5a\x37\x6d",
        // "d2i_PKCS7_bio" / M(Xor4) / S(36) / L(13)
        "\x24\x72\x29\x1f\x10\x0b\x03\x13\x77\x1f\x22\x29\x2f\x40\x15\xd6",
        // "ASN1_get_object" / M(Xor3) / S(63) / L(15)
        "\x0e\x1c\x01\x7e\x10\x28\x2a\x3b\x10\x20\x2d\x25\x2a\x2c\x3b\x4f",
        // "CFDictionaryGetValue" / M(Xor1) / S(45) / L(20)
        "\x6e\x6b\x69\x44\x4e\x59\x44\x42\x43\x4c\x5f\x54\x6a\x48\x59\x7b\x4c\x41\x58\x48\x2d",
        // "CFReadStreamOpen" / M(Rot) / S(250) / L(16)
        "\x3d\x40\x4c\x5f\x5b\x5e\x4d\x6e\x6c\x5f\x5b\x67\x49\x6a\x5f\x68\xfa",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(30) / L(22)
        "\x9d\xc7\xc1\xc0\x9d\xde\xdb\xd0\x9d\xde\xdb\xd0\xdd\xd0\xd8\xd1\x9c\xd6\xcb\xde\xdb\xd0\xb2",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(181) / L(26)
        "\xd5\xd0\xd2\xf7\xe2\xf3\xd0\xf9\xe4\xfb\xf7\xe2\xe2\xf3\xe4\xc5\xf3\xe2\xc6\xe4\xf9\xe6\xf3\xe4\xe2\xef\x96\x90\x7d\xcc\x52\x63\x55\x82\x40",
        // "init" / M(Xor1) / S(88) / L(4)
        "\x31\x36\x31\x2c\x58\x64\xa9\x49\x1b\xf5\xed\x19\xe7\xb1\x53\xa1",
        // "dlopen" / M(Xor4) / S(44) / L(6)
        "\xa4\xac\xaf\xb0\xa5\xae\xc0\xba\xc0\x1d\x72\xf4\xe1\x99\x02\xd9",
        // "X509_STORE_add_cert" / M(Rot) / S(230) / L(19)
        "\x3e\x1b\x16\x1f\x45\x39\x3a\x35\x38\x2b\x45\x47\x4a\x4a\x45\x49\x4b\x58\x5a\xe6",
        // "" / M(None) / S(0) / L(0)
        "\xb7\x9f\x08\x95\x5a\x98\x7f\x12\x33\xb8\x05\x1a\x53\x4c\xab\x7c\x46\x21\xfe\xb6\xe8\xf4\x1f\xb8\x3b\xf6\x69\xa0\xf6\xd1\xe7\x67",
        // "X509_free" / M(Xor3) / S(45) / L(9)
        "\x65\x08\x0d\x04\x62\x5b\x4f\x58\x58\x3d\xeb\x98\x67\x13\xa1\xf8",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(192) / L(25)
        "\xd8\xb5\xb0\xb9\xdf\xce\xc1\xcd\xc5\xdf\xe7\xe5\xf4\xdf\xf4\xe5\xf8\xf4\xdf\xe2\xf9\xdf\xce\xc9\xc4\x80\x44\xd1\x92\x6f\x43\x83\xe3\xa0",
        // "EVP_MD_CTX_init" / M(Xor2) / S(233) / L(15)
        "\xbc\xaf\xa9\xa6\xb4\xbd\xa6\xba\xad\xa1\xa6\x90\x97\x90\x8d\xf9",
        // "CFDateFormatterSetProperty" / M(Xor4) / S(255) / L(26)
        "\x9e\x9b\x99\xbc\xa9\xb8\x9b\xb2\xaf\xb0\xbc\xa9\xa9\xb8\xaf\x8e\xb8\xa9\x8d\xaf\xb2\xad\xb8\xaf\xa9\xa4\xdd\xca\x62\x1d\x71\x62\x8a\xfc\xd3",
        // "objc_lookUpClass" / M(Xor2) / S(101) / L(16)
        "\x1b\x16\x1e\x17\x2b\x18\x1b\x1b\x1f\x21\x04\x37\x18\x15\x07\x07\x74",
        // "24" / M(Xor4) / S(249) / L(2)
        "\xa2\xa4\x90\xc9\xd9\xf3\xfc\x87\xd9\x22\xea\xfd\xac\xc2\xe7\x57",
        // "" / M(None) / S(0) / L(0)
        "\x71\xa0\xbd\x98\x2e\x60\x7b\xdf\xae\xde\x34\x53\x68\x62\xe7\x55\x63\x82\x0e\x72\x63\xde\xc2\x61\x0e\xf7\x8c\x85\x2d\xe0\x5d\xf2",
        // "SHA1_Update" / M(Xor2) / S(172) / L(11)
        "\xef\xf4\xfd\x8d\xe3\xe9\xcc\xd8\xdd\xc8\xd9\xbc\x8b\x73\xb8\x0b",
        // "setDelegate:" / M(Xor4) / S(15) / L(12)
        "\x83\x95\x84\xb4\x95\x9c\x95\x97\x91\x84\x95\xca\xf0\xed\x0b\xff",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(60) / L(59)
        "\x4e\x49\x42\x49\x3d\x42\x4d\x3a\x42\x4e\x4e\x42\x4a\x3b\x42\x4d\x41\x42\x4b\x39\x42\x48\x40\x42\x3e\x3e\x42\x4d\x40\x42\x3c\x49\x42\x4c\x39\x42\x3d\x4a\x42\x4a\x4c\x42\x4d\x4a\x42\x3c\x49\x42\x41\x40\x42\x3c\x3e\x42\x4e\x3b\x42\x4e\x48\x78\x4d\x55\xfe\x22\x48\xa4\x9a\xa0",
        // "getUUIDBytes:" / M(Xor4) / S(134) / L(13)
        "\x07\x05\x14\x35\x35\x29\x24\x22\x19\x14\x05\x13\x5a\x60\xe9\x55",
        // "CFDataGetBytePtr" / M(Xor3) / S(110) / L(16)
        "\x3c\x39\x3b\x1e\x0b\x1e\x38\x1a\x0b\x3d\x06\x0b\x1a\x2f\x0b\x0d\x7f",
        // "" / M(None) / S(0) / L(0)
        "\x80\xf7\x1b\xc8\x6d\xbe\x97\x8c\xe2\xa8\x4d\x03\xe2\xcc\x79\x40\xc0\xfb\x6d\xf6\x9a\xc9\xc5\xaf\xee\x03\x10\xde\x8b\x41\x2d\x69",
        // "SHA1_Init" / M(Rot) / S(98) / L(9)
        "\xb5\xaa\xa3\x93\xc1\xab\xd0\xcb\xd6\x62\x58\x74\x98\x43\xb0\x01",
        // "CFDictionarySetValue" / M(Xor1) / S(43) / L(20)
        "\x68\x6d\x6f\x42\x48\x5f\x42\x44\x45\x4a\x59\x52\x78\x4e\x5f\x7d\x4a\x47\x5e\x4e\x2b",
        // "dlsym" / M(Xor4) / S(195) / L(5)
        "\x54\x5c\x43\x49\x5d\x30\xc2\x65\x5d\x01\x3e\x5f\x0a\x74\xd3\xe8",
        // "PKCS7_get0_signers" / M(Xor2) / S(73) / L(18)
        "\x0a\x11\x19\x09\x6d\x05\x3d\x3f\x2e\x6a\x05\x29\x33\x3d\x34\x3f\x28\x29\x5a",
        // "getUUIDBytes:" / M(Rot) / S(195) / L(13)
        "\x2a\x28\x37\x18\x18\x0c\x07\x05\x3c\x37\x28\x36\xfd\xc3\x97\x09",
        // "CFDateCompare" / M(Xor3) / S(93) / L(13)
        "\x2e\x2b\x29\x0c\x19\x08\x2e\x02\x00\x1d\x0c\x1f\x08\x6d\x3f\x0f",
        // "ASN1_OBJECT_free" / M(Rot) / S(20) / L(16)
        "\x55\x67\x62\x45\x73\x63\x56\x5e\x59\x57\x68\x73\x7a\x86\x79\x79\x14",
        // "CC_SHA1_Final" / M(Xor1) / S(18) / L(13)
        "\x51\x51\x4d\x41\x5a\x53\x23\x4d\x54\x7b\x7c\x73\x7e\x12\x11\xe3",
        // "" / M(None) / S(0) / L(0)
        "\x96\x8a\x73\x72\xda\x3e\xa2\x48\xaf\xa7\x59\x97\xa3\xb6\xaa\x4b\xe4\x08\x18\x5e\x69\x1d\x0b\x83\x77\x2a\xa8\x85\x11\x1d\x50\xa8",
        // "X509_STORE_new" / M(Xor3) / S(70) / L(14)
        "\x0e\x63\x66\x6f\x09\x05\x02\x19\x04\x13\x09\x38\x33\x21\x56\xdc",
        // "longjmp" / M(Xor4) / S(233) / L(7)
        "\xfc\xff\xfe\xf7\xfa\xfd\xe0\x90\xa1\xfb\x6f\x30\x56\xeb\x0d\x89",
        // "" / M(None) / S(0) / L(0)
        "\x61\x50\x43\xb0\xd1\x8e\x6c\xec\x49\x96\xfa\x72\x3c\xc0\x65\x04\x53\x1d\x28\xc8\x2c\x00\x0d\xfd\x36\x59\x44\xbb\x9e\xc4\x09\x88",
        // "CFStringCompare" / M(Xor2) / S(119) / L(15)
        "\x24\x21\x34\x13\x15\x0e\x09\x00\x24\x08\x0a\x17\x06\x15\x02\x67",
        // "" / M(None) / S(0) / L(0)
        "\x51\x1d\xba\xfd\x98\xfe\xd6\x20\x3d\x46\xb2\xff\x61\x88\x6e\x0e\x30\xb4\xd2\x52\xb2\x63\x54\xfa\x07\xb6\xef\xd0\xe4\x31\xf7\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x02\x92\x83\x48\x95\xe4\xdd\xd4\xf8\xd4\xa3\x01\x15\x9f\x8c\xac\x29\x26\x38\x9a\xa6\xf1\xaa\x32\xcf\x0e\x6e\x95\xdb\xc3\x21\xb0",
        // "d2i_PKCS7_bio" / M(Xor1) / S(71) / L(13)
        "\x23\x75\x2e\x18\x17\x0c\x04\x14\x70\x18\x25\x2e\x28\x47\xfe\xd5",
        // "strlen" / M(Xor3) / S(183) / L(6)
        "\xb4\xb3\xb5\xab\xa2\xa9\xc7\x05\x73\x38\xee\x46\xd1\x7b\xfb\x23",
        // "CFStringCreateWithCString" / M(Xor4) / S(58) / L(25)
        "\xf7\xf2\xe7\xc0\xc6\xdd\xda\xd3\xf7\xc6\xd1\xd5\xc0\xd1\xe3\xdd\xc0\xdc\xf7\xe7\xc0\xc6\xdd\xda\xd3\xb4\xac\x40\x9d\x97\x74\x97\xfc\x01",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(230) / L(16)
        "\x25\x74\x2f\x19\x07\x15\x08\x77\x19\x0f\x08\x12\x03\x01\x03\x14\x46",
        // "objc_getClass" / M(Xor3) / S(69) / L(13)
        "\x3a\x37\x3f\x36\x0a\x32\x30\x21\x16\x39\x34\x26\x26\x55\x3d\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x10\x85\x62\xf7\x50\x63\xa7\x0a\x7b\xf3\x1e\xf7\x95\xfd\x04\xf4\xa2\x5a\x72\x06\x7e\x48\xb2\xb7\x8b\xcd\x60\x43\xee\xff\x50\x41",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(120) / L(39)
        "\x3b\x3e\x2c\x11\x15\x1d\x22\x17\x16\x1d\x3b\x0a\x1d\x19\x0c\x1d\x2f\x11\x0c\x10\x2c\x11\x15\x1d\x31\x16\x0c\x1d\x0a\x0e\x19\x14\x3e\x0a\x17\x15\x3f\x35\x2c\x78\x02\x2d\x93\xca\x7e\x0e\x7b\x19",
        // "CFBundleGetMainBundle" / M(Xor1) / S(122) / L(21)
        "\x39\x3c\x38\x0f\x14\x1e\x16\x1f\x3d\x1f\x0e\x37\x1b\x13\x14\x38\x0f\x14\x1e\x16\x1f\x7a",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(62) / L(25)
        "\x44\x29\x2c\x25\x43\x52\x5d\x51\x59\x43\x7b\x79\x68\x43\x68\x79\x64\x68\x43\x7e\x65\x43\x52\x55\x58\x1c\x5f\x65\xe0\x1b\xb9\x56\xc8\x94",
        // "" / M(None) / S(0) / L(0)
        "\xda\x59\x62\x9c\x9e\xb9\x50\x3f\x76\xbe\x6c\x2d\x1f\xaf\xed\x36\x33\x6a\x3a\xf6\xfc\xfc\x22\x95\x15\x06\x49\x41\x45\x7a\x72\x66",
        // "Apple Root CA" / M(Xor3) / S(13) / L(13)
        "\x5c\x6d\x6d\x71\x78\x3d\x4f\x72\x72\x69\x3d\x5e\x5c\x1d\x0c\xa5",
        // "%02X" / M(Xor1) / S(212) / L(4)
        "\xf1\xe4\xe6\x8c\xd4\x3e\xb8\x6d\x14\xd9\x34\xbc\xf1\xb9\x57\xd2",
        // "24" / M(Xor2) / S(167) / L(2)
        "\x85\x83\xb7\x85\x2d\xe0\x5d\xf2\x80\xf7\x1b\xc8\x6d\xbe\x97\x8c",
        // "exit" / M(Xor4) / S(208) / L(4)
        "\x65\x78\x69\x74\x00\xfd\x13\x94\xb1\x67\xe6\xf0\x09\x66\xa0\x0e",
        // "" / M(None) / S(0) / L(0)
        "\x82\x59\x8c\x6e\xf0\x22\x50\xc4\x8b\x2b\x4b\x2e\x79\x92\x0c\x89\xa8\x38\x81\xba\x3d\xc7\xbc\x73\x0e\x64\x92\x38\x4d\x55\xfe\x22",
        // "CFDateCreate" / M(Xor1) / S(23) / L(12)
        "\x54\x51\x53\x76\x63\x72\x54\x65\x72\x76\x63\x72\x17\xef\x8d\xfd",
        // "CFDataCreate" / M(Xor1) / S(173) / L(12)
        "\xee\xeb\xe9\xcc\xd9\xcc\xee\xdf\xc8\xcc\xd9\xc8\xad\xda\x77\x35",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(56) / L(35)
        "\x7b\x7e\x7c\x99\xac\x9d\x7e\xa7\xaa\xa5\x99\xac\xac\x9d\xaa\x7b\xaa\x9d\x99\xac\x9d\x7c\x99\xac\x9d\x7e\xaa\xa7\xa5\x8b\xac\xaa\xa1\xa6\x9f\x38",
        // "X509_STORE_add_cert" / M(Xor3) / S(91) / L(19)
        "\x37\x5a\x5f\x56\x30\x3c\x3b\x20\x3d\x2a\x30\x0e\x0b\x0b\x30\x0c\x0a\x1d\x1b\x6f",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(151) / L(59)
        "\xe5\xe2\xe9\xe2\x96\xe9\xe6\x91\xe9\xe5\xe5\xe9\xe1\x90\xe9\xe6\xea\xe9\xe0\x92\xe9\xe3\xeb\xe9\x95\x95\xe9\xe6\xeb\xe9\x97\xe2\xe9\xe7\x92\xe9\x96\xe1\xe9\xe1\xe7\xe9\xe6\xe1\xe9\x97\xe2\xe9\xea\xeb\xe9\x97\x95\xe9\xe5\x90\xe9\xe5\xe3\xd3\xca\x18\xc3\x30\x92\xbc\xd2\x95",
        // "dlopen" / M(Xor4) / S(49) / L(6)
        "\x74\x7c\x7f\x60\x75\x7e\x10\xda\xb6\x05\x2f\xbb\xe7\xfe\x71\x98",
        // "longjmp" / M(Xor4) / S(220) / L(7)
        "\xac\xaf\xae\xa7\xaa\xad\xb0\xc0\x9a\x44\xd0\xf2\xfe\x70\xaa\xc0",
        // "X509_STORE_free" / M(Rot) / S(67) / L(15)
        "\x9b\x78\x73\x7c\xa2\x96\x97\x92\x95\x88\xa2\xa9\xb5\xa8\xa8\x43",
        // "" / M(None) / S(0) / L(0)
        "\x48\xa4\x9a\xa0\xc8\x3f\x8e\x09\x88\xb8\x15\xd2\xfa\xfb\xca\x80\x00\xd7\x0f\x87\x06\xa5\x4d\x8b\xd4\x89\xfe\x58\xda\x32\x2d\xe4",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(84) / L(32)
        "\xcd\xcd\xcd\xcd\x7b\x81\x7b\xa1\xa1\x7b\x81\x7b\xb8\xb8\x7b\xa8\x7b\x9c\x9c\x7b\x8e\x7b\xc1\xc1\x7b\x8e\x7b\xc7\xc7\x7b\xae\x7b\x54",
        // "SHA1_Update" / M(Xor3) / S(120) / L(11)
        "\xdb\xc0\xc9\xb9\xd7\xdd\xf8\xec\xe9\xfc\xed\x88\x0d\xb9\x44\xa1",
        // "" / M(None) / S(0) / L(0)
        "\x33\x8a\xbb\x80\xa2\xc5\x7a\x63\xf2\x17\xa4\x7c\x99\xef\x97\x60\xca\x05\x3b\xc9\x82\x06\x92\xf1\x37\x13\x88\x25\x96\xdc\x74\xfd",
        // "BIO_s_mem" / M(Xor3) / S(167) / L(9)
        "\xf5\xfe\xf8\xe8\xc4\xe8\xda\xd2\xda\xb7\x86\x8f\x24\x7c\xb7\x0b",
        // "BIO_write" / M(Xor4) / S(86) / L(9)
        "\x22\x29\x2f\x3f\x17\x12\x09\x14\x05\x60\x7c\x6a\x79\x60\x45\x84",
        // "CFDataGetLength" / M(Rot) / S(214) / L(15)
        "\x19\x1c\x1a\x37\x4a\x37\x1d\x3b\x4a\x22\x3b\x44\x3d\x4a\x3e\xd6",
        // "sel_registerName" / M(Xor4) / S(230) / L(16)
        "\x35\x23\x2a\x19\x34\x23\x21\x2f\x35\x32\x23\x34\x08\x27\x2b\x23\x46",
        // "" / M(None) / S(0) / L(0)
        "\xdf\x4e\x20\x5f\x3a\x38\x62\xfb\x8d\xcb\xbf\xbf\x0e\x10\xc5\xe8\x84\x5c\x77\x48\x13\xc7\xca\xf1\xd6\x9c\xc3\xc6\xb7\x66\x7a\xf4",
        // "ASN1_INTEGER_free" / M(Xor2) / S(63) / L(17)
        "\x6c\x7e\x63\x1c\x72\x64\x63\x79\x68\x6a\x68\x7f\x72\x4b\x5f\x48\x48\x2d",
        // "appStoreReceiptURL" / M(Xor3) / S(133) / L(18)
        "\xf9\xe8\xe8\xcb\xec\xf7\xea\xfd\xca\xfd\xfb\xfd\xf1\xe8\xec\xcd\xca\xd4\x98",
        // "CFBundleShortVersionString" / M(Rot) / S(20) / L(26)
        "\x57\x5a\x56\x89\x82\x78\x80\x79\x67\x7c\x83\x86\x88\x6a\x79\x86\x87\x7d\x83\x82\x67\x88\x86\x7d\x82\x7b\x14\xc9\x99\xee\x7b\xa6\x83\xec\x32",
        // "CFReadStreamRead" / M(Xor4) / S(91) / L(16)
        "\x48\x4d\x59\x6e\x6a\x6f\x58\x7f\x79\x6e\x6a\x66\x59\x6e\x6a\x6f\x0b",
        // "" / M(None) / S(0) / L(0)
        "\xcc\xf1\x6a\xa1\x74\x60\x57\x16\x67\x44\xae\x21\x59\xba\x10\x3e\xd5\xb2\xc0\xf8\x8e\xe6\x96\xa0\x68\x24\xc8\x5a\x6f\xbe\x31\x6f",
        // "CFBundleShortVersionString" / M(Xor3) / S(160) / L(26)
        "\x80\x85\x81\xb6\xad\xa7\xaf\xa6\x90\xab\xac\xb1\xb7\x95\xa6\xb1\xb0\xaa\xac\xad\x90\xb7\xb1\xaa\xad\xa4\xc3\xa2\x30\x21\x96\xf0\xe0\x9c\xc5",
        // "" / M(None) / S(0) / L(0)
        "\x27\xf2\xfb\xd0\x99\x6b\xf8\x86\x38\xef\x1f\xc5\x80\xfb\xa5\xba\x49\x3e\x38\x27\x65\xb9\xf8\xe6\x3d\xa8\x84\x9d\xe9\xde\xc9\x73",
        // "CFArrayAppendValue" / M(Xor1) / S(229) / L(18)
        "\xa6\xa3\xa4\x97\x97\x84\x9c\xa4\x95\x95\x80\x8b\x81\xb3\x84\x89\x90\x80\xe5",
        // "" / M(None) / S(0) / L(0)
        "\x53\x73\xb9\xd0\x84\x35\x06\x3e\x64\x01\x09\xb8\x58\x55\x70\xfc\x23\xb1\x2f\x1f\xbb\x40\x66\xef\x13\x6f\x17\x22\x80\x09\x8e\x2c",
        // "sk_num" / M(Rot) / S(219) / L(6)
        "\x4e\x46\x3a\x49\x50\x48\xdb\xa2\xab\x3e\x5c\x6c\x81\x9d\x6c\x91",
        // "BIO_free" / M(Rot) / S(243) / L(8)
        "\x35\x3c\x42\x52\x59\x65\x58\x58\xf3\x99\xe5\x6d\xa7\xd0\x35\x9b",
        // "CFDictionaryGetValue" / M(Xor2) / S(223) / L(20)
        "\x89\x8c\x8e\xa3\xa9\xbe\xa3\xa5\xa4\xab\xb8\xb3\x8d\xaf\xbe\x9c\xab\xa6\xbf\xaf\xca",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(245) / L(59)
        "\x22\x25\x2e\x25\x71\x2e\x21\x76\x2e\x22\x22\x2e\x26\x77\x2e\x21\x2d\x2e\x27\x75\x2e\x24\x2c\x2e\x72\x72\x2e\x21\x2c\x2e\x70\x25\x2e\x20\x75\x2e\x71\x26\x2e\x26\x20\x2e\x21\x26\x2e\x70\x25\x2e\x2d\x2c\x2e\x70\x72\x2e\x22\x77\x2e\x22\x24\x14\xa7\xa5\x00\x38\xf0\x72\x43\xc1",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(204) / L(26)
        "\xa7\xa2\xb6\x81\x85\x80\xb7\x90\x96\x81\x85\x89\xa7\x96\x81\x85\x90\x81\xb3\x8d\x90\x8c\xa2\x8d\x88\x81\xe4\x0e\x91\x45\xfe\xf6\xf7\xc7\x93",
        // "BIO_new" / M(Xor4) / S(141) / L(7)
        "\x92\x99\x9f\x8f\xbe\xb5\xa7\xd0\xbd\x9c\xac\xbd\xb9\x99\x05\x3c",
        // "exit" / M(Xor4) / S(170) / L(4)
        "\xc5\xd8\xc9\xd4\xa0\x5c\xe7\x43\x9d\x15\xdc\xc2\xbd\x50\xa9\xbd",
        // "sk_num" / M(Xor4) / S(11) / L(6)
        "\xc3\xdb\xef\xde\xc5\xdd\xb0\xe2\xf1\xee\x19\xb7\xb7\x69\xf3\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x82\xa0\x94\x3c\x16\x73\x7a\xb0\xa2\x50\x99\xe0\x1c\x6e\xe9\xc9\x99\xee\x7b\xa6\x2e\x32\xec\x83\x20\x63\x8b\x9c\x9f\xde\x4f\x53",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(119) / L(40)
        "\xad\xa8\xa8\xdc\xac\xd9\xad\xad\xa9\xda\xac\xb0\xaa\xd8\xa7\xaf\xdd\xdd\xac\xaf\xdb\xa8\xab\xd8\xdc\xa9\xa9\xab\xac\xa9\xdb\xa8\xb0\xaf\xdb\xdd\xad\xda\xad\xa7\x77\x35\x11\xc1\xca\x18\x45\x97\x1c",
        // "" / M(None) / S(0) / L(0)
        "\x4a\x2c\x58\x2f\x5c\xd9\xe8\xab\x47\x1a\xc3\x3b\x14\xc3\xe6\x5e\x2c\xf8\x9d\xa1\xe7\x61\x36\x64\x29\xfb\xea\xcc\xf6\xfa\x63\xf8",
        // "dlsym" / M(Xor2) / S(56) / L(5)
        "\x4c\x44\x5b\x51\x45\x28\x16\x62\x1b\x92\xff\x24\xd9\x9a\xcf\x03",
        // "ASN1_INTEGER_free" / M(Xor3) / S(242) / L(17)
        "\x45\x57\x4a\x35\x5b\x4d\x4a\x50\x41\x43\x41\x56\x5b\x62\x76\x61\x61\x04",
        // "" / M(None) / S(0) / L(0)
        "\xbf\x89\x0f\x61\x37\xd9\xda\x5f\x76\x6d\x7b\x5f\xdd\xc9\x23\x76\x10\x4d\x48\xb2\xf7\x44\x9c\x51\xe0\xdc\x37\x31\xa3\xac\x69\x43",
        // "sha1" / M(Rot) / S(27) / L(4)
        "\x8e\x83\x7c\x4c\x1b\x4b\xc1\x97\x43\xc0\x2a\x22\x11\x68\x9b\x41",
        // "identifierForVendor" / M(Rot) / S(247) / L(19)
        "\x60\x5b\x5c\x65\x6b\x60\x5d\x60\x5c\x69\x3d\x66\x69\x4d\x5c\x65\x5b\x66\x69\xf7",
        // "CFDateFormatterCreate" / M(Xor2) / S(244) / L(21)
        "\xa1\xa4\xa6\x83\x96\x87\xa4\x8d\x90\x8f\x83\x96\x96\x87\x90\xa1\x90\x87\x83\x96\x87\xe2",
        // "CFDictionarySetValue" / M(Xor3) / S(192) / L(20)
        "\x96\x93\x91\xbc\xb6\xa1\xbc\xba\xbb\xb4\xa7\xac\x86\xb0\xa1\x83\xb4\xb9\xa0\xb0\xd5",
        // "com.treasurebox.gear.ios" / M(Rot) / S(113) / L(24)
        "\xd4\xe0\xde\x9f\xe5\xe3\xd6\xd2\xe4\xe6\xe3\xd6\xd3\xe0\xe9\x9f\xd8\xd6\xd2\xe3\x9f\xda\xe0\xe4\x71\xfe\x2e\x35\x4e\xd9\x4a\xb5\xc6",
        // "X509_STORE_new" / M(Xor2) / S(188) / L(14)
        "\xf4\x99\x9c\x95\xf3\xff\xf8\xe3\xfe\xe9\xf3\xc2\xc9\xdb\xac\xaa",
        // "PKCS7_get0_signers" / M(Rot) / S(127) / L(18)
        "\xcf\xca\xc2\xd2\xb6\xde\xe6\xe4\xf3\xaf\xde\xf2\xe8\xe6\xed\xe4\xf1\xf2\x7f",
        // "" / M(None) / S(0) / L(0)
        "\xad\x64\xa9\x49\x1b\xf5\xed\x19\xe7\xb1\x53\xa1\xdb\x78\xab\x74\xf8\x5b\x00\x6d\x9f\xbc\x12\x54\xcb\xf0\xea\xbd\x6b\x25\x90\x3a",
        // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(112) / L(24)
        "\x33\x36\x31\x12\x03\x1f\x1c\x05\x04\x15\x24\x19\x1d\x15\x37\x15\x04\x33\x05\x02\x02\x15\x1e\x04\x70\xd1\x2b\xb1\x6b\x25\x3e\x21\xa2",
    };
    
    // Table for storing pointers
    static void *ReceiptValidation_Pointers[483] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) X509_digest),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) strlen),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) sk_num),
        ((void *) d2i_PKCS7_bio),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) strlen),
        ((void *) CFStringCreateWithCString),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int ReceiptValidation_KADXJRHVDZOZ __unused;
    static int ReceiptValidation_NOOKDWIVAYOR __unused;
    static int ReceiptValidation_WBAEHJUGPRWW __unused;
    static int ReceiptValidation_RWDMILWZSXGW __unused;
    static int ReceiptValidation_IURCWQOEJNFU __unused;
    static int ReceiptValidation_MRFMMUZMMBAS __unused;
    static int ReceiptValidation_WUFZPOWNFSMU __unused;
    static int ReceiptValidation_VBTHDICXHPUR __unused;
    
    
    // The long jump buffer
    static jmp_buf ReceiptValidation_JumpBuf __unused;
    
#define ReceiptValidation_ASN1_get_object_00260179 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00B, 377, 221, 16))
#define ReceiptValidation_ASN1_INTEGER_free_00AC01C3 ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction008, 451, 63, 18))
#define ReceiptValidation_ASN1_INTEGER_get_002600F1 ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00A, 241, 86, 17))
#define ReceiptValidation_ASN1_OBJECT_free_01710057 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction009, 87, 63, 17))
#define ReceiptValidation_BIO_free_00260064 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00A, 100, 253, 16))
#define ReceiptValidation_BIO_free_01710064 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction00A, 100, 253, 16))
#define ReceiptValidation_BIO_new_017101D1 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction00B, 465, 141, 16))
#define ReceiptValidation_BIO_s_mem_002601BE ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction009, 446, 167, 16))
#define ReceiptValidation_BIO_s_mem_00AC005E ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction004, 94, 61, 16))
#define ReceiptValidation_BIO_write_017101BF ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction00C, 447, 86, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_002601A6 ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 422, 230, 17))
#define ReceiptValidation_CFArrayCreateMutable_009D0118 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction007, 280, 47, 21))
#define ReceiptValidation_CFBundleGetMainBundle_0157009C ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction004, 156, 246, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_015700BB ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction00A, 187, 35, 33))
#define ReceiptValidation_CFDataCreate_009D008C ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction005, 140, 80, 16))
#define ReceiptValidation_CFDataCreateMutable_015700B5 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction009, 181, 16, 20))
#define ReceiptValidation_CFDataCreateMutable_01570161 ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction005, 353, 151, 20))
#define ReceiptValidation_CFDataGetBytePtr_0003016F ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction006, 367, 171, 17))
#define ReceiptValidation_CFDataGetLength_009D01C0 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction003, 448, 214, 16))
#define ReceiptValidation_CFDateFormatterSetProperty_00030182 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction007, 386, 181, 35))
#define ReceiptValidation_CFDictionaryCreateMutable_0003000F ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00B, 15, 206, 34))
#define ReceiptValidation_CFDictionaryGetValue_01570162 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, 354, 184, 21))
#define ReceiptValidation_CFDictionarySetValue_009D0195 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction006, 405, 43, 21))
#define ReceiptValidation_CFNumberCreate_0003003F ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction006, 63, 125, 16))
#define ReceiptValidation_CFRelease_000300CA ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00C, 202, 173, 16))
#define ReceiptValidation_CFRelease_0003012F ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction005, 303, 32, 16))
#define ReceiptValidation_CFRelease_00030156 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction003, 342, 54, 16))
#define ReceiptValidation_CFRelease_009D00CA ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction00C, 202, 173, 16))
#define ReceiptValidation_CFRelease_009D012F ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction005, 303, 32, 16))
#define ReceiptValidation_CFRelease_009D0156 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction003, 342, 54, 16))
#define ReceiptValidation_CFRelease_015700CA ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction00C, 202, 173, 16))
#define ReceiptValidation_CFRelease_0157012F ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction005, 303, 32, 16))
#define ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_0003016A ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction006, 362, 242, 48))
#define ReceiptValidation_d2i_PKCS7_bio_0026017D ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00B, 381, 36, 16))
#define ReceiptValidation_d2i_PKCS7_bio_00AC017D ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction00B, 381, 36, 16))
#define ReceiptValidation_d2i_X509_bio_00260023 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 35, 100, 16))
#define ReceiptValidation_EVP_DigestFinal_00AC005A ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction005, 90, 90, 16))
#define ReceiptValidation_EVP_DigestInit_002600D8 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction006, 216, 2, 16))
#define ReceiptValidation_EVP_DigestUpdate_00AC011A ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction00B, 282, 130, 17))
#define ReceiptValidation_EVP_get_digestbyname_00260058 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction003, 88, 233, 21))
#define ReceiptValidation_EVP_MD_CTX_init_002600BF ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction007, 191, 147, 16))
#define ReceiptValidation_exit_00020032 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction005, 50, 252, 16))
#define ReceiptValidation_exit_000201B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00B, 432, 208, 16))
#define ReceiptValidation_exit_000201D2 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00B, 466, 170, 16))
#define ReceiptValidation_exit_00A70032 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 167, 67, 33, ReceiptValidation_ObfuscationFunction005, 50, 252, 16))
#define ReceiptValidation_exit_00A701B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 167, 67, 33, ReceiptValidation_ObfuscationFunction00B, 432, 208, 16))
#define ReceiptValidation_exit_00A701D2 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 167, 67, 33, ReceiptValidation_ObfuscationFunction00B, 466, 170, 16))
#define ReceiptValidation_exit_012801B0 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction00B, 432, 208, 16))
#define ReceiptValidation_KADXJRHVDZOZ_00030014 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_KADXJRHVDZOZ, 165, 16))
#define ReceiptValidation_KADXJRHVDZOZ_00030053 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KADXJRHVDZOZ, 210, 16))
#define ReceiptValidation_KADXJRHVDZOZ_00030151 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_KADXJRHVDZOZ, 200, 17))
#define ReceiptValidation_KADXJRHVDZOZ_009D00B4 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_KADXJRHVDZOZ, 25, 21))
#define ReceiptValidation_KADXJRHVDZOZ_009D016C ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KADXJRHVDZOZ, 40, 16))
#define ReceiptValidation_KADXJRHVDZOZ_01570150 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_KADXJRHVDZOZ, 97, 18))
#define ReceiptValidation_NOOKDWIVAYOR_000300FE ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_NOOKDWIVAYOR, 50, 16))
#define ReceiptValidation_NOOKDWIVAYOR_0003017F ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_NOOKDWIVAYOR, 45, 21))
#define ReceiptValidation_NOOKDWIVAYOR_00030199 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_NOOKDWIVAYOR, 93, 16))
#define ReceiptValidation_NOOKDWIVAYOR_000301CE ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_NOOKDWIVAYOR, 223, 21))
#define ReceiptValidation_NOOKDWIVAYOR_009D009B ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_NOOKDWIVAYOR, 108, 22))
#define ReceiptValidation_NOOKDWIVAYOR_0128004D ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_NOOKDWIVAYOR, 242, 16))
#define ReceiptValidation_NOOKDWIVAYOR_0157015D ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_NOOKDWIVAYOR, 9, 22))
#define ReceiptValidation_WBAEHJUGPRWW_000301D0 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_WBAEHJUGPRWW, 204, 35))
#define ReceiptValidation_WBAEHJUGPRWW_01280045 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_WBAEHJUGPRWW, 232, 16))
#define ReceiptValidation_WBAEHJUGPRWW_015700CE ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_WBAEHJUGPRWW, 87, 16))
#define ReceiptValidation_WBAEHJUGPRWW_015701B4 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_WBAEHJUGPRWW, 56, 36))
#define ReceiptValidation_RWDMILWZSXGW_009D016D ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_RWDMILWZSXGW, 158, 37))
#define ReceiptValidation_RWDMILWZSXGW_009D01A0 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_RWDMILWZSXGW, 119, 16))
#define ReceiptValidation_RWDMILWZSXGW_0128002E ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RWDMILWZSXGW, 73, 16))
#define ReceiptValidation_RWDMILWZSXGW_015700C4 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RWDMILWZSXGW, 132, 18))
#define ReceiptValidation_IURCWQOEJNFU_00030176 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_IURCWQOEJNFU, 146, 16))
#define ReceiptValidation_IURCWQOEJNFU_009D0020 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_IURCWQOEJNFU, 123, 33))
#define ReceiptValidation_IURCWQOEJNFU_009D009A ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_IURCWQOEJNFU, 75, 17))
#define ReceiptValidation_MRFMMUZMMBAS_00030176 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_MRFMMUZMMBAS, 146, 16))
#define ReceiptValidation_MRFMMUZMMBAS_009D0053 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MRFMMUZMMBAS, 210, 16))
#define ReceiptValidation_MRFMMUZMMBAS_009D010C ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_MRFMMUZMMBAS, 247, 16))
#define ReceiptValidation_MRFMMUZMMBAS_009D0143 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MRFMMUZMMBAS, 229, 19))
#define ReceiptValidation_MRFMMUZMMBAS_009D0162 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_MRFMMUZMMBAS, 184, 21))
#define ReceiptValidation_MRFMMUZMMBAS_0157000D ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_MRFMMUZMMBAS, 121, 18))
#define ReceiptValidation_MRFMMUZMMBAS_01570056 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_MRFMMUZMMBAS, 95, 37))
#define ReceiptValidation_MRFMMUZMMBAS_015700EE ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_MRFMMUZMMBAS, 68, 16))
#define ReceiptValidation_WUFZPOWNFSMU_000200E1 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_WUFZPOWNFSMU, 63, 16))
#define ReceiptValidation_WUFZPOWNFSMU_0003003F ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_WUFZPOWNFSMU, 125, 16))
#define ReceiptValidation_WUFZPOWNFSMU_009D00E2 ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_WUFZPOWNFSMU, 29, 23))
#define ReceiptValidation_WUFZPOWNFSMU_009D0192 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_WUFZPOWNFSMU, 110, 17))
#define ReceiptValidation_WUFZPOWNFSMU_01570163 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_WUFZPOWNFSMU, 62, 18))
#define ReceiptValidation_VBTHDICXHPUR_009D007D ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_VBTHDICXHPUR, 18, 16))
#define ReceiptValidation_VBTHDICXHPUR_009D015F ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_VBTHDICXHPUR, 64, 33))
#define ReceiptValidation_VBTHDICXHPUR_009D01A0 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_VBTHDICXHPUR, 119, 16))
#define ReceiptValidation_VBTHDICXHPUR_009D01CE ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_VBTHDICXHPUR, 223, 21))
#define ReceiptValidation_VBTHDICXHPUR_0157003A ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_VBTHDICXHPUR, 239, 20))
#define ReceiptValidation_VBTHDICXHPUR_0157003F ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_VBTHDICXHPUR, 125, 16))
#define ReceiptValidation_VBTHDICXHPUR_0157007D ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_VBTHDICXHPUR, 18, 16))
#define ReceiptValidation_VBTHDICXHPUR_0157017F ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_VBTHDICXHPUR, 45, 21))
#define ReceiptValidation_kCFBundleIdentifierKey_0003002D ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction008, 45, 60, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_00030005 ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction004, 5, 70, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_00030016 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 3, 191, 67, ReceiptValidation_ObfuscationFunction00A, 22, 102, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_009D0153 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 157, 65, 67, ReceiptValidation_ObfuscationFunction00A, 339, 110, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_015700D4 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 343, 215, 67, ReceiptValidation_ObfuscationFunction003, 212, 100, 32))
#define ReceiptValidation_longjmp_0002001E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00C, 30, 187, 16))
#define ReceiptValidation_longjmp_0002019E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00C, 414, 233, 16))
#define ReceiptValidation_longjmp_000201B8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction00C, 440, 220, 16))
#define ReceiptValidation_longjmp_00A7001E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 167, 67, 33, ReceiptValidation_ObfuscationFunction00C, 30, 187, 16))
#define ReceiptValidation_longjmp_0128019E ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction00C, 414, 233, 16))
#define ReceiptValidation_longjmp_012801B8 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 296, 39, 33, ReceiptValidation_ObfuscationFunction00C, 440, 220, 16))
#define ReceiptValidation_OBJ_txt2obj_00AC00BA ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction004, 186, 236, 16))
#define ReceiptValidation_objc_getClass_006900DC ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction003, 220, 198, 16))
#define ReceiptValidation_objc_getClass_006901A7 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction00A, 423, 69, 16))
#define ReceiptValidation_objc_getClass_01110000 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction005, 0, 95, 16))
#define ReceiptValidation_objc_getClass_011100DC ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction003, 220, 198, 16))
#define ReceiptValidation_objc_getClass_011101A7 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction00A, 423, 69, 16))
#define ReceiptValidation_objc_getClass_01810000 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction005, 0, 95, 16))
#define ReceiptValidation_objc_getClass_018100DC ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction003, 220, 198, 16))
#define ReceiptValidation_objc_getClass_018101A7 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction00A, 423, 69, 16))
#define ReceiptValidation_objc_lookUpClass_006900FF ((__ReceiptValidation_objc_lookUpClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction008, 255, 192, 17))
#define ReceiptValidation_objc_lookUpClass_0181018B ((__ReceiptValidation_objc_lookUpClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction007, 395, 101, 17))
#define ReceiptValidation_objc_msgSend_00690131 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction006, 305, 144, 16))
#define ReceiptValidation_objc_msgSend_0069014A ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction004, 330, 88, 16))
#define ReceiptValidation_objc_msgSend_00690164 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction006, 356, 231, 16))
#define ReceiptValidation_objc_msgSend_01110131 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction006, 305, 144, 16))
#define ReceiptValidation_objc_msgSend_0111014A ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction004, 330, 88, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_01710093 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction006, 147, 179, 32))
#define ReceiptValidation_PKCS7_free_00260074 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00B, 116, 93, 16))
#define ReceiptValidation_PKCS7_free_00AC00C6 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction00B, 198, 30, 16))
#define ReceiptValidation_PKCS7_get0_signers_002600C8 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 200, 67, 19))
#define ReceiptValidation_PKCS7_verify_002600BC ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction005, 188, 153, 16))
#define ReceiptValidation_sel_registerName_006900FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction008, 253, 65, 17))
#define ReceiptValidation_sel_registerName_0069010F ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction00B, 271, 174, 17))
#define ReceiptValidation_sel_registerName_006901C1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 105, 96, 23, ReceiptValidation_ObfuscationFunction00C, 449, 230, 17))
#define ReceiptValidation_sel_registerName_011100FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction008, 253, 65, 17))
#define ReceiptValidation_sel_registerName_0111010F ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction00B, 271, 174, 17))
#define ReceiptValidation_sel_registerName_011101C1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 273, 153, 23, ReceiptValidation_ObfuscationFunction00C, 449, 230, 17))
#define ReceiptValidation_sel_registerName_018100FD ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction008, 253, 65, 17))
#define ReceiptValidation_sel_registerName_0181010F ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 385, 30, 23, ReceiptValidation_ObfuscationFunction00B, 271, 174, 17))
#define ReceiptValidation_setjmp_000200F2 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 2, 221, 33, ReceiptValidation_ObfuscationFunction009, 242, 184, 16))
#define ReceiptValidation_SHA1_0171003C ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction004, 60, 5, 16))
#define ReceiptValidation_SHA1_Final_00AC002A ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction005, 42, 131, 16))
#define ReceiptValidation_SHA1_Init_01710048 ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction007, 72, 118, 16))
#define ReceiptValidation_SHA1_Update_01710136 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction007, 310, 187, 16))
#define ReceiptValidation_sk_free_00AC0035 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction009, 53, 178, 16))
#define ReceiptValidation_sk_num_002601D3 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 467, 11, 16))
#define ReceiptValidation_sk_value_0171008D ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction00C, 141, 4, 16))
#define ReceiptValidation_X509_digest_00AC0099 ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 172, 67, 16, ReceiptValidation_ObfuscationFunction00B, 153, 167, 16))
#define ReceiptValidation_X509_free_00260187 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00A, 391, 45, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_0171000A ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction008, 10, 64, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_00260188 ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 392, 192, 34))
#define ReceiptValidation_X509_STORE_add_cert_01710185 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction004, 389, 230, 20))
#define ReceiptValidation_X509_STORE_free_017101B9 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 369, 42, 16, ReceiptValidation_ObfuscationFunction003, 441, 67, 16))
#define ReceiptValidation_X509_STORE_new_002600D5 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 38, 223, 16, ReceiptValidation_ObfuscationFunction00C, 213, 3, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[232])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[31])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[232])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[269])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[74])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[421])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[31])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[269])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
        char ReceiptValidation_tmp1[483], ReceiptValidation_tmp2[483];
        // Load the library if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
            ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
            ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[307])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
            ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
            ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[406])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
        }
        return ReceiptValidation_Pointers[ReceiptValidation_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void ReceiptValidation_GetMainBundle017(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_0157009C();
        if (!ReceiptValidation_bundle) {
            // Dead code
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_bundle);
            ReceiptValidation_CFBundleUnloadExecutable_015700BB((CFBundleRef) ReceiptValidation_bundle);
        }
        ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle;
        // Global variables computation
        // Set to 337
        ReceiptValidation_KADXJRHVDZOZ = 337;
        // Set to 464
        ReceiptValidation_WBAEHJUGPRWW = 464;
        // Set to 154
        ReceiptValidation_IURCWQOEJNFU = 154;
        // Set to 13
        ReceiptValidation_MRFMMUZMMBAS = 13;
        // Set to 355
        ReceiptValidation_WUFZPOWNFSMU = 355;
        // Set to 58
        ReceiptValidation_VBTHDICXHPUR = 58;
    }
#else
#define ReceiptValidation_GetMainBundle017(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
CFBundleRef ReceiptValidation_bundle = ReceiptValidation_CFBundleGetMainBundle_0157009C(); \
if (!ReceiptValidation_bundle) { \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_bundle); \
ReceiptValidation_CFBundleUnloadExecutable_015700BB((CFBundleRef) ReceiptValidation_bundle); \
} \
ReceiptValidation_ctx->main_bundle = (CFBundleRef) ReceiptValidation_bundle; \
ReceiptValidation_KADXJRHVDZOZ = 337; \
ReceiptValidation_WBAEHJUGPRWW = 464; \
ReceiptValidation_IURCWQOEJNFU = 154; \
ReceiptValidation_MRFMMUZMMBAS = 13; \
ReceiptValidation_WUFZPOWNFSMU = 355; \
ReceiptValidation_VBTHDICXHPUR = 58; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt040(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        id ReceiptValidation_bundleClass, ReceiptValidation_bundle;
        CFURLRef ReceiptValidation_url1;
        CFReadStreamRef ReceiptValidation_stream;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3;
        SEL ReceiptValidation_sel2, ReceiptValidation_sel3;
        uint8_t ReceiptValidation_buffer[483];
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
        // Get NSBundle class
        char ReceiptValidation_str1_[483];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[40]), ReceiptValidation_str1_, 74, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_bundleClass = ReceiptValidation_objc_lookUpClass_0181018B(ReceiptValidation_str1);
        char ReceiptValidation_str2_[483];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[264]), ReceiptValidation_str2_, 143, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_006901C1(ReceiptValidation_str2);
        ReceiptValidation_bundle = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundleClass, ReceiptValidation_sel2);
        char ReceiptValidation_str3_[483];
        ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[452]), ReceiptValidation_str3_, 133, 19);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_006901C1(ReceiptValidation_str3);
        ReceiptValidation_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundle, ReceiptValidation_sel3));
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_WBAEHJUGPRWW_000301D0(kCFAllocatorDefault, ReceiptValidation_url1);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_KADXJRHVDZOZ_00030151(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt040_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_VBTHDICXHPUR_0157003A(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_IURCWQOEJNFU_009D009A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 483);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_WUFZPOWNFSMU_01570163(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_MRFMMUZMMBAS_0157000D(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0003012F(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 13 to 374
        ReceiptValidation_MRFMMUZMMBAS -= 1; ReceiptValidation_MRFMMUZMMBAS *= 30; ReceiptValidation_MRFMMUZMMBAS += 14;
    ReceiptValidation_LoadReceipt040_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0003012F(ReceiptValidation_stream);
    }
#else
#define ReceiptValidation_LoadReceipt040(ReceiptValidation_ctx) { \
id ReceiptValidation_bundleClass, ReceiptValidation_bundle; \
CFURLRef ReceiptValidation_url1; \
CFReadStreamRef ReceiptValidation_stream; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3; \
SEL ReceiptValidation_sel2, ReceiptValidation_sel3; \
uint8_t ReceiptValidation_buffer[483]; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[40]), ReceiptValidation_str1_, 74, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_bundleClass = ReceiptValidation_objc_lookUpClass_0181018B(ReceiptValidation_str1); \
char ReceiptValidation_str2_[483]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[264]), ReceiptValidation_str2_, 143, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_006901C1(ReceiptValidation_str2); \
ReceiptValidation_bundle = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundleClass, ReceiptValidation_sel2); \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[452]), ReceiptValidation_str3_, 133, 19); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_006901C1(ReceiptValidation_str3); \
ReceiptValidation_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundle, ReceiptValidation_sel3)); \
ReceiptValidation_stream = ReceiptValidation_WBAEHJUGPRWW_000301D0(kCFAllocatorDefault, ReceiptValidation_url1); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_KADXJRHVDZOZ_00030151(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt040_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_VBTHDICXHPUR_0157003A(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_IURCWQOEJNFU_009D009A(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 483); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_WUFZPOWNFSMU_01570163(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_MRFMMUZMMBAS_0157000D(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_0003012F(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_MRFMMUZMMBAS -= 1; ReceiptValidation_MRFMMUZMMBAS *= 30; ReceiptValidation_MRFMMUZMMBAS += 14;  \
ReceiptValidation_LoadReceipt040_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_0003012F(ReceiptValidation_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void ReceiptValidation_GetGUID04E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        Class ReceiptValidation_deviceClass;
        id ReceiptValidation_device, ReceiptValidation_identifier;
        char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3, *ReceiptValidation_str4;
        SEL ReceiptValidation_sel2, ReceiptValidation_sel3, ReceiptValidation_sel4;
        uuid_t ReceiptValidation_uuid;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting device identifier");
        // Get the UIDevice class
        char ReceiptValidation_str1_[483];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[170]), ReceiptValidation_str1_, 77, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_deviceClass = ReceiptValidation_objc_getClass_006901A7(ReceiptValidation_str1);
        // Call [UIDevice currentDevice]
        char ReceiptValidation_str2_[483];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[360]), ReceiptValidation_str2_, 65, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str2);
        ReceiptValidation_device =  ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_deviceClass, ReceiptValidation_sel2);
        // Call [device identifierForVendor]
        char ReceiptValidation_str3_[483];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[319]), ReceiptValidation_str3_, 75, 20);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str3);
        ReceiptValidation_identifier = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_device, ReceiptValidation_sel3);
        // Call [identifier getUUIDBytes:ReceiptValidation_uuid]
        char ReceiptValidation_str4_[483];
        ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[160]), ReceiptValidation_str4_, 11, 16);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_sel4 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(ReceiptValidation_identifier, ReceiptValidation_sel4, ReceiptValidation_uuid);
        if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00030156(ReceiptValidation_ctx->guid_data);
        volatile int ReceiptValidation_size = 9; ReceiptValidation_size -= 4; ReceiptValidation_size *= 3; ReceiptValidation_size += 1;
        ReceiptValidation_ctx->guid_data = ReceiptValidation_MRFMMUZMMBAS_00030176(NULL, (const UInt8 *) ReceiptValidation_uuid, (CFIndex) ReceiptValidation_size);
        // Global variables computation
        // Set to 364
        ReceiptValidation_KADXJRHVDZOZ = 364;
        // Set to 155
        ReceiptValidation_NOOKDWIVAYOR = 155;
        // From 374 to 86
        ReceiptValidation_MRFMMUZMMBAS += 142; ReceiptValidation_MRFMMUZMMBAS /= 6;
    }
#else
#define ReceiptValidation_GetGUID04E(ReceiptValidation_ctx) { \
Class ReceiptValidation_deviceClass; \
id ReceiptValidation_device, ReceiptValidation_identifier; \
char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3, *ReceiptValidation_str4; \
SEL ReceiptValidation_sel2, ReceiptValidation_sel3, ReceiptValidation_sel4; \
uuid_t ReceiptValidation_uuid; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting device identifier"); \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[170]), ReceiptValidation_str1_, 77, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_deviceClass = ReceiptValidation_objc_getClass_006901A7(ReceiptValidation_str1); \
char ReceiptValidation_str2_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[360]), ReceiptValidation_str2_, 65, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str2); \
ReceiptValidation_device =  ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_deviceClass, ReceiptValidation_sel2); \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[319]), ReceiptValidation_str3_, 75, 20); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str3); \
ReceiptValidation_identifier = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_device, ReceiptValidation_sel3); \
char ReceiptValidation_str4_[483]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[160]), ReceiptValidation_str4_, 11, 16); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_sel4 = ReceiptValidation_sel_registerName_011101C1(ReceiptValidation_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(ReceiptValidation_identifier, ReceiptValidation_sel4, ReceiptValidation_uuid); \
if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_00030156(ReceiptValidation_ctx->guid_data); \
volatile int ReceiptValidation_size = 9; ReceiptValidation_size -= 4; ReceiptValidation_size *= 3; ReceiptValidation_size += 1;  \
ReceiptValidation_ctx->guid_data = ReceiptValidation_MRFMMUZMMBAS_00030176(NULL, (const UInt8 *) ReceiptValidation_uuid, (CFIndex) ReceiptValidation_size); \
ReceiptValidation_KADXJRHVDZOZ = 364; \
ReceiptValidation_NOOKDWIVAYOR = 155; \
ReceiptValidation_MRFMMUZMMBAS += 142; ReceiptValidation_MRFMMUZMMBAS /= 6;  \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[284]), 75, 33);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_MRFMMUZMMBAS_01570056((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_0003002D);
        if (ReceiptValidation_KADXJRHVDZOZ_009D016C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_0002019E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1);
        }
        // Global variables computation
        // Set to 365
        ReceiptValidation_RWDMILWZSXGW = 365;
        // From 58 to 125
        ReceiptValidation_VBTHDICXHPUR -= 27; ReceiptValidation_VBTHDICXHPUR *= 4; ReceiptValidation_VBTHDICXHPUR += 1;
        ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier05C(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[284]), 75, 33); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_MRFMMUZMMBAS_01570056((CFBundleRef) ReceiptValidation_ctx->main_bundle, *ReceiptValidation_kCFBundleIdentifierKey_0003002D); \
if (ReceiptValidation_KADXJRHVDZOZ_009D016C(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_0002019E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1); \
} \
ReceiptValidation_RWDMILWZSXGW = 365; \
ReceiptValidation_VBTHDICXHPUR -= 27; ReceiptValidation_VBTHDICXHPUR *= 4; ReceiptValidation_VBTHDICXHPUR += 1;  \
ReceiptValidation_CFRelease_009D012F(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleVersion060(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[396]), 249, 16);
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[292]), 185, 16);
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_RWDMILWZSXGW_009D016D((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_VBTHDICXHPUR_0157007D(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_0128019E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1);
        }
        // Global variables computation
        // Set to 180
        ReceiptValidation_KADXJRHVDZOZ = 180;
        // From 155 to 349
        ReceiptValidation_NOOKDWIVAYOR -= 68; ReceiptValidation_NOOKDWIVAYOR *= 4; ReceiptValidation_NOOKDWIVAYOR += 1;
        // From 464 to 436
        ReceiptValidation_WBAEHJUGPRWW += 408; ReceiptValidation_WBAEHJUGPRWW /= 2;
        // From 365 to 196
        ReceiptValidation_RWDMILWZSXGW += 223; ReceiptValidation_RWDMILWZSXGW /= 3;
        // From 154 to 32
        ReceiptValidation_IURCWQOEJNFU += 38; ReceiptValidation_IURCWQOEJNFU /= 6;
        // Set to 323
        ReceiptValidation_MRFMMUZMMBAS = 323;
        // Set to 402
        ReceiptValidation_WUFZPOWNFSMU = 402;
        // From 125 to 63
        ReceiptValidation_VBTHDICXHPUR += 64; ReceiptValidation_VBTHDICXHPUR /= 3;
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion060(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[396]), 249, 16); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[292]), 185, 16); \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_RWDMILWZSXGW_009D016D((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_VBTHDICXHPUR_0157007D(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_0128019E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1); \
} \
ReceiptValidation_KADXJRHVDZOZ = 180; \
ReceiptValidation_NOOKDWIVAYOR -= 68; ReceiptValidation_NOOKDWIVAYOR *= 4; ReceiptValidation_NOOKDWIVAYOR += 1;  \
ReceiptValidation_WBAEHJUGPRWW += 408; ReceiptValidation_WBAEHJUGPRWW /= 2;  \
ReceiptValidation_RWDMILWZSXGW += 223; ReceiptValidation_RWDMILWZSXGW /= 3;  \
ReceiptValidation_IURCWQOEJNFU += 38; ReceiptValidation_IURCWQOEJNFU /= 6;  \
ReceiptValidation_MRFMMUZMMBAS = 323; \
ReceiptValidation_WUFZPOWNFSMU = 402; \
ReceiptValidation_VBTHDICXHPUR += 64; ReceiptValidation_VBTHDICXHPUR /= 3;  \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void ReceiptValidation_GetReceiptInformation065(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
        ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
        CFNumberRef ReceiptValidation_key;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
        CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
        int ReceiptValidation_type;
        int ReceiptValidation_xclass;
        long ReceiptValidation_length;
        CFDateFormatterRef ReceiptValidation_formatter = NULL;
        CFTimeZoneRef ReceiptValidation_tz = NULL;
        BIO *ReceiptValidation_bio_p7;
        PKCS7 *ReceiptValidation_pkcs7;
        ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
        ASN1_INTEGER *ReceiptValidation_value;
        const unsigned char *ReceiptValidation_seq_end;
        long ReceiptValidation_attr_type;
        long ReceiptValidation_attr_version;
        int ReceiptValidation_str_type;
        long ReceiptValidation_str_length;
        const unsigned char *ReceiptValidation_str_ptr;
        ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
        long ReceiptValidation_number;
        int ReceiptValidation_num_type;
        long ReceiptValidation_num_length;
        const unsigned char *ReceiptValidation_num_ptr;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_017101D1(ReceiptValidation_BIO_s_mem_00AC005E());
        ReceiptValidation_BIO_write_017101BF(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WUFZPOWNFSMU_009D0192((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00AC017D(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        ReceiptValidation_formatter = ReceiptValidation_NOOKDWIVAYOR_0157015D(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[299]), 31, 33);
        ReceiptValidation_IURCWQOEJNFU_009D0020(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
        ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1);
        ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_0003016A(NULL, 0.0);
        ReceiptValidation_CFDateFormatterSetProperty_00030182(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00030005, ReceiptValidation_tz);
        ReceiptValidation_CFRelease_0157012F(ReceiptValidation_tz);
        // Initial context
        ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
        ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
        ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
        ReceiptValidation_receipt_context.parent = NULL;
        ReceiptValidation_receipt_context.dictionary = NULL;
        ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            if (!ReceiptValidation_current_context->dictionary) {
                // Create the target dictionary
                ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_0003000F(kCFAllocatorDefault, (CFIndex) 483, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_009D0153, ReceiptValidation_kCFTypeDictionaryValueCallBacks_015700D4);
                // Decode payload from ASN.1
                ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SET) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                }
            }
            // Iterate over attributes
            while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
                // Parse attribute sequence
                ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                }
                ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
                ReceiptValidation_attr_type = 0;
                ReceiptValidation_attr_version = 0;
                // Parse the attribute type
                ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value);
                // Parse the attribute version
                ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value);
                // Check the attribute value
                ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                }
                ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1));
                ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1);
                ReceiptValidation_value1 = NULL;
                ReceiptValidation_value2 = NULL;
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
                switch (ReceiptValidation_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                        ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_009D008C(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                    case ReceiptValidation_InAppAttributeTypeCancellationDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                        ReceiptValidation_value1 = ReceiptValidation_WBAEHJUGPRWW_015701B4(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                    case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                    {
                        ReceiptValidation_num_type = 0;
                        ReceiptValidation_num_length = 0;
                        ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                        if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                        ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value);
                        ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value);
                        ReceiptValidation_value1 = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberLongType, &ReceiptValidation_number);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                    {
                        ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_009D008C(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                        ReceiptValidation_inapp_context.dictionary = NULL;
                        ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                        ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                        goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key;
                    }
                    default:
                        break;
                }
                if (ReceiptValidation_value1) {
                    ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                    ReceiptValidation_KADXJRHVDZOZ_009D00B4((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1);
                }
                if (ReceiptValidation_value2) {
                    ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                    ReceiptValidation_KADXJRHVDZOZ_009D00B4((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                    ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value2);
                }
                // Move past the attribute
                ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            }
        ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key:
            // If the current context is a new one, continue parsing
            if (!ReceiptValidation_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (ReceiptValidation_current_context->parent) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
                ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
                ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01570162((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
                if (!ReceiptValidation_value1) {
                    ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_009D0118(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00030016);
                    ReceiptValidation_CFDictionarySetValue_009D0195((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1);
                }
                ReceiptValidation_MRFMMUZMMBAS_009D0143((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_0157012F(ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key);
                // Switch to parent context
                ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
                // Move past the child context
                ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
            }
        }
        if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_0157012F(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
        // Global variables computation
        // From 349 to 254
        ReceiptValidation_NOOKDWIVAYOR += 159; ReceiptValidation_NOOKDWIVAYOR /= 2;
        // From 402 to 402
        ReceiptValidation_WUFZPOWNFSMU /= 1;
    ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail:
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00AC00C6(ReceiptValidation_pkcs7);
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00260064(ReceiptValidation_bio_p7);
        if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_0157012F(ReceiptValidation_formatter);
    }
#else
#define ReceiptValidation_GetReceiptInformation065(ReceiptValidation_ctx) { \
ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
CFNumberRef ReceiptValidation_key; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
int ReceiptValidation_type; \
int ReceiptValidation_xclass; \
long ReceiptValidation_length; \
CFDateFormatterRef ReceiptValidation_formatter = NULL; \
CFTimeZoneRef ReceiptValidation_tz = NULL; \
BIO *ReceiptValidation_bio_p7; \
PKCS7 *ReceiptValidation_pkcs7; \
ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
ASN1_INTEGER *ReceiptValidation_value; \
const unsigned char *ReceiptValidation_seq_end; \
long ReceiptValidation_attr_type; \
long ReceiptValidation_attr_version; \
int ReceiptValidation_str_type; \
long ReceiptValidation_str_length; \
const unsigned char *ReceiptValidation_str_ptr; \
ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
long ReceiptValidation_number; \
int ReceiptValidation_num_type; \
long ReceiptValidation_num_length; \
const unsigned char *ReceiptValidation_num_ptr; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_017101D1(ReceiptValidation_BIO_s_mem_00AC005E()); \
ReceiptValidation_BIO_write_017101BF(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WUFZPOWNFSMU_009D0192((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00AC017D(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_formatter = ReceiptValidation_NOOKDWIVAYOR_0157015D(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[299]), 31, 33); \
ReceiptValidation_IURCWQOEJNFU_009D0020(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1); \
ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_0003016A(NULL, 0.0); \
ReceiptValidation_CFDateFormatterSetProperty_00030182(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_00030005, ReceiptValidation_tz); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_tz); \
ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
ReceiptValidation_receipt_context.parent = NULL; \
ReceiptValidation_receipt_context.dictionary = NULL; \
ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
if (!ReceiptValidation_current_context->dictionary) { \
ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_0003000F(kCFAllocatorDefault, (CFIndex) 483, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_009D0153, ReceiptValidation_kCFTypeDictionaryValueCallBacks_015700D4); \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SET) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
} \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
ReceiptValidation_attr_type = 0; \
ReceiptValidation_attr_version = 0; \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1)); \
ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 1) + 1); \
ReceiptValidation_value1 = NULL; \
ReceiptValidation_value2 = NULL; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
switch (ReceiptValidation_attr_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_009D008C(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
case ReceiptValidation_InAppAttributeTypeCancellationDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[114])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
ReceiptValidation_value1 = ReceiptValidation_WBAEHJUGPRWW_015701B4(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_InAppAttributeTypeQuantity: \
case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
{ \
ReceiptValidation_num_type = 0; \
ReceiptValidation_num_length = 0; \
ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00260179(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_012801B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_002601A6(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_002600F1(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00AC01C3(ReceiptValidation_value); \
ReceiptValidation_value1 = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberLongType, &ReceiptValidation_number); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
{ \
ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_009D008C(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_value1)); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
{ \
ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
ReceiptValidation_inapp_context.dictionary = NULL; \
ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
goto ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key; \
} \
default: \
break; \
} \
if (ReceiptValidation_value1) { \
ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_KADXJRHVDZOZ_009D00B4((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1); \
} \
if (ReceiptValidation_value2) { \
ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
ReceiptValidation_KADXJRHVDZOZ_009D00B4((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value2); \
} \
ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
} \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_key: \
if (!ReceiptValidation_current_context->dictionary) { \
continue; \
} \
if (ReceiptValidation_current_context->parent) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
ReceiptValidation_key = ReceiptValidation_VBTHDICXHPUR_0157003F(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_01570162((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
if (!ReceiptValidation_value1) { \
ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_009D0118(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_00030016); \
ReceiptValidation_CFDictionarySetValue_009D0195((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_value1); \
} \
ReceiptValidation_MRFMMUZMMBAS_009D0143((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_0157012F(ReceiptValidation_key); \
ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
} \
} \
if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_0157012F(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
ReceiptValidation_NOOKDWIVAYOR += 159; ReceiptValidation_NOOKDWIVAYOR /= 2;  \
ReceiptValidation_WUFZPOWNFSMU /= 1;  \
ReceiptValidation_GetReceiptInformation065_ReceiptValidation_bail: \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00AC00C6(ReceiptValidation_pkcs7); \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00260064(ReceiptValidation_bio_p7); \
if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_0157012F(ReceiptValidation_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature06C(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        BIO *ReceiptValidation_bio_p7 = NULL;
        PKCS7 *ReceiptValidation_pkcs7 = NULL;
        STACK_OF(X509) *ReceiptValidation_certificates = NULL;
        X509 *ReceiptValidation_certificate = NULL;
        int ReceiptValidation_count, ReceiptValidation_index1;
        unsigned int ReceiptValidation_index2;
        ASN1_OBJECT *ReceiptValidation_oid = NULL;
        char *ReceiptValidation_str1;
        char *ReceiptValidation_str2;
        char *ReceiptValidation_str3;
        char *ReceiptValidation_str4;
        char *ReceiptValidation_str5;
        int ReceiptValidation_verify, ReceiptValidation_status;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_017101D1(ReceiptValidation_BIO_s_mem_002601BE());
        ReceiptValidation_BIO_write_017101BF(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WUFZPOWNFSMU_009D0192((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_NOOKDWIVAYOR_000300FE((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0026017D(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        ReceiptValidation_OpenSSL_add_all_digests_01710093();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        ReceiptValidation_verify = 0;
        ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
        ReceiptValidation_count = ReceiptValidation_sk_num_002601D3((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0171008D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            char ReceiptValidation_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            // Retrieve the common name
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00260188(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 483);
            if (ReceiptValidation_status <= 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
            }
            volatile unsigned int ReceiptValidation_digest_length = 8; ReceiptValidation_digest_length -= 3; ReceiptValidation_digest_length *= 4;
            char ReceiptValidation_str2_[483];
            ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[312]), ReceiptValidation_str2_, 204, 16);
            ReceiptValidation_str2 = ReceiptValidation_str2_;
            const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00260058(ReceiptValidation_str2);
            unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
            unsigned int ReceiptValidation_len = 0;
            // Check that the X509_digest function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_digest_00AC0099(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 812;
            if (ReceiptValidation_status == 812 || ReceiptValidation_len > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
            }
            ReceiptValidation_status = ReceiptValidation_X509_digest_00AC0099(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 812;
            if (ReceiptValidation_status != 812 || ReceiptValidation_len != ReceiptValidation_digest_length) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
            }
            char ReceiptValidation_fingerprint[483];
            volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;
            for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
                snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]);
            }
            char ReceiptValidation_str3_[483];
            ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[469]), ReceiptValidation_str3_, 119, 49);
            ReceiptValidation_str3 = ReceiptValidation_str3_;
            // Check the common name and the fingerprint
            char ReceiptValidation_str1_[483];
            ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[148]), ReceiptValidation_str1_, 197, 16);
            ReceiptValidation_str1 = ReceiptValidation_str1_;
            volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;
            if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[214])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[214])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
                ReceiptValidation_verify = 812;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 812) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char ReceiptValidation_str4_[483];
        ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[211]), ReceiptValidation_str4_, 178, 34);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00AC00BA(ReceiptValidation_str4, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0171000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_01710057(ReceiptValidation_oid);
        if (ReceiptValidation_verify >= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char ReceiptValidation_str5_[483];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[110]), ReceiptValidation_str5_, 28, 34);
        ReceiptValidation_str5 = ReceiptValidation_str5_;
        ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_002600C8(ReceiptValidation_pkcs7, NULL, 0);
        ReceiptValidation_count = ReceiptValidation_sk_num_002601D3((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0171008D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00AC00BA(ReceiptValidation_str5, 0);
            ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0171000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
            ReceiptValidation_ASN1_OBJECT_free_01710057(ReceiptValidation_oid);
            if (ReceiptValidation_verify == -1) {
                sk_X509_free (ReceiptValidation_certificates);
                ReceiptValidation_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail;
        }
        // Global variables computation
        // From 180 to 83
        ReceiptValidation_KADXJRHVDZOZ += 152; ReceiptValidation_KADXJRHVDZOZ /= 4;
        // From 196 to 416
        ReceiptValidation_RWDMILWZSXGW -= 92; ReceiptValidation_RWDMILWZSXGW *= 4;
        // From 63 to 462
        ReceiptValidation_VBTHDICXHPUR -= 12; ReceiptValidation_VBTHDICXHPUR *= 9; ReceiptValidation_VBTHDICXHPUR += 3;
    ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail:
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01710064(ReceiptValidation_bio_p7);
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00260074(ReceiptValidation_pkcs7);
        if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    }
#else
#define ReceiptValidation_CheckReceiptSignature06C(ReceiptValidation_ctx) { \
BIO *ReceiptValidation_bio_p7 = NULL; \
PKCS7 *ReceiptValidation_pkcs7 = NULL; \
STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
X509 *ReceiptValidation_certificate = NULL; \
int ReceiptValidation_count, ReceiptValidation_index1; \
unsigned int ReceiptValidation_index2; \
ASN1_OBJECT *ReceiptValidation_oid = NULL; \
char *ReceiptValidation_str1; \
char *ReceiptValidation_str2; \
char *ReceiptValidation_str3; \
char *ReceiptValidation_str4; \
char *ReceiptValidation_str5; \
int ReceiptValidation_verify, ReceiptValidation_status; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_017101D1(ReceiptValidation_BIO_s_mem_002601BE()); \
ReceiptValidation_BIO_write_017101BF(ReceiptValidation_bio_p7, (void *) ReceiptValidation_WUFZPOWNFSMU_009D0192((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_NOOKDWIVAYOR_000300FE((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0026017D(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
ReceiptValidation_OpenSSL_add_all_digests_01710093(); \
ReceiptValidation_verify = 0; \
ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
ReceiptValidation_count = ReceiptValidation_sk_num_002601D3((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0171008D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
char ReceiptValidation_common_name[483]; \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00260188(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 483); \
if (ReceiptValidation_status <= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
volatile unsigned int ReceiptValidation_digest_length = 8; ReceiptValidation_digest_length -= 3; ReceiptValidation_digest_length *= 4;  \
char ReceiptValidation_str2_[483]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[312]), ReceiptValidation_str2_, 204, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_00260058(ReceiptValidation_str2); \
unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
unsigned int ReceiptValidation_len = 0; \
ReceiptValidation_status = ReceiptValidation_X509_digest_00AC0099(NULL, NULL, ReceiptValidation_digest, &ReceiptValidation_len) * 812; \
if (ReceiptValidation_status == 812 || ReceiptValidation_len > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_digest_00AC0099(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 812; \
if (ReceiptValidation_status != 812 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
char ReceiptValidation_fingerprint[483]; \
volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;  \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02x", ReceiptValidation_digest[ReceiptValidation_index2]); \
} \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[469]), ReceiptValidation_str3_, 119, 49); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[148]), ReceiptValidation_str1_, 197, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;  \
if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[214])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[214])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
ReceiptValidation_verify = 812; \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 812) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
char ReceiptValidation_str4_[483]; \
ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[211]), ReceiptValidation_str4_, 178, 34); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00AC00BA(ReceiptValidation_str4, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0171000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_01710057(ReceiptValidation_oid); \
if (ReceiptValidation_verify >= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
char ReceiptValidation_str5_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[110]), ReceiptValidation_str5_, 28, 34); \
ReceiptValidation_str5 = ReceiptValidation_str5_; \
ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_002600C8(ReceiptValidation_pkcs7, NULL, 0); \
ReceiptValidation_count = ReceiptValidation_sk_num_002601D3((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_0171008D((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00AC00BA(ReceiptValidation_str5, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_0171000A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_01710057(ReceiptValidation_oid); \
if (ReceiptValidation_verify == -1) { \
sk_X509_free (ReceiptValidation_certificates); \
ReceiptValidation_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail; \
} \
ReceiptValidation_KADXJRHVDZOZ += 152; ReceiptValidation_KADXJRHVDZOZ /= 4;  \
ReceiptValidation_RWDMILWZSXGW -= 92; ReceiptValidation_RWDMILWZSXGW *= 4;  \
ReceiptValidation_VBTHDICXHPUR -= 12; ReceiptValidation_VBTHDICXHPUR *= 9; ReceiptValidation_VBTHDICXHPUR += 3;  \
ReceiptValidation_CheckReceiptSignature06C_ReceiptValidation_bail: \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_01710064(ReceiptValidation_bio_p7); \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00260074(ReceiptValidation_pkcs7); \
if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[284]), 75, 33);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_KADXJRHVDZOZ_00030053(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VBTHDICXHPUR_009D01CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key);
        if (ReceiptValidation_RWDMILWZSXGW_009D01A0(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key);
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key);
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 254 to 462
        ReceiptValidation_NOOKDWIVAYOR -= 100; ReceiptValidation_NOOKDWIVAYOR *= 3;
        // From 323 to 83
        ReceiptValidation_MRFMMUZMMBAS += 92; ReceiptValidation_MRFMMUZMMBAS /= 5;
        // From 462 to 125
        ReceiptValidation_VBTHDICXHPUR += 163; ReceiptValidation_VBTHDICXHPUR /= 5;
        ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00CCF((ReceiptValidation_Strings[284]), 75, 33); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_KADXJRHVDZOZ_00030053(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VBTHDICXHPUR_009D01CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key); \
if (ReceiptValidation_RWDMILWZSXGW_009D01A0(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_key); \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1); \
} \
ReceiptValidation_NOOKDWIVAYOR -= 100; ReceiptValidation_NOOKDWIVAYOR *= 3;  \
ReceiptValidation_MRFMMUZMMBAS += 92; ReceiptValidation_MRFMMUZMMBAS /= 5;  \
ReceiptValidation_VBTHDICXHPUR += 163; ReceiptValidation_VBTHDICXHPUR /= 5;  \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[478]), 113, 33);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_KADXJRHVDZOZ_00030053(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VBTHDICXHPUR_009D01CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key);
        if (ReceiptValidation_RWDMILWZSXGW_009D01A0(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 254 to 462
        ReceiptValidation_NOOKDWIVAYOR -= 100; ReceiptValidation_NOOKDWIVAYOR *= 3;
        // From 323 to 83
        ReceiptValidation_MRFMMUZMMBAS += 92; ReceiptValidation_MRFMMUZMMBAS /= 5;
        // From 462 to 125
        ReceiptValidation_VBTHDICXHPUR += 163; ReceiptValidation_VBTHDICXHPUR /= 5;
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[478]), 113, 33); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_KADXJRHVDZOZ_00030053(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_VBTHDICXHPUR_009D01CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key); \
if (ReceiptValidation_RWDMILWZSXGW_009D01A0(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_NOOKDWIVAYOR -= 100; ReceiptValidation_NOOKDWIVAYOR *= 3;  \
ReceiptValidation_MRFMMUZMMBAS += 92; ReceiptValidation_MRFMMUZMMBAS /= 5;  \
ReceiptValidation_VBTHDICXHPUR += 163; ReceiptValidation_VBTHDICXHPUR /= 5;  \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[431]), 167, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MRFMMUZMMBAS_009D0053(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_000301CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key);
        if (ReceiptValidation_VBTHDICXHPUR_009D007D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key);
            ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key);
            ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 83 to 336
        ReceiptValidation_KADXJRHVDZOZ -= 27; ReceiptValidation_KADXJRHVDZOZ *= 6;
        // From 462 to 77
        ReceiptValidation_NOOKDWIVAYOR += 154; ReceiptValidation_NOOKDWIVAYOR /= 8;
        // From 436 to 69
        ReceiptValidation_WBAEHJUGPRWW += 116; ReceiptValidation_WBAEHJUGPRWW /= 8;
        // From 416 to 46
        ReceiptValidation_RWDMILWZSXGW += 90; ReceiptValidation_RWDMILWZSXGW /= 11;
        // From 32 to 374
        ReceiptValidation_IURCWQOEJNFU -= 4; ReceiptValidation_IURCWQOEJNFU *= 13; ReceiptValidation_IURCWQOEJNFU += 10;
        // From 83 to 268
        ReceiptValidation_MRFMMUZMMBAS -= 30; ReceiptValidation_MRFMMUZMMBAS *= 5; ReceiptValidation_MRFMMUZMMBAS += 3;
        // From 402 to 225
        ReceiptValidation_WUFZPOWNFSMU += 273; ReceiptValidation_WUFZPOWNFSMU /= 3;
        // From 125 to 383
        ReceiptValidation_VBTHDICXHPUR -= 49; ReceiptValidation_VBTHDICXHPUR *= 5; ReceiptValidation_VBTHDICXHPUR += 3;
        ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[431]), 167, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MRFMMUZMMBAS_009D0053(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_000301CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key); \
if (ReceiptValidation_VBTHDICXHPUR_009D007D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_00A7001E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key); \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_key); \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1); \
} \
ReceiptValidation_KADXJRHVDZOZ -= 27; ReceiptValidation_KADXJRHVDZOZ *= 6;  \
ReceiptValidation_NOOKDWIVAYOR += 154; ReceiptValidation_NOOKDWIVAYOR /= 8;  \
ReceiptValidation_WBAEHJUGPRWW += 116; ReceiptValidation_WBAEHJUGPRWW /= 8;  \
ReceiptValidation_RWDMILWZSXGW += 90; ReceiptValidation_RWDMILWZSXGW /= 11;  \
ReceiptValidation_IURCWQOEJNFU -= 4; ReceiptValidation_IURCWQOEJNFU *= 13; ReceiptValidation_IURCWQOEJNFU += 10;  \
ReceiptValidation_MRFMMUZMMBAS -= 30; ReceiptValidation_MRFMMUZMMBAS *= 5; ReceiptValidation_MRFMMUZMMBAS += 3;  \
ReceiptValidation_WUFZPOWNFSMU += 273; ReceiptValidation_WUFZPOWNFSMU /= 3;  \
ReceiptValidation_VBTHDICXHPUR -= 49; ReceiptValidation_VBTHDICXHPUR *= 5; ReceiptValidation_VBTHDICXHPUR += 3;  \
ReceiptValidation_CFRelease_015700CA(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[396]), 249, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MRFMMUZMMBAS_009D0053(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_000301CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key);
        if (ReceiptValidation_VBTHDICXHPUR_009D007D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 83 to 336
        ReceiptValidation_KADXJRHVDZOZ -= 27; ReceiptValidation_KADXJRHVDZOZ *= 6;
        // From 462 to 77
        ReceiptValidation_NOOKDWIVAYOR += 154; ReceiptValidation_NOOKDWIVAYOR /= 8;
        // From 436 to 69
        ReceiptValidation_WBAEHJUGPRWW += 116; ReceiptValidation_WBAEHJUGPRWW /= 8;
        // From 416 to 46
        ReceiptValidation_RWDMILWZSXGW += 90; ReceiptValidation_RWDMILWZSXGW /= 11;
        // From 32 to 374
        ReceiptValidation_IURCWQOEJNFU -= 4; ReceiptValidation_IURCWQOEJNFU *= 13; ReceiptValidation_IURCWQOEJNFU += 10;
        // From 83 to 268
        ReceiptValidation_MRFMMUZMMBAS -= 30; ReceiptValidation_MRFMMUZMMBAS *= 5; ReceiptValidation_MRFMMUZMMBAS += 3;
        // From 402 to 225
        ReceiptValidation_WUFZPOWNFSMU += 273; ReceiptValidation_WUFZPOWNFSMU /= 3;
        // From 125 to 383
        ReceiptValidation_VBTHDICXHPUR -= 49; ReceiptValidation_VBTHDICXHPUR *= 5; ReceiptValidation_VBTHDICXHPUR += 3;
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[396]), 249, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MRFMMUZMMBAS_009D0053(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_000301CE((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key); \
if (ReceiptValidation_VBTHDICXHPUR_009D007D(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_KADXJRHVDZOZ -= 27; ReceiptValidation_KADXJRHVDZOZ *= 6;  \
ReceiptValidation_NOOKDWIVAYOR += 154; ReceiptValidation_NOOKDWIVAYOR /= 8;  \
ReceiptValidation_WBAEHJUGPRWW += 116; ReceiptValidation_WBAEHJUGPRWW /= 8;  \
ReceiptValidation_RWDMILWZSXGW += 90; ReceiptValidation_RWDMILWZSXGW /= 11;  \
ReceiptValidation_IURCWQOEJNFU -= 4; ReceiptValidation_IURCWQOEJNFU *= 13; ReceiptValidation_IURCWQOEJNFU += 10;  \
ReceiptValidation_MRFMMUZMMBAS -= 30; ReceiptValidation_MRFMMUZMMBAS *= 5; ReceiptValidation_MRFMMUZMMBAS += 3;  \
ReceiptValidation_WUFZPOWNFSMU += 273; ReceiptValidation_WUFZPOWNFSMU /= 3;  \
ReceiptValidation_VBTHDICXHPUR -= 49; ReceiptValidation_VBTHDICXHPUR *= 5; ReceiptValidation_VBTHDICXHPUR += 3;  \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptHash09F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
        CFMutableDataRef ReceiptValidation_data4;
        unsigned char ReceiptValidation_digest[483];
        volatile int ReceiptValidation_counter = 5; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 6; ReceiptValidation_counter += 2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
        CFNumberRef ReceiptValidation_key;
        char *ReceiptValidation_str1;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key);
        ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_015700B5(NULL, ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1) + ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2));
        ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1));
        ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2));
        CC_SHA1_CTX ReceiptValidation_hashctx1;
        ReceiptValidation_WUFZPOWNFSMU_000200E1(&ReceiptValidation_hashctx1);
        ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1));
        ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2));
        ReceiptValidation_WBAEHJUGPRWW_01280045(ReceiptValidation_digest, &ReceiptValidation_hashctx1);
        ReceiptValidation_OpenSSL_add_all_digests_01710093();
        EVP_MD_CTX ReceiptValidation_hashctx2;
        ReceiptValidation_EVP_MD_CTX_init_002600BF(&ReceiptValidation_hashctx2);
        char ReceiptValidation_str1_[483];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[312]), ReceiptValidation_str1_, 204, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1);
        ReceiptValidation_EVP_DigestInit_002600D8(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
        ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), (size_t) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1));
        ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), (size_t) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2));
        ReceiptValidation_EVP_DigestFinal_00AC005A(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
        CFDataRef ReceiptValidation_data5 = ReceiptValidation_IURCWQOEJNFU_00030176(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
        if (!ReceiptValidation_MRFMMUZMMBAS_009D010C(ReceiptValidation_data3, ReceiptValidation_data5)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_0002019E(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data4);
            ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5);
            goto ReceiptValidation_CheckReceiptHash09F_ReceiptValidation_bail;
        }
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5);
        // Global variables computation
        // From 77 to 409
        ReceiptValidation_NOOKDWIVAYOR -= 19; ReceiptValidation_NOOKDWIVAYOR *= 7; ReceiptValidation_NOOKDWIVAYOR += 3;
        // Set to 206
        ReceiptValidation_WBAEHJUGPRWW = 206;
        // From 268 to 354
        ReceiptValidation_MRFMMUZMMBAS -= 150; ReceiptValidation_MRFMMUZMMBAS *= 3;
        // From 225 to 63
        ReceiptValidation_WUFZPOWNFSMU += 90; ReceiptValidation_WUFZPOWNFSMU /= 5;
        // From 383 to 351
        ReceiptValidation_VBTHDICXHPUR += 319; ReceiptValidation_VBTHDICXHPUR /= 2;
    ReceiptValidation_CheckReceiptHash09F_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash09F(ReceiptValidation_ctx) { \
CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
CFMutableDataRef ReceiptValidation_data4; \
unsigned char ReceiptValidation_digest[483]; \
volatile int ReceiptValidation_counter = 5; ReceiptValidation_counter -= 2; ReceiptValidation_counter *= 6; ReceiptValidation_counter += 2;  \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
CFNumberRef ReceiptValidation_key; \
char *ReceiptValidation_str1; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_VBTHDICXHPUR_0157017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_key); \
ReceiptValidation_data4 = ReceiptValidation_CFDataCreateMutable_015700B5(NULL, ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1) + ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2)); \
ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1)); \
ReceiptValidation_KADXJRHVDZOZ_01570150(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2)); \
CC_SHA1_CTX ReceiptValidation_hashctx1; \
ReceiptValidation_WUFZPOWNFSMU_000200E1(&ReceiptValidation_hashctx1); \
ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1)); \
ReceiptValidation_RWDMILWZSXGW_0128002E(&ReceiptValidation_hashctx1, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), (CC_LONG) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2)); \
ReceiptValidation_WBAEHJUGPRWW_01280045(ReceiptValidation_digest, &ReceiptValidation_hashctx1); \
ReceiptValidation_OpenSSL_add_all_digests_01710093(); \
EVP_MD_CTX ReceiptValidation_hashctx2; \
ReceiptValidation_EVP_MD_CTX_init_002600BF(&ReceiptValidation_hashctx2); \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[312]), ReceiptValidation_str1_, 204, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1); \
ReceiptValidation_EVP_DigestInit_002600D8(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_CFDataGetLength_009D01C0((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data1), (size_t) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data1)); \
ReceiptValidation_EVP_DigestUpdate_00AC011A(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_0003016F(ReceiptValidation_data2), (size_t) ReceiptValidation_CFDataGetLength_009D01C0(ReceiptValidation_data2)); \
ReceiptValidation_EVP_DigestFinal_00AC005A(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
CFDataRef ReceiptValidation_data5 = ReceiptValidation_IURCWQOEJNFU_00030176(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
if (!ReceiptValidation_MRFMMUZMMBAS_009D010C(ReceiptValidation_data3, ReceiptValidation_data5)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_0002019E(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data1); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data2); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data4); \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5); \
goto ReceiptValidation_CheckReceiptHash09F_ReceiptValidation_bail; \
} \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data5); \
ReceiptValidation_NOOKDWIVAYOR -= 19; ReceiptValidation_NOOKDWIVAYOR *= 7; ReceiptValidation_NOOKDWIVAYOR += 3;  \
ReceiptValidation_WBAEHJUGPRWW = 206; \
ReceiptValidation_MRFMMUZMMBAS -= 150; ReceiptValidation_MRFMMUZMMBAS *= 3;  \
ReceiptValidation_WUFZPOWNFSMU += 90; ReceiptValidation_WUFZPOWNFSMU /= 5;  \
ReceiptValidation_VBTHDICXHPUR += 319; ReceiptValidation_VBTHDICXHPUR /= 2;  \
ReceiptValidation_CheckReceiptHash09F_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_000300CA(ReceiptValidation_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef ReceiptValidation_date1 = ReceiptValidation_WBAEHJUGPRWW_015700CE(NULL, ReceiptValidation_VBTHDICXHPUR_009D015F());
        CFNumberRef ReceiptValidation_key = ReceiptValidation_WUFZPOWNFSMU_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_MRFMMUZMMBAS_009D0162((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key);
        if (ReceiptValidation_date2 && ReceiptValidation_NOOKDWIVAYOR_00030199(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key);
            ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1);
            ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key);
            ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1);
        }
        // Global variables computation
        // From 336 to 20
        ReceiptValidation_KADXJRHVDZOZ += 24; ReceiptValidation_KADXJRHVDZOZ /= 18;
        // From 409 to 383
        ReceiptValidation_NOOKDWIVAYOR += 357; ReceiptValidation_NOOKDWIVAYOR /= 2;
        // From 354 to 238
        ReceiptValidation_MRFMMUZMMBAS += 122; ReceiptValidation_MRFMMUZMMBAS /= 2;
        // From 63 to 226
        ReceiptValidation_WUFZPOWNFSMU -= 18; ReceiptValidation_WUFZPOWNFSMU *= 5; ReceiptValidation_WUFZPOWNFSMU += 1;
        // From 351 to 416
        ReceiptValidation_VBTHDICXHPUR -= 213; ReceiptValidation_VBTHDICXHPUR *= 3; ReceiptValidation_VBTHDICXHPUR += 2;
        ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1);
    }
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef ReceiptValidation_date1 = ReceiptValidation_WBAEHJUGPRWW_015700CE(NULL, ReceiptValidation_VBTHDICXHPUR_009D015F()); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_WUFZPOWNFSMU_0003003F(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_MRFMMUZMMBAS_009D0162((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key); \
if (ReceiptValidation_date2 && ReceiptValidation_NOOKDWIVAYOR_00030199(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000201B8(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key); \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1); \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_key); \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1); \
} \
ReceiptValidation_KADXJRHVDZOZ += 24; ReceiptValidation_KADXJRHVDZOZ /= 18;  \
ReceiptValidation_NOOKDWIVAYOR += 357; ReceiptValidation_NOOKDWIVAYOR /= 2;  \
ReceiptValidation_MRFMMUZMMBAS += 122; ReceiptValidation_MRFMMUZMMBAS /= 2;  \
ReceiptValidation_WUFZPOWNFSMU -= 18; ReceiptValidation_WUFZPOWNFSMU *= 5; ReceiptValidation_WUFZPOWNFSMU += 1;  \
ReceiptValidation_VBTHDICXHPUR -= 213; ReceiptValidation_VBTHDICXHPUR *= 3; ReceiptValidation_VBTHDICXHPUR += 2;  \
ReceiptValidation_CFRelease_009D0156(ReceiptValidation_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void ReceiptValidation_InAppChecker0A9(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFIndex ReceiptValidation_index1, ReceiptValidation_index2;
        CFNumberRef ReceiptValidation_key1, ReceiptValidation_key2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking InApp purchases");
        ReceiptValidation_key1 = ReceiptValidation_KADXJRHVDZOZ_00030014(NULL, kCFNumberIntType, &ReceiptValidation_value);
        // Extract InApp Purchase
        CFArrayRef ReceiptValidation_idents = (CFArrayRef) ReceiptValidation_ctx->inapp_identifiers;
        CFArrayRef ReceiptValidation_purchases = (CFArrayRef) ReceiptValidation_NOOKDWIVAYOR_0003017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key1);
        if (ReceiptValidation_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_idents); ReceiptValidation_index1++) {
                CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_idents, ReceiptValidation_index1);
                Boolean ReceiptValidation_found = false;
                // Iterate over the purchases
                for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_purchases); ReceiptValidation_index2++) {
                    CFDictionaryRef ReceiptValidation_purchase = (CFDictionaryRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_purchases, ReceiptValidation_index2);
                    ReceiptValidation_value = ReceiptValidation_StoreInAppAttributeTypeProductIdentifer;
                    ReceiptValidation_key2 = ReceiptValidation_KADXJRHVDZOZ_00030014(NULL, kCFNumberIntType, &ReceiptValidation_value);
                    CFStringRef ReceiptValidation_product_identifier = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_0003017F(ReceiptValidation_purchase, ReceiptValidation_key2);
                    ReceiptValidation_CFRelease_00030156(ReceiptValidation_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (ReceiptValidation_VBTHDICXHPUR_009D01A0(ReceiptValidation_ident, ReceiptValidation_product_identifier, 0) == kCFCompareEqualTo) {
                        ReceiptValidation_found |= true;
                        (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), true, __SAFE_CAST(NSDictionary *, ReceiptValidation_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!ReceiptValidation_found) {
                    (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the ReceiptValidation_idents and call the block back
            for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_idents); ReceiptValidation_index1++) {
                CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_idents, ReceiptValidation_index1);
                (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL);
            }
        }
        ReceiptValidation_CFRelease_00030156(ReceiptValidation_key1);
    }
#else
#define ReceiptValidation_InAppChecker0A9(ReceiptValidation_ctx) { \
CFIndex ReceiptValidation_index1, ReceiptValidation_index2; \
CFNumberRef ReceiptValidation_key1, ReceiptValidation_key2; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking InApp purchases"); \
ReceiptValidation_key1 = ReceiptValidation_KADXJRHVDZOZ_00030014(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFArrayRef ReceiptValidation_idents = (CFArrayRef) ReceiptValidation_ctx->inapp_identifiers; \
CFArrayRef ReceiptValidation_purchases = (CFArrayRef) ReceiptValidation_NOOKDWIVAYOR_0003017F((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key1); \
if (ReceiptValidation_purchases) { \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_idents); ReceiptValidation_index1++) { \
CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_idents, ReceiptValidation_index1); \
Boolean ReceiptValidation_found = false; \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_purchases); ReceiptValidation_index2++) { \
CFDictionaryRef ReceiptValidation_purchase = (CFDictionaryRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_purchases, ReceiptValidation_index2); \
ReceiptValidation_value = ReceiptValidation_StoreInAppAttributeTypeProductIdentifer; \
ReceiptValidation_key2 = ReceiptValidation_KADXJRHVDZOZ_00030014(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_product_identifier = (CFStringRef) ReceiptValidation_NOOKDWIVAYOR_0003017F(ReceiptValidation_purchase, ReceiptValidation_key2); \
ReceiptValidation_CFRelease_00030156(ReceiptValidation_key2); \
if (ReceiptValidation_VBTHDICXHPUR_009D01A0(ReceiptValidation_ident, ReceiptValidation_product_identifier, 0) == kCFCompareEqualTo) { \
ReceiptValidation_found |= true; \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), true, __SAFE_CAST(NSDictionary *, ReceiptValidation_purchase)); \
} \
} \
if (!ReceiptValidation_found) { \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL); \
} \
} \
} else { \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MRFMMUZMMBAS_015700EE(ReceiptValidation_idents); ReceiptValidation_index1++) { \
CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_WUFZPOWNFSMU_009D00E2(ReceiptValidation_idents, ReceiptValidation_index1); \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL); \
} \
} \
ReceiptValidation_CFRelease_00030156(ReceiptValidation_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void ReceiptValidation_CleanUp0AC(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
        CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
        if (ReceiptValidation_references[0]) {
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[0]);
            ReceiptValidation_references[0] = NULL;
        }
        if (ReceiptValidation_references[1]) {
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[1]);
            ReceiptValidation_references[1] = NULL;
        }
        if (ReceiptValidation_references[2]) {
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[2]);
            ReceiptValidation_references[2] = NULL;
        }
        if (ReceiptValidation_references[3]) {
            ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[3]);
            ReceiptValidation_references[3] = NULL;
        }
    }
#else
#define ReceiptValidation_CleanUp0AC(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
if (ReceiptValidation_references[0]) { \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[0]); \
ReceiptValidation_references[0] = NULL; \
} \
if (ReceiptValidation_references[1]) { \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[1]); \
ReceiptValidation_references[1] = NULL; \
} \
if (ReceiptValidation_references[2]) { \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[2]); \
ReceiptValidation_references[2] = NULL; \
} \
if (ReceiptValidation_references[3]) { \
ReceiptValidation_CFRelease_0003012F(ReceiptValidation_references[3]); \
ReceiptValidation_references[3] = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void ReceiptValidation_CheckInAppPurchases(NSArray *_inapp_identifiers, ReceiptValidation_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
        // Create contexts
        ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        ReceiptValidation_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        ReceiptValidation_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (ReceiptValidation_InAppValidateBlock) _inapp_block);
        // Initial value
        int ReceiptValidation_index = 3757;
        // While loop
        while(ReceiptValidation_index != 3960) {
            if (!ReceiptValidation_setjmp_000200F2(ReceiptValidation_JumpBuf)) {
                switch(ReceiptValidation_index) {
                    case 2657:
                        ReceiptValidation_CheckReceiptHash09F((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 2559; ReceiptValidation_index /= 2;
                        break;
                    case 2809:
                        ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1803; ReceiptValidation_index /= 4;
                        break;
                    case 3482:
                        ReceiptValidation_GetGUID04E((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 2071; ReceiptValidation_index /= 3;
                        break;
                    case 3534:
                        ReceiptValidation_CheckReceiptSignature06C((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 3196; ReceiptValidation_index /= 2;
                        break;
                    case 756:
                        ReceiptValidation_InAppChecker0A9((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 369; ReceiptValidation_index *= 4; ReceiptValidation_index += 3;
                        break;
                    case 826:
                        ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 295; ReceiptValidation_index *= 5; ReceiptValidation_index += 2; 
                        break;
                    case 1851:
                        ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 915; ReceiptValidation_index *= 3; ReceiptValidation_index += 1; 
                        break;
                    case 1153:
                        ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 447; ReceiptValidation_index *= 5; ReceiptValidation_index += 4; 
                        break;
                    case 2608:
                        ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1172; ReceiptValidation_index /= 5; 
                        break;
                    case 1551:
                        ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 561; ReceiptValidation_index *= 4; 
                        break;
                    case 3757:
                        ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1227; ReceiptValidation_index /= 7; 
                        break;
                    case 712:
                        ReceiptValidation_LoadReceipt040((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 132; ReceiptValidation_index *= 6; ReceiptValidation_index += 2; 
                        break;
                    case 3365:
                        ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1591; ReceiptValidation_index /= 6; 
                        break;
                }
            } else {
                break;
            }
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define ReceiptValidation_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
ReceiptValidation_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
ReceiptValidation_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (ReceiptValidation_InAppValidateBlock) _inapp_block); \
int ReceiptValidation_index = 3757; \
while(ReceiptValidation_index != 3960) { \
if (!ReceiptValidation_setjmp_000200F2(ReceiptValidation_JumpBuf)) { \
switch(ReceiptValidation_index) { \
case 2657: \
ReceiptValidation_CheckReceiptHash09F((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2559; ReceiptValidation_index /= 2;  \
break; \
case 2809: \
ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1803; ReceiptValidation_index /= 4;  \
break; \
case 3482: \
ReceiptValidation_GetGUID04E((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2071; ReceiptValidation_index /= 3;  \
break; \
case 3534: \
ReceiptValidation_CheckReceiptSignature06C((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 3196; ReceiptValidation_index /= 2;  \
break; \
case 756: \
ReceiptValidation_InAppChecker0A9((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 369; ReceiptValidation_index *= 4; ReceiptValidation_index += 3;  \
break; \
case 826: \
ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 295; ReceiptValidation_index *= 5; ReceiptValidation_index += 2;  \
break; \
case 1851: \
ReceiptValidation_CheckBundleIdentifier05C((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 915; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
break; \
case 1153: \
ReceiptValidation_GetReceiptInformation065((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 447; ReceiptValidation_index *= 5; ReceiptValidation_index += 4;  \
break; \
case 2608: \
ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1172; ReceiptValidation_index /= 5;  \
break; \
case 1551: \
ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 561; ReceiptValidation_index *= 4;  \
break; \
case 3757: \
ReceiptValidation_GetMainBundle017((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1227; ReceiptValidation_index /= 7;  \
break; \
case 712: \
ReceiptValidation_LoadReceipt040((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 132; ReceiptValidation_index *= 6; ReceiptValidation_index += 2;  \
break; \
case 3365: \
ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1591; ReceiptValidation_index /= 6;  \
break; \
} \
} else { \
break; \
} \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

