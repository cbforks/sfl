//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.treasurebox.gear.ios
// CFBundleVersion            : 16
// Prefix                     : ReceiptValidation
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __ReceiptValidation_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^ReceiptValidation_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        ReceiptValidation_StoreNone = 3554,
        // Bundle identifier
        ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Application version
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Opaque value
        ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
        // Hash value
        ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
        // In-app purchase receipt
        ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
        // Original Application Version
        ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 2),
        // Receipt Expiration Date
        ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 2),
        // Quantity
        ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 2),
        // Product identifier
        ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 2),
        // Transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 2),
        // Purchase date
        ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 2),
        // Original transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 2),
        // Original purchase date
        ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 2),
        // Subscription Expiration Date
        ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 2),
        // Web Order Line Item ID
        ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 2),
        // Cancellation Date
        ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 2)
        
    } ReceiptValidation_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _ReceiptValidation_CheckingContext {
        CFTypeRef receipt_data;
        CFTypeRef dummy0000;
        CFTypeRef inapp_block;
        CFTypeRef dummy0004;
        CFTypeRef guid_data;
        CFTypeRef inapp_identifiers;
        CFTypeRef dummy0003;
        CFTypeRef dummy0002;
        CFTypeRef main_bundle;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0001;
        CFTypeRef ca_data;
    } ReceiptValidation_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _ReceiptValidation_ParsingContext {
        CFTypeRef dummy0004;
        CFTypeRef dummy0007;
        const unsigned char * ptr;
        const unsigned char * end;
        CFTypeRef dummy0000;
        CFTypeRef dummy0003;
        CFTypeRef dummy0008;
        CFTypeRef dummy0006;
        CFTypeRef dummy0005;
        struct _ReceiptValidation_ParsingContext * parent;
        CFTypeRef dummy0002;
        CFTypeRef dummy0001;
        CFTypeRef dictionary;
    } ReceiptValidation_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__ReceiptValidation_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__ReceiptValidation_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__ReceiptValidation_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__ReceiptValidation_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__ReceiptValidation_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *ReceiptValidation_Strings[483] = {
        // "ASN1_OBJECT_free" / M(Xor3) / S(230) / L(16)
        "\xb6\xa4\xb9\xc6\xa8\xb8\xb5\xbd\xb2\xb4\xa3\xa8\x91\x85\x92\x92\xf7",
        // "EVP_get_digestbyname" / M(Xor1) / S(19) / L(20)
        "\x56\x45\x43\x4c\x74\x76\x67\x4c\x77\x7a\x74\x76\x60\x67\x71\x6a\x7d\x72\x7e\x76\x13",
        // "" / M(None) / S(0) / L(0)
        "\x0d\xee\xb4\x26\x4b\x6d\xcb\x3e\xaa\xaf\xe9\xfd\xde\x47\x5d\x87\x27\x07\xbd\xeb\xca\x4c\xf1\xfb\xc1\xdf\x00\x3b\x87\x35\x18\x32",
        // "" / M(None) / S(0) / L(0)
        "\x8e\xe8\xcf\xb6\x8c\xfa\x2c\x2c\x13\x65\x19\x47\x44\xc6\x85\x62\x09\x47\x76\x2e\xd5\xe5\xbb\xe2\x2d\x7e\xbd\x4c\xc3\xe3\xf3\x96",
        // "CFDataGetLength" / M(Xor1) / S(40) / L(15)
        "\x6b\x6e\x6c\x49\x5c\x49\x6f\x4d\x5c\x64\x4d\x46\x4f\x5c\x40\x28",
        // "CFBundleGetMainBundle" / M(Xor3) / S(146) / L(21)
        "\xeb\xee\xea\xdd\xc6\xcc\xc4\xcd\xef\xcd\xdc\xe5\xc9\xc1\xc6\xea\xdd\xc6\xcc\xc4\xcd\xa8",
        // "" / M(None) / S(0) / L(0)
        "\xe3\xe8\xce\xe2\xd3\x0f\x59\xee\x14\xab\x40\xc8\xc1\xb6\xbd\xac\x44\x6f\x22\x88\xae\x58\x8a\xb9\x3a\x51\xd6\x64\xf8\xc7\xa3\x78",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(35) / L(40)
        "\x15\x12\x12\x66\x16\x61\x15\x15\x11\x60\x16\x1a\x10\x62\x13\x1b\x65\x65\x16\x1b\x67\x12\x17\x62\x66\x11\x11\x17\x16\x11\x67\x12\x1a\x1b\x67\x65\x15\x60\x15\x13\x23\xbf\x7d\x39\x3e\x36\xeb\x4e\x79",
        // "CFReadStreamOpen" / M(Xor4) / S(10) / L(16)
        "\xe9\xec\xf8\xcf\xcb\xce\xf9\xde\xd8\xcf\xcb\xc7\xe5\xda\xcf\xc4\xaa",
        // "CFReadStreamOpen" / M(Rot) / S(172) / L(16)
        "\xef\xf2\xfe\x11\x0d\x10\xff\x20\x1e\x11\x0d\x19\xfb\x1c\x11\x1a\xac",
        // "com.treasurebox.gear.ios" / M(Xor3) / S(221) / L(24)
        "\x9d\x91\x93\xd0\x8a\x8c\x9b\x9f\x8d\x8b\x8c\x9b\x9c\x91\x86\xd0\x99\x9b\x9f\x8c\xd0\x97\x91\x8d\xfe\xfe\xd1\x4d\xdf\xc8\xcc\x8a\x19",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(41) / L(24)
        "\x65\x3f\x39\x38\x65\x26\x23\x28\x65\x26\x23\x28\x19\x33\x39\x3e\x2f\x27\x64\x2e\x33\x26\x23\x28\x4a\x57\x61\x93\x73\xce\x6f\xa9\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x56\x7b\xce\xd0\x44\x21\xb9\xd0\x2b\xd5\x0b\x22\xfa\x48\x16\x83\xf1\x8e\x38\x27\x7c\xde\x59\x45\x17\xbf\x16\x0f\xeb\xb2\x12\x37",
        // "PKCS7_verify" / M(Xor4) / S(67) / L(12)
        "\x60\x7b\x73\x63\x07\x6f\x46\x55\x42\x59\x56\x49\x30\xcc\x7b\x13",
        // "sk_num" / M(Rot) / S(133) / L(6)
        "\xf8\xf0\xe4\xf3\xfa\xf2\x85\x9a\x69\xdd\x75\x84\xb6\x0c\x2d\x49",
        // "" / M(None) / S(0) / L(0)
        "\x1d\xf2\xac\x4e\x00\x37\x7c\x89\x4e\x3c\x7f\x1d\x83\x75\x62\xf7\xfe\xc9\x46\xdb\x5f\xe5\x05\x07\xc8\x1f\x57\x70\x33\x22\x62\xf0",
        // "ASN1_get_object" / M(Xor3) / S(95) / L(15)
        "\x2e\x3c\x21\x5e\x30\x08\x0a\x1b\x30\x00\x0d\x05\x0a\x0c\x1b\x6f",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(36) / L(26)
        "\x67\x62\x76\x41\x45\x40\x77\x50\x56\x41\x45\x49\x67\x56\x41\x45\x50\x41\x73\x4d\x50\x4c\x62\x4d\x48\x41\x24\x6a\xc0\xa9\x47\x9f\x61\x64\xf4",
        // "" / M(None) / S(0) / L(0)
        "\x94\x24\x50\xee\x6c\x69\x58\xd2\x3e\xa9\x6e\x7a\xf4\x26\x74\x50\x4f\xac\x36\xb3\x30\xa1\x67\x1f\xfc\xc0\x09\x4f\xbd\x11\x43\xc6",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x97\x37\xa5\x5b\xf9\xca\xad\x5d\xe1\xa0\x9d\xad\x0b\x25\x02\x4c\x91\xac\x12\xb8\x49\x66\x62\x2e\xe2\xbc\x45\x8c\xbe\xab\x90",
        // "" / M(None) / S(0) / L(0)
        "\xf5\x2d\x68\x5d\x9b\xa6\x20\x7e\x4b\xa1\x5f\xe2\x0b\x7f\xa6\x2f\xde\x53\x97\xe8\xe3\x41\xd9\x50\x73\x98\xa4\xdb\x94\x7a\xf8\xef",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(115) / L(25)
        "\xd6\xd3\xd1\xfc\xf6\xe1\xfc\xfa\xfb\xf4\xe7\xec\xd6\xe7\xf0\xf4\xe1\xf0\xd8\xe0\xe1\xf4\xf7\xf9\xf0\x95\xf9\x9f\xff\xe2\xa7\x25\x60\x8b",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(137) / L(32)
        "\xf0\xf0\xf0\xf0\xae\xa4\xae\xc4\xc4\xae\xa4\xae\xed\xed\xae\xdd\xae\xc1\xc1\xae\xb3\xae\xe4\xe4\xae\xb3\xae\xfa\xfa\xae\xd3\xae\x89",
        // "setDelegate:" / M(Xor4) / S(60) / L(12)
        "\xb3\xa5\xb4\x84\xa5\xac\xa5\xa7\xa1\xb4\xa5\xfa\xc0\xfd\x76\xf1",
        // "strlen" / M(Xor4) / S(197) / L(6)
        "\x23\x24\x22\x3c\x35\x3e\x50\x91\x2a\xaa\x3b\x5c\x20\x25\x73\x9e",
        // "CFDictionaryGetValue" / M(Xor2) / S(186) / L(20)
        "\xec\xe9\xeb\xc6\xcc\xdb\xc6\xc0\xc1\xce\xdd\xd6\xe8\xca\xdb\xf9\xce\xc3\xda\xca\xaf",
        // "SHA1_Init" / M(Xor3) / S(228) / L(9)
        "\xa7\xbc\xb5\xc5\xab\xbd\x9a\x9d\x80\xf4\x24\xaf\x38\x7f\x9b\x31",
        // "CFDataAppendBytes" / M(Xor3) / S(19) / L(17)
        "\x66\x63\x61\x44\x51\x44\x64\x55\x55\x40\x4b\x41\x67\x5c\x51\x40\x56\x25",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(209) / L(24)
        "\x9a\xb2\xb7\xb5\x90\x85\x94\xb7\x9e\x83\x9c\x90\x85\x85\x94\x83\xa5\x98\x9c\x94\xab\x9e\x9f\x94\xf1\x1d\xf2\x91\xc4\xa5\x3e\x07\x3c",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(203) / L(29)
        "\x9a\xb2\xb7\xa5\x88\x81\x94\xb5\x98\x92\x85\x98\x9e\x9f\x90\x83\x88\xba\x94\x88\xb2\x90\x9d\x9d\xb3\x90\x92\x9a\x82\xf1\x9d\xa3\x1e\xde\x6e\x05\x89\x6a",
        // "CFReadStreamOpen" / M(Xor3) / S(194) / L(16)
        "\x90\x95\x81\xb6\xb2\xb7\x80\xa7\xa1\xb6\xb2\xbe\x9c\xa3\xb6\xbd\xd3",
        // "identifierForVendor" / M(Rot) / S(61) / L(19)
        "\xa6\xa1\xa2\xab\xb1\xa6\xa3\xa6\xa2\xaf\x83\xac\xaf\x93\xa2\xab\xa1\xac\xaf\x3d",
        // "CFReadStreamRead" / M(Xor2) / S(109) / L(16)
        "\x3f\x3a\x2e\x19\x1d\x18\x2f\x08\x0e\x19\x1d\x11\x2e\x19\x1d\x18\x7c",
        // "CC_SHA1_Update" / M(Xor2) / S(224) / L(14)
        "\xb3\xb3\xaf\xa3\xb8\xb1\xc1\xaf\xa5\x80\x94\x91\x84\x95\xf0\x3b",
        // "%02X:" / M(Xor3) / S(225) / L(5)
        "\xd4\xc1\xc3\xa9\xcb\xf1\x67\xfc\x85\xfb\x1b\xe0\x6d\x3f\x40\xb5",
        // "EVP_DigestFinal" / M(Xor4) / S(48) / L(15)
        "\x45\x56\x50\x5f\x44\x69\x67\x65\x73\x74\x46\x69\x6e\x61\x6c\x00",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(127) / L(24)
        "\x8f\xd5\xd3\xd2\x8f\xcc\xc9\xc2\x8f\xcc\xc9\xc2\xf3\xd9\xd3\xd4\xc5\xcd\x8e\xc4\xd9\xcc\xc9\xc2\xa0\x54\x17\xd2\xfb\x7e\xc3\x02\xd3",
        // "ASN1_get_object" / M(Xor1) / S(156) / L(15)
        "\xdd\xcf\xd2\xad\xc3\xfb\xf9\xe8\xc3\xf3\xfe\xf6\xf9\xff\xe8\x9c",
        // "CFDictionaryCreateMutable" / M(Xor2) / S(96) / L(25)
        "\x01\x04\x06\x2b\x21\x36\x2b\x2d\x2c\x23\x30\x3b\x01\x30\x27\x23\x36\x27\x0f\x37\x36\x23\x20\x2e\x27\x42\x1e\x5c\x2c\x2b\xc5\xfa\x67\xee",
        // "dlsym" / M(Rot) / S(69) / L(5)
        "\xa9\xb1\xb8\xbe\xb2\x45\x77\x7d\xc0\xaa\x2b\x17\x0b\x31\xe9\xc0",
        // "strncmp" / M(Xor1) / S(58) / L(7)
        "\x49\x4e\x48\x54\x59\x57\x4a\x3a\x93\x8c\xa0\xf3\x51\x7c\xcb\xe8",
        // "" / M(None) / S(0) / L(0)
        "\x5d\xfa\xa7\xc1\x90\x69\x81\xe6\x87\x77\x23\xfe\xd5\x0d\x3d\x65\x69\xb2\xd3\x85\xa6\x93\xc9\x08\xda\xb1\x27\xfa\x4d\xc9\xee\xae",
        // "CFStringCreateWithBytes" / M(Xor1) / S(174) / L(23)
        "\xed\xe8\xfd\xda\xdc\xc7\xc0\xc9\xed\xdc\xcb\xcf\xda\xcb\xf9\xc7\xda\xc6\xec\xd7\xda\xcb\xdd\xae\xce\x99\xa1\x1d\xac\x17\x13\x73",
        // "" / M(None) / S(0) / L(0)
        "\x88\xa3\xeb\x53\x54\xd8\x91\xe1\xc4\xd1\x5c\x8f\x95\x88\xa4\x65\x96\x99\xa2\x2a\xf8\x1a\xcd\x14\xe7\x41\x8b\xab\x22\x49\x1e\xd4",
        // "CFDictionaryAddValue" / M(Xor2) / S(147) / L(20)
        "\xc5\xc0\xc2\xef\xe5\xf2\xef\xe9\xe8\xe7\xf4\xff\xc7\xe2\xe2\xd0\xe7\xea\xf3\xe3\x86",
        // "d2i_PKCS7_bio" / M(Xor3) / S(137) / L(13)
        "\xfd\xab\xf0\xc6\xc9\xd2\xda\xca\xae\xc6\xfb\xf0\xf6\x99\xa6\xed",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(201) / L(66)
        "\xa5\xd9\xf3\xf9\xfe\xef\xe7\xa5\xc6\xe3\xe8\xf8\xeb\xf8\xf3\xa5\xcc\xf8\xeb\xe7\xef\xfd\xe5\xf8\xe1\xf9\xa5\xc9\xe5\xf8\xef\xcc\xe5\xff\xe4\xee\xeb\xfe\xe3\xe5\xe4\xa4\xec\xf8\xeb\xe7\xef\xfd\xe5\xf8\xe1\xa5\xc9\xe5\xf8\xef\xcc\xe5\xff\xe4\xee\xeb\xfe\xe3\xe5\xe4\x8a",
        // "NSBundle" / M(Xor3) / S(66) / L(8)
        "\x1c\x01\x10\x27\x3c\x36\x3e\x37\x52\x63\x37\x1a\x33\xf8\xfe\x84",
        // "." / M(Xor2) / S(86) / L(1)
        "\x68\x46\x47\x5b\x10\x31\x36\x38\xd3\x41\x33\x0e\x11\x5a\x82\x67",
        // "" / M(None) / S(0) / L(0)
        "\x47\x99\xd4\x9a\xae\xce\x69\xb9\xf4\x8a\xcc\x74\x8f\x9a\x8d\xe4\x63\x41\xd1\xbd\x77\xf4\x37\x70\x53\xff\xcd\x0f\xd0\x78\x2c\x8a",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(165) / L(59)
        "\xdb\xd6\xdf\xd6\x0a\xdf\xda\x07\xdf\xdb\xdb\xdf\xd7\x08\xdf\xda\xde\xdf\xd8\x06\xdf\xd5\xdd\xdf\x0b\x0b\xdf\xda\xdd\xdf\x09\xd6\xdf\xd9\x06\xdf\x0a\xd7\xdf\xd7\xd9\xdf\xda\xd7\xdf\x09\xd6\xdf\xde\xdd\xdf\x09\x0b\xdf\xdb\x08\xdf\xdb\xd5\xa5\x1a\x61\xe1\x1b\x46\xed\xb9\xb9",
        // "" / M(None) / S(0) / L(0)
        "\x2f\x09\x80\xae\xe0\x5c\x7f\x88\x9f\x78\x1c\x7d\x6e\x26\xf3\xec\xd5\xf9\x0b\x73\x1c\x0f\x20\x10\x7c\x34\xfb\xee\x25\xac\x73\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x66\x64\x8f\x72\x30\x76\xbe\x67\x65\x34\xf9\xa2\x55\x19\x4c\xb3\xaa\x94\xd4\x5f\x89\x3e\xa0\xee\x6e\x4c\xac\x8c\x52\x2a\x29\x6b",
        // "sk_free" / M(Xor4) / S(17) / L(7)
        "\x63\x7b\x4f\x76\x62\x75\x75\x10\x56\x30\x33\xa1\xad\x6f\xcd\x5a",
        // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(130) / L(24)
        "\xe0\xe5\xe2\xc1\xd0\xcc\xcf\xd6\xd7\xc6\xf7\xca\xce\xc6\xe4\xc6\xd7\xe0\xd6\xd1\xd1\xc6\xcd\xd7\xa3\x12\x67\x15\xd5\x66\x54\xef\x6c",
        // "CFDataAppendBytes" / M(Rot) / S(136) / L(17)
        "\xcb\xce\xcc\xe9\xfc\xe9\xc9\xf8\xf8\xed\xf6\xec\xca\x01\xfc\xed\xfb\x88",
        // "CFDataAppendBytes" / M(Xor1) / S(118) / L(17)
        "\x35\x30\x32\x17\x02\x17\x37\x06\x06\x13\x18\x12\x34\x0f\x02\x13\x05\x76",
        // "CFReadStreamRead" / M(Xor2) / S(1) / L(16)
        "\x53\x56\x42\x75\x71\x74\x43\x64\x62\x75\x71\x7d\x42\x75\x71\x74\x10",
        // "CC_SHA1_Final" / M(Rot) / S(228) / L(13)
        "\x27\x27\x43\x37\x2c\x25\x15\x43\x2a\x4d\x52\x45\x50\xe4\x22\xdb",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(193) / L(66)
        "\xad\xd1\xfb\xf1\xf6\xe7\xef\xad\xce\xeb\xe0\xf0\xe3\xf0\xfb\xad\xc4\xf0\xe3\xef\xe7\xf5\xed\xf0\xe9\xf1\xad\xc1\xed\xf0\xe7\xc4\xed\xf7\xec\xe6\xe3\xf6\xeb\xed\xec\xac\xe4\xf0\xe3\xef\xe7\xf5\xed\xf0\xe9\xad\xc1\xed\xf0\xe7\xc4\xed\xf7\xec\xe6\xe3\xf6\xeb\xed\xec\x82",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(7) / L(59)
        "\x3d\x38\x41\x38\x6c\x41\x3c\x69\x41\x3d\x3d\x41\x39\x6a\x41\x3c\x40\x41\x3a\x68\x41\x37\x3f\x41\x6d\x6d\x41\x3c\x3f\x41\x6b\x38\x41\x3b\x68\x41\x6c\x39\x41\x39\x3b\x41\x3c\x39\x41\x6b\x38\x41\x40\x3f\x41\x6b\x6d\x41\x3d\x6a\x41\x3d\x37\x07\xea\xae\x95\x10\xe7\xcb\x71\x39",
        // "CFDateCreate" / M(Xor1) / S(249) / L(12)
        "\xba\xbf\xbd\x98\x8d\x9c\xba\x8b\x9c\x98\x8d\x9c\xf9\x51\x00\x75",
        // "PKCS7_get0_signers" / M(Xor3) / S(49) / L(18)
        "\x14\x0f\x07\x17\x73\x1b\x23\x21\x30\x74\x1b\x37\x2d\x23\x2a\x21\x36\x37\x44",
        // "Apple Root CA" / M(Xor4) / S(247) / L(13)
        "\x31\x00\x00\x1c\x15\x50\x22\x1f\x1f\x04\x50\x33\x31\x70\x4e\xfd",
        // "sha1" / M(Xor3) / S(122) / L(4)
        "\xf9\xe2\xeb\xbb\x8a\x6e\xec\xea\x41\xc8\x9d\x19\x76\x72\x61\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x03\xef\x15\xa0\x4e\xc8\x92\xf3\x17\x51\x99\xd2\x7e\x58\xe6\x5e\x78\x88\xe4\x4b\x28\xe3\x35\xba\x7c\x96\xab\x34\x96\x3b\x45\x76",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(74) / L(23)
        "\x39\x21\x38\x0f\x09\x0f\x03\x1a\x1e\x38\x0f\x0c\x18\x0f\x19\x02\x38\x0f\x1b\x1f\x0f\x19\x1e\x6a\x18\x91\xe4\x86\x64\xab\xf7\x28",
        // "EVP_get_digestbyname" / M(Xor3) / S(117) / L(20)
        "\xcf\xdc\xda\xd5\xed\xef\xfe\xd5\xee\xe3\xed\xef\xf9\xfe\xe8\xf3\xe4\xeb\xe7\xef\x8a",
        // "" / M(None) / S(0) / L(0)
        "\xa0\x33\xe4\x6c\x51\xbf\x7c\x7c\x12\x04\xcc\x2f\x14\x50\xdf\x57\xa7\x84\x4d\x6f\x33\x88\x9f\x99\xcf\xa0\xfc\x47\x4b\xec\x29\x01",
        // "currentDevice" / M(Rot) / S(106) / L(13)
        "\xcd\xdf\xdc\xdc\xcf\xd8\xde\xae\xcf\xe0\xd3\xcd\xcf\x6a\x37\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x19\x0a\x1f\xd0\x18\x89\xfe\xa5\xf8\x83\xee\x4a\x64\x5c\x91\xa5\x85\xbd\x85\x97\x89\x31\x43\xa9\x5c\xf5\x36\xaf\x76\xa2\x96\x9b",
        // "X509_STORE_add_cert" / M(Xor4) / S(246) / L(19)
        "\x60\x0d\x08\x01\x67\x6b\x6c\x77\x6a\x7d\x67\x59\x5c\x5c\x67\x5b\x5d\x4a\x4c\x38",
        // "objc_msgSend" / M(Xor3) / S(26) / L(12)
        "\x45\x48\x40\x49\x75\x47\x59\x4d\x79\x4f\x44\x4e\x2a\x68\x87\xe2",
        // "start" / M(Rot) / S(107) / L(5)
        "\xde\xdf\xcc\xdd\xdf\x6b\x1b\xe8\xc9\xdd\x98\x7d\xc3\xfe\xb0\xc8",
        // "" / M(None) / S(0) / L(0)
        "\x03\xac\xcc\xc6\x04\xd5\x48\x9c\x70\xce\xe4\x5f\xb9\xed\x22\xd9\x76\x93\x44\xfb\xd9\xdd\xbb\xa3\x7a\xe1\xce\xa7\x60\xa0\x1e\x58",
        // "" / M(None) / S(0) / L(0)
        "\x54\x92\x43\x04\xa5\x8c\x3e\x31\x0d\x53\x41\x45\xe6\x4a\xcc\x42\xc5\x5a\xd4\x10\xdd\x95\xd1\x6e\x6f\xb0\xe5\xa2\xab\x89\x74\x6b",
        // "%02X:" / M(Xor3) / S(23) / L(5)
        "\x02\x17\x15\x7f\x1d\x27\xf2\x5a\x66\x8d\x66\x68\x4b\xa1\xf1\xce",
        // "" / M(None) / S(0) / L(0)
        "\x59\xe6\xab\x01\xf7\x3d\x21\x08\x2f\xff\x9d\x85\x4c\x71\x68\xe7\x59\x49\x27\xda\x06\xe7\xb3\xca\xb1\x03\x55\x4d\x14\x45\x43\xb1",
        // "" / M(None) / S(0) / L(0)
        "\xea\x2b\x70\x42\xec\xbe\xee\xb3\x19\xf3\x78\x71\x8b\x3c\x3d\xa9\xe3\xbe\x10\xd6\xc5\x3e\xaf\xe9\xf2\x73\x5d\x2e\x3d\x76\x66\xc5",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(178) / L(25)
        "\x8c\xe1\xe4\xed\x8b\x9a\x95\x99\x91\x8b\xb3\xb1\xa0\x8b\xa0\xb1\xac\xa0\x8b\xb6\xad\x8b\x9a\x9d\x90\xd4\xf9\x50\xd6\xa9\x7a\x37\x3a\x98",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(226) / L(31)
        "\x4d\x25\x28\x36\x5b\x52\x47\x26\x4b\x45\x56\x4b\x51\x50\x43\x54\x5b\x38\x43\x4e\x57\x47\x25\x43\x4e\x4e\x24\x43\x45\x4d\x55\xe2",
        // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(172) / L(25)
        "\xff\xe0\xfc\xe0\xf6\xfa\xfe\xe0\xff\xff\xfd\xf8\xfd\xfb\xe0\xff\xfe\xfe\xe0\xf8\xe0\xff\xff\xe0\xff\xce\x2c\x31\x02\x16\x5b\xc3\xd5\x03",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x07\xe2\x24\x03\x7d\x89\x24\x65\x31\x21\xbf\x68\x43\x39\x64\xb0\x7a\x40\x38\x48\x1a\xba\x29\x1a\x97\x24\x8c\x7d\x32\x6c\x57",
        // "CFBundleVersion" / M(Xor2) / S(136) / L(15)
        "\xdb\xde\xda\xed\xf6\xfc\xf4\xfd\xce\xfd\xea\xeb\xf1\xf7\xf6\x98",
        // "" / M(None) / S(0) / L(0)
        "\xd3\xb2\xc9\x38\xf8\x83\xed\x19\x2d\x9e\x95\x8b\xba\xb8\x49\xf6\x6d\xa8\xb5\x79\x4a\xc0\x32\x7a\xb5\xf1\x4a\xdd\xc9\xf0\x22\x0e",
        // "X509_STORE_free" / M(Xor4) / S(5) / L(15)
        "\x08\x65\x60\x69\x0f\x03\x04\x1f\x02\x15\x0f\x36\x22\x35\x35\x50",
        // "CC_SHA1_Init" / M(Rot) / S(41) / L(12)
        "\x6c\x6c\x88\x7c\x71\x6a\x5a\x88\x72\x97\x92\x9d\x29\x5e\x74\x8c",
        // "BIO_free" / M(Xor3) / S(95) / L(8)
        "\x2d\x26\x20\x30\x09\x1d\x0a\x0a\x6f\x63\xe7\x2f\xfc\x5b\x26\x60",
        // "dlsym" / M(Rot) / S(2) / L(5)
        "\x66\x6e\x75\x7b\x6f\x02\xa2\x3a\x05\xa9\xc7\x9c\x46\xe8\x31\x9b",
        // "objc_lookUpClass" / M(Xor4) / S(186) / L(16)
        "\x35\x38\x30\x39\x05\x36\x35\x35\x31\x0f\x2a\x19\x36\x3b\x29\x29\x5a",
        // "CFArrayGetCount" / M(Xor4) / S(70) / L(15)
        "\x23\x26\x21\x12\x12\x01\x19\x27\x05\x14\x23\x0f\x15\x0e\x14\x60",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(171) / L(25)
        "\x87\x98\x84\x98\x8e\x82\x86\x98\x87\x87\x85\x80\x85\x83\x98\x87\x86\x86\x98\x80\x98\x87\x87\x98\x87\xb6\xec\x6a\x98\x32\x92\xb2\xa8\x92",
        // "d2i_PKCS7_bio" / M(Xor1) / S(148) / L(13)
        "\xf0\xa6\xfd\xcb\xc4\xdf\xd7\xc7\xa3\xcb\xf6\xfd\xfb\x94\x21\xbe",
        // "alloc" / M(Rot) / S(224) / L(5)
        "\x41\x4c\x4c\x4f\x43\xe0\x3c\x64\x86\x41\x8a\xf8\xa2\x3a\xe4\x97",
        // "Apple Root CA" / M(Xor3) / S(143) / L(13)
        "\xde\xef\xef\xf3\xfa\xbf\xcd\xf0\xf0\xeb\xbf\xdc\xde\x9f\x61\x9f",
        // "CFDataCreateMutable" / M(Xor3) / S(146) / L(19)
        "\xe5\xe0\xe2\xc7\xd2\xc7\xe5\xd4\xc3\xc7\xd2\xc3\xeb\xd3\xd2\xc7\xc4\xca\xc3\xa6",
        // "CFDateFormatterCreate" / M(Rot) / S(219) / L(21)
        "\x1e\x21\x1f\x3c\x4f\x40\x21\x4a\x4d\x48\x3c\x4f\x4f\x40\x4d\x1e\x4d\x40\x3c\x4f\x40\xdb",
        // "EVP_get_digestbyname" / M(Xor4) / S(59) / L(20)
        "\x92\x81\x87\x88\xb0\xb2\xa3\x88\xb3\xbe\xb0\xb2\xa4\xa3\xb5\xae\xb9\xb6\xba\xb2\xd7",
        // "exit" / M(Rot) / S(220) / L(4)
        "\x41\x54\x45\x50\xdc\xf5\x9a\xbb\x13\x42\xfe\x5a\x4c\x41\x90\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x29\x4a\x03\xee\x95\xb1\x44\x65\x44\xde\x9f\x75\xe4\xde\xf3\x74\x5f\x6f\x29\xee\x31\x77\x61\x7e\x0e\x8e\x66\x9b\x5a\x12\x03\x59",
        // "BIO_write" / M(Rot) / S(0) / L(9)
        "\x42\x49\x4f\x5f\x77\x72\x69\x74\x65\x00\x5b\x22\x8f\x4d\x85\x5c",
        // "CFDictionaryGetValue" / M(Xor3) / S(105) / L(20)
        "\x3d\x38\x3a\x17\x1d\x0a\x17\x11\x10\x1f\x0c\x07\x39\x1b\x0a\x28\x1f\x12\x0b\x1b\x7e",
        // "currentDevice" / M(Xor3) / S(227) / L(13)
        "\x90\x86\x81\x81\x96\x9d\x87\xb7\x96\x85\x9a\x90\x96\xf3\x38\x1c",
        // "" / M(None) / S(0) / L(0)
        "\x16\xbf\xed\x95\x4a\xca\xbe\x91\x6f\xbc\x90\x9e\x71\xc9\x47\x80\xe8\x04\xc9\xe1\x74\x00\xe1\x38\xcc\x3e\x5e\x67\x9b\x40\x7e\xca",
        // "OpenSSL_add_all_digests" / M(Xor2) / S(85) / L(23)
        "\x3a\x05\x10\x1b\x26\x26\x39\x2a\x14\x11\x11\x2a\x14\x19\x19\x2a\x11\x1c\x12\x10\x06\x01\x06\x75\x69\x8a\x2f\x02\xac\x10\xfc\xa6",
        // "" / M(None) / S(0) / L(0)
        "\xea\x76\xb3\xf7\xf2\xb3\x03\xae\xea\x0b\x1a\x0c\x85\xd7\xc0\x7f\x02\xfc\xd2\xda\x5d\xdf\x13\x0d\x69\xa5\x0b\xc0\xf8\x7b\xcc\x7a",
        // "sha1" / M(Xor2) / S(22) / L(4)
        "\x75\x6e\x67\x37\x06\x78\x74\x6a\x5f\x24\x20\x23\x92\xca\x43\x43",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x72\xed\xed\x88\xbc\x44\x34\x49\x77\x0f\x94\x01\x9e\x84\x2f\xba\xea\x66\x64\x70\xc9\xe8\x61\xe0\xb8\x14\xc3\x0f\x50\xb5\xc4",
        // "NSBundle" / M(Xor1) / S(196) / L(8)
        "\x8a\x97\x86\xb1\xaa\xa0\xa8\xa1\xc4\x1f\x03\xa2\x53\x28\xab\x06",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(25) / L(40)
        "\xff\xf8\xf8\xac\xfc\xab\xff\xff\xfb\xaa\xfc\xf0\xfa\xa8\xf9\xf1\xaf\xaf\xfc\xf1\xad\xf8\xfd\xa8\xac\xfb\xfb\xfd\xfc\xfb\xad\xf8\xf0\xf1\xad\xaf\xff\xaa\xff\xf9\xc9\x86\x1d\xb9\x59\x70\x9d\xaf\xd4",
        // "." / M(Xor1) / S(212) / L(1)
        "\xfa\xd4\xa7\x93\x0a\x15\x06\x6a\xde\x74\xbe\x26\x5b\x19\xc8\x82",
        // "" / M(None) / S(0) / L(0)
        "\x15\x99\x5e\x08\x16\x1e\xfb\x66\xd0\xc4\xb1\xf3\x0b\x38\x6f\x8f\x57\x05\xc2\xef\x9c\x58\xc9\x58\x3b\x58\xd9\xfb\x2c\x30\x16\x2d",
        // "CFBundleShortVersionString" / M(Xor2) / S(38) / L(26)
        "\x46\x43\x47\x70\x6b\x61\x69\x60\x56\x6d\x6a\x77\x71\x53\x60\x77\x76\x6c\x6a\x6b\x56\x71\x77\x6c\x6b\x62\x05\xc1\x00\x29\x02\xbe\x3b\x63\xe6",
        // "CFEqual" / M(Xor3) / S(20) / L(7)
        "\x67\x62\x61\x55\x51\x45\x48\x24\xc8\x9f\xc1\xb7\xb7\x39\x33\x9b",
        // "EVP_DigestInit" / M(Rot) / S(148) / L(14)
        "\xd9\xea\xe4\xf3\xd8\xfd\xfb\xf9\x07\x08\xdd\x02\xfd\x08\x94\xe7",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(250) / L(26)
        "\x9a\x9f\x8b\xbc\xb8\xbd\x8a\xad\xab\xbc\xb8\xb4\x9a\xab\xbc\xb8\xad\xbc\x8e\xb0\xad\xb1\x9f\xb0\xb5\xbc\xd9\x3c\x30\x66\xae\x38\x25\x5c\x17",
        // "" / M(None) / S(0) / L(0)
        "\x9b\x98\x23\x6f\xd3\x77\xdd\x3e\x32\xb3\x4a\x32\x97\xa6\x58\xc0\xd2\x57\x98\xd8\x41\x5b\x6e\x44\x74\xfc\x02\x67\x1a\xf8\xd8\x97",
        // "%02x:" / M(Xor4) / S(10) / L(5)
        "\x85\x90\x92\xd8\x9a\xa0\x9e\xeb\x6c\x1c\x0b\xe9\x28\x3d\x2a\xd2",
        // "CC_SHA1_Final" / M(Rot) / S(98) / L(13)
        "\xa5\xa5\xc1\xb5\xaa\xa3\x93\xc1\xa8\xcb\xd0\xc3\xce\x62\x63\xd5",
        // "objc_msgSend" / M(Xor2) / S(177) / L(12)
        "\xce\xc3\xcb\xc2\xfe\xcc\xd2\xc6\xf2\xc4\xcf\xc5\xa1\xdf\x65\x33",
        // "ASN1_INTEGER_free" / M(Xor2) / S(16) / L(17)
        "\x43\x51\x4c\x33\x5d\x4b\x4c\x56\x47\x45\x47\x50\x5d\x64\x70\x67\x67\x02",
        // "" / M(None) / S(0) / L(0)
        "\x05\xe2\xd2\xeb\x03\x5d\x5f\xac\x47\x06\xbc\x56\xc7\x0f\xb5\x61\xd2\x77\x91\x6a\x27\xf7\x78\x8d\x6f\x92\xa2\x67\x21\xc3\x0a\x57",
        // "PKCS7_verify" / M(Xor4) / S(175) / L(12)
        "\xa0\xbb\xb3\xa3\xc7\xaf\x86\x95\x82\x99\x96\x89\xf0\xfd\x6f\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x87\xab\x41\xb3\x15\xb7\xb9\x9e\x22\x5f\x11\x90\xa0\x7f\x99\xda\x80\x25\x05\xa3\x76\x19\x63\x42\x2b\x6d\x95\x88\xa1\x54\xbb\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x82\x32\xd6\x1e\xc7\x72\x8a\x5a\xab\xda\x12\x11\xf8\x22\x20\x6c\xd5\x58\x17\x79\x24\x4f\xc9\x9c\x36\xf4\xbd\x9d\xa2\x68\x79\xe2",
        // "" / M(None) / S(0) / L(0)
        "\xbe\x95\xdb\x76\x46\x0e\xad\xae\xf6\xcb\xf7\xb4\xc2\xa7\x50\x3b\x24\xab\x33\x3a\xbe\x7f\xd2\x1b\xbe\x6c\x1f\x45\xf3\xbe\x63\x31",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x55\x3d\xbf\x3b\x6f\x1b\x2f\x3c\x62\xa8\xff\xbb\x4b\xbf\xec\x3d\x8c\xc5\x75\xd7\x68\xb3\xeb\x73\xb1\xf3\x71\x1f\x08\x38\x2b",
        // "CFEqual" / M(Rot) / S(12) / L(7)
        "\x4f\x52\x51\x7d\x81\x6d\x78\x0c\x6c\x5c\x2b\x54\x2a\xb1\x39\xe8",
        // "UIDevice" / M(Xor1) / S(127) / L(8)
        "\x2a\x36\x3b\x1a\x09\x16\x1c\x1a\x7f\xea\xf0\x29\xca\x4e\xa9\x61",
        // "" / M(None) / S(0) / L(0)
        "\xbd\x82\x05\x60\x50\xc9\x42\x0c\xc7\xd8\xa5\xf0\xf7\xb1\xbe\x77\xd0\x81\xdb\x28\xe2\x44\x8b\x84\x76\xa5\x55\x58\x32\x8e\x86\x3b",
        // "CFDataCreate" / M(Xor1) / S(180) / L(12)
        "\xf7\xf2\xf0\xd5\xc0\xd5\xf7\xc6\xd1\xd5\xc0\xd1\xb4\x2d\xce\x7b",
        // "" / M(None) / S(0) / L(0)
        "\xf7\xdf\x08\xe3\x34\x16\xc8\x91\x45\xe4\xec\xfd\xfc\xba\xf2\x62\xd4\xff\xe7\xdf\xf2\xe8\x86\x4b\x28\x5a\x66\xda\x53\xba\x88\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x48\xaf\x67\xa6\xee\xd7\x11\x6a\xbb\xe9\x1e\xea\x41\xc4\xe6\x0c\x4a\x73\xc8\x10\x0c\x17\x1a\x41\xa9\x83\xd4\xaa\x94\xf2\xe8\xce",
        // "CFDictionarySetValue" / M(Xor3) / S(145) / L(20)
        "\xe5\xe0\xe2\xcf\xc5\xd2\xcf\xc9\xc8\xc7\xd4\xdf\xf5\xc3\xd2\xf0\xc7\xca\xd3\xc3\xa6",
        // "c2i_ASN1_INTEGER" / M(Xor3) / S(208) / L(16)
        "\x82\xd3\x88\xbe\xa0\xb2\xaf\xd0\xbe\xa8\xaf\xb5\xa4\xa6\xa4\xb3\xe1",
        // "CFArrayGetCount" / M(Xor4) / S(237) / L(15)
        "\x93\x96\x91\xa2\xa2\xb1\xa9\x97\xb5\xa4\x93\xbf\xa5\xbe\xa4\xd0",
        // "longjmp" / M(Xor4) / S(62) / L(7)
        "\x8c\x8f\x8e\x87\x8a\x8d\x90\xe0\x2c\x73\x08\xea\x02\x87\x7e\xd8",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x00\x28\x66\x2b\xb3\x5c\x27\xb7\x8b\xaf\x05\xd7\x2f\x25\xce\x25\x6e\x61\x60\xed\x2c\x9d\xb3\xa6\xa5\x48\xdc\x16\x91\xc5\xa2",
        // "sk_free" / M(Xor1) / S(253) / L(7)
        "\x8e\x96\xa2\x9b\x8f\x98\x98\xfd\x75\xf0\x6f\xe5\x5a\x7a\x72\xc8",
        // "CFNumberCreate" / M(Xor1) / S(111) / L(14)
        "\x2c\x29\x21\x1a\x02\x0d\x0a\x1d\x2c\x1d\x0a\x0e\x1b\x0a\x6f\x64",
        // "." / M(Rot) / S(132) / L(1)
        "\xb2\x84\xd5\x7d\xdb\x0e\xb0\x5d\x59\x3f\xc8\xcb\x3a\xf8\xc0\x38",
        // "" / M(None) / S(0) / L(0)
        "\x36\x97\x03\xbc\x11\xa9\x0c\xc5\xe1\x99\x54\xb6\x0c\x96\x66\x44\xf4\x71\xa4\x9a\xe5\x8f\x02\x02\x59\x7b\x2d\x7a\x06\x68\x01\xc8",
        // "mainBundle" / M(Xor3) / S(113) / L(10)
        "\xec\xe0\xe8\xef\xc3\xf4\xef\xe5\xed\xe4\x81\xe3\xba\x0f\x04\xf2",
        // "com.treasurebox.gear.ios" / M(Xor4) / S(67) / L(24)
        "\xc0\xcc\xce\x8d\xd7\xd1\xc6\xc2\xd0\xd6\xd1\xc6\xc1\xcc\xdb\x8d\xc4\xc6\xc2\xd1\x8d\xca\xcc\xd0\xa3\xcc\x9c\x2d\x11\x0a\x7c\xcd\x7e",
        // "setjmp" / M(Xor3) / S(178) / L(6)
        "\xb1\xa7\xb6\xa8\xaf\xb2\xc2\xcb\x3e\xeb\x61\xf3\x5e\x89\x93\xaa",
        // "PKCS7_get0_signers" / M(Xor2) / S(187) / L(18)
        "\xf8\xe3\xeb\xfb\x9f\xf7\xcf\xcd\xdc\x98\xf7\xdb\xc1\xcf\xc6\xcd\xda\xdb\xa8",
        // "" / M(None) / S(0) / L(0)
        "\x88\xad\xde\x48\x91\x84\x23\x47\xcb\x7b\xee\x0d\xff\xbd\x5c\x03\xc7\x8e\x00\xfe\x4e\x2a\xe5\x11\xb9\x15\x95\xf7\x39\xd4\x55\xc1",
        // "PKCS7_get0_signers" / M(Rot) / S(117) / L(18)
        "\xc5\xc0\xb8\xc8\xac\xd4\xdc\xda\xe9\xa5\xd4\xe8\xde\xdc\xe3\xda\xe7\xe8\x75",
        // "PKCS7_free" / M(Rot) / S(55) / L(10)
        "\x87\x82\x7a\x8a\x6e\x96\x9d\xa9\x9c\x9c\x37\x07\x05\x27\x56\x65",
        // "SHA1_Update" / M(Xor1) / S(146) / L(11)
        "\xc1\xda\xd3\xa3\xcd\xc7\xe2\xf6\xf3\xe6\xf7\x92\xc3\xc3\xbe\x59",
        // "" / M(None) / S(0) / L(0)
        "\x41\xd0\x73\x2c\xd0\xdd\x90\xe9\x23\x5b\xe9\x3b\xa4\x24\x5d\xc2\x47\x57\x6f\x38\x17\xff\x55\x84\xc2\x05\x6f\x7c\xb6\xb3\xcd\x66",
        // "dlsym" / M(Xor2) / S(254) / L(5)
        "\x8a\x82\x9d\x97\x83\xee\xd6\x22\x47\xd9\x81\x90\x65\x77\xfb\xcb",
        // "SHA1_Final" / M(Rot) / S(27) / L(10)
        "\x6e\x63\x5c\x4c\x7a\x61\x84\x89\x7c\x87\x1b\x47\xa1\xb5\x5f\xcb",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(8) / L(29)
        "\x45\x6d\x68\x7a\x57\x5e\x4b\x6a\x47\x4d\x5a\x47\x41\x40\x4f\x5c\x57\x65\x4b\x57\x6d\x4f\x42\x42\x6c\x4f\x4d\x45\x5d\x2e\x47\x04\xe4\xe1\x3b\xb1\x53\xa4",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(101) / L(14)
        "\xb7\xb9\xb1\xa9\xc4\xb2\xa6\xae\xb3\xc4\xb4\xb3\xb1\xbe\x65\x0d",
        // "strlen" / M(Xor4) / S(147) / L(6)
        "\x43\x44\x42\x5c\x55\x5e\x30\x8b\xe1\xaf\x7e\xf9\x5f\x66\xad\x68",
        // "EVP_MD_CTX_init" / M(Xor1) / S(112) / L(15)
        "\x35\x26\x20\x2f\x3d\x34\x2f\x33\x24\x28\x2f\x19\x1e\x19\x04\x70",
        // "" / M(None) / S(0) / L(0)
        "\xd3\xb9\x9e\x17\xd5\x6c\x31\xd3\xb1\x05\x7a\x5b\x92\x2f\xb0\x59\x01\xd1\xb9\x4f\x65\xf1\x91\x55\xea\x25\x1c\xeb\x8d\xdc\x41\xf6",
        // "getUUIDBytes:" / M(Xor1) / S(29) / L(13)
        "\x7a\x78\x69\x48\x48\x54\x59\x5f\x64\x69\x78\x6e\x27\x1d\x36\x41",
        // "currentDevice" / M(Rot) / S(113) / L(13)
        "\xd4\xe6\xe3\xe3\xd6\xdf\xe5\xb5\xd6\xe7\xda\xd4\xd6\x71\x93\x6c",
        // "CFDictionarySetValue" / M(Xor2) / S(77) / L(20)
        "\x1b\x1e\x1c\x31\x3b\x2c\x31\x37\x36\x39\x2a\x21\x0b\x3d\x2c\x0e\x39\x34\x2d\x3d\x58",
        // "" / M(None) / S(0) / L(0)
        "\x65\x87\x0d\x98\x58\x14\xcb\x43\x75\xee\xd8\xec\x1f\x76\xc8\x4d\x4d\x92\x27\x16\xd2\xb0\x90\x03\x64\x4f\x37\xb1\x00\x8e\x60\x5e",
        // "identifierForVendor" / M(Xor4) / S(125) / L(19)
        "\xad\xa0\xa1\xaa\xb0\xad\xa2\xad\xa1\xb6\x82\xab\xb6\x92\xa1\xaa\xa0\xab\xb6\xc4",
        // "kCFDateFormatterTimeZone" / M(Xor2) / S(105) / L(24)
        "\x23\x0b\x0e\x0c\x29\x3c\x2d\x0e\x27\x3a\x25\x29\x3c\x3c\x2d\x3a\x1c\x21\x25\x2d\x12\x27\x26\x2d\x48\x16\x13\x4f\x38\x8f\x32\x90\xd7",
        // "CFDataGetBytePtr" / M(Xor2) / S(232) / L(16)
        "\xba\xbf\xbd\x98\x8d\x98\xbe\x9c\x8d\xbb\x80\x8d\x9c\xa9\x8d\x8b\xf9",
        // "CC_SHA1_Init" / M(Xor3) / S(172) / L(12)
        "\xff\xff\xe3\xef\xf4\xfd\x8d\xe3\xf5\xd2\xd5\xc8\xbc\xb6\x11\xdd",
        // "" / M(None) / S(0) / L(0)
        "\xe1\xf8\xc4\xf0\xbd\x67\x9f\x75\x2e\x6d\x85\x1a\x09\x9a\x9c\xac\x6a\x7e\x20\x16\xca\x46\x2f\x3a\x57\x34\xca\xb2\xd4\xbd\x80\xfd",
        // "CFReadStreamClose" / M(Xor2) / S(167) / L(17)
        "\xf6\xf3\xe7\xd0\xd4\xd1\xe6\xc1\xc7\xd0\xd4\xd8\xf6\xd9\xda\xc6\xd0\xb5",
        // "" / M(None) / S(0) / L(0)
        "\x0a\xe1\xc5\x75\x85\x1f\x63\x77\x2e\xc9\x16\xa0\x12\x33\x51\x86\x86\x07\xec\xe6\xbd\x9a\x65\xa3\x98\xb3\x5a\x7c\x2d\xe1\x65\x48",
        // "" / M(None) / S(0) / L(0)
        "\x9b\xb1\xd9\xb7\xea\xd0\x43\xb2\x62\xf3\x46\x9e\x83\x1c\x84\xab\x6f\x2c\x73\x96\xa6\xa8\x33\x70\x26\x83\x1a\x6d\x92\x08\x45\x2a",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(102) / L(22)
        "\x32\x37\x30\x03\x03\x10\x08\x36\x14\x05\x27\x10\x1d\x04\x14\x30\x05\x38\x1f\x15\x14\x09\x71",
        // "CFDataGetBytePtr" / M(Xor1) / S(237) / L(16)
        "\xae\xab\xa9\x8c\x99\x8c\xaa\x88\x99\xaf\x94\x99\x88\xbd\x99\x9f\xed",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(97) / L(59)
        "\x57\x50\x5b\x50\x24\x5b\x54\x23\x5b\x57\x57\x5b\x53\x22\x5b\x54\x58\x5b\x52\x20\x5b\x51\x59\x5b\x27\x27\x5b\x54\x59\x5b\x25\x50\x5b\x55\x20\x5b\x24\x53\x5b\x53\x55\x5b\x54\x53\x5b\x25\x50\x5b\x58\x59\x5b\x25\x27\x5b\x57\x22\x5b\x57\x51\x61\xe1\x2b\xd6\xa8\xc3\xaa\xd4\x2d",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(115) / L(29)
        "\x79\x51\x54\x46\x6b\x62\x77\x56\x7b\x71\x66\x7b\x7d\x7c\x73\x60\x6b\x59\x77\x6b\x51\x73\x7e\x7e\x50\x73\x71\x79\x61\x12\xdc\xe5\x77\xa6\xd5\x39\x5f\xdf",
        // "X509_NAME_get_text_by_NID" / M(Rot) / S(114) / L(25)
        "\xca\xa7\xa2\xab\xd1\xc0\xb3\xbf\xb7\xd1\xd9\xd7\xe6\xd1\xe6\xd7\xea\xe6\xd1\xd4\xeb\xd1\xc0\xbb\xb6\x72\x71\x89\xda\xbf\x99\x5b\x5b\x0b",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(64) / L(36)
        "\x03\x06\x02\x35\x2e\x24\x2c\x25\x07\x25\x34\x16\x21\x2c\x35\x25\x06\x2f\x32\x09\x2e\x26\x2f\x04\x29\x23\x34\x29\x2f\x2e\x21\x32\x39\x0b\x25\x39\x40",
        // "" / M(None) / S(0) / L(0)
        "\x74\xcc\x32\xf3\xdd\xcd\x70\x85\x25\x0a\x11\xb0\x3f\x3c\xc1\xbe\x4e\x99\x71\x29\x50\x82\xbd\xa6\x2d\x9e\xef\x40\x54\x9e\xc2\x24",
        // "CFDateCreate" / M(Xor2) / S(97) / L(12)
        "\x32\x37\x35\x10\x05\x14\x32\x03\x14\x10\x05\x14\x71\x2b\x07\x60",
        // "objc_lookUpClass" / M(Xor2) / S(247) / L(16)
        "\x89\x84\x8c\x85\xb9\x8a\x89\x89\x8d\xb3\x96\xa5\x8a\x87\x95\x95\xe6",
        // "" / M(None) / S(0) / L(0)
        "\x85\xb9\x63\x3a\x36\xc1\x52\x94\xe1\xdf\xbf\xa7\xec\xe0\xa4\x52\x14\xd4\xae\x8c\xe0\xb1\x0c\x29\xdf\xec\x02\x56\x18\x1e\x62\x73",
        // "CFDateFormatterCreate" / M(Xor4) / S(78) / L(21)
        "\xf7\xf2\xf0\xd5\xc0\xd1\xf2\xdb\xc6\xd9\xd5\xc0\xc0\xd1\xc6\xf7\xc6\xd1\xd5\xc0\xd1\xb4",
        // "SHA1_Final" / M(Rot) / S(11) / L(10)
        "\x5e\x53\x4c\x3c\x6a\x51\x74\x79\x6c\x77\x0b\x06\xa4\x3d\x19\x2e",
        // "RTLD_MAIN_ONLY" / M(Xor1) / S(92) / L(14)
        "\x0e\x08\x10\x18\x03\x11\x1d\x15\x12\x03\x13\x12\x10\x05\x5c\x24",
        // "CFDictionarySetValue" / M(Xor3) / S(186) / L(20)
        "\x8c\x89\x8b\xa6\xac\xbb\xa6\xa0\xa1\xae\xbd\xb6\x9c\xaa\xbb\x99\xae\xa3\xba\xaa\xcf",
        // "" / M(None) / S(0) / L(0)
        "\x1e\x5d\x4f\xf6\xd1\xe9\x83\xb3\x85\x60\x9a\xe3\x95\x35\xc2\x63\x64\x02\xa3\x88\x47\x5d\xac\x84\xf0\xcd\x44\xcd\x42\x86\x89\xa8",
        // "kCFBundleIdentifierKey" / M(Xor1) / S(166) / L(22)
        "\xcd\xe5\xe0\xe4\xd3\xc8\xc2\xca\xc3\xef\xc2\xc3\xc8\xd2\xcf\xc0\xcf\xc3\xd4\xed\xc3\xdf\xa6",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(149) / L(22)
        "\xd6\xd3\xd4\xe7\xe7\xf4\xec\xd2\xf0\xe1\xc3\xf4\xf9\xe0\xf0\xd4\xe1\xdc\xfb\xf1\xf0\xed\x95",
        // "CFStringCreateWithBytes" / M(Rot) / S(138) / L(23)
        "\xcd\xd0\xdd\xfe\xfc\xf3\xf8\xf1\xcd\xfc\xef\xeb\xfe\xef\xe1\xf3\xfe\xf2\xcc\x03\xfe\xef\xfd\x8a\xd7\x6e\x77\x71\x44\x74\xb5\x79",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(156) / L(39)
        "\x03\x06\x14\x29\x2d\x25\x1a\x2f\x2e\x25\x03\x32\x25\x21\x34\x25\x17\x29\x34\x28\x14\x29\x2d\x25\x09\x2e\x34\x25\x32\x36\x21\x2c\x06\x32\x2f\x2d\x07\x0d\x14\x40\x14\x86\x4b\xd0\x71\x7f\x56\x8f",
        // "EVP_MD_CTX_init" / M(Xor4) / S(21) / L(15)
        "\x15\x06\x00\x0f\x1d\x14\x0f\x13\x04\x08\x0f\x39\x3e\x39\x24\x50",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(138) / L(24)
        "\xe8\xed\xea\xc9\xd8\xc4\xc7\xde\xdf\xce\xff\xc2\xc6\xce\xec\xce\xdf\xe8\xde\xd9\xd9\xce\xc5\xdf\xab\x85\x9c\x09\x72\x03\x99\x19\xba",
        // "" / M(None) / S(0) / L(0)
        "\x45\xa7\x54\xe2\x58\xe8\xd3\x24\xa4\x98\x00\x0d\x63\xf4\xdc\xbd\x97\x10\x95\x4a\x0e\x42\x27\x19\xf9\x4d\xcb\x3e\xc7\x76\x7a\xc0",
        // "appStoreReceiptURL" / M(Xor3) / S(250) / L(18)
        "\x6c\x7d\x7d\x5e\x79\x62\x7f\x68\x5f\x68\x6e\x68\x64\x7d\x79\x58\x5f\x41\x0d",
        // "sel_registerName" / M(Xor4) / S(67) / L(16)
        "\x00\x16\x1f\x2c\x01\x16\x14\x1a\x00\x07\x16\x01\x3d\x12\x1e\x16\x73",
        // "" / M(None) / S(0) / L(0)
        "\xf8\xf7\xba\xa6\x83\x7f\x1c\x4f\x2b\xd0\x4b\xeb\x13\x97\x06\x23\xa5\x3d\xa6\xef\x8e\xfa\x0c\xcd\xba\xe1\x8a\xe0\xb5\x6b\xb7\xf1",
        // "CFDataCreate" / M(Xor4) / S(215) / L(12)
        "\x33\x36\x34\x11\x04\x11\x33\x02\x15\x11\x04\x15\x70\x97\x08\x6d",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(27) / L(22)
        "\x06\x2e\x2b\x2f\x18\x03\x09\x01\x08\x24\x09\x08\x03\x19\x04\x0b\x04\x08\x1f\x26\x08\x14\x6d",
        // "setjmp" / M(Xor2) / S(41) / L(6)
        "\x4a\x5c\x4d\x53\x54\x49\x39\xbd\xc7\xf0\xdd\x32\xa5\x9e\xeb\x9a",
        // "CFDateCompare" / M(Xor3) / S(103) / L(13)
        "\x34\x31\x33\x16\x03\x12\x34\x18\x1a\x07\x16\x05\x12\x77\x74\x07",
        // "%02x" / M(Xor2) / S(187) / L(4)
        "\x8e\x9b\x99\xd3\xab\x54\x36\xf2\x87\x5a\x3e\x80\x7c\x43\x4e\xd3",
        // "" / M(None) / S(0) / L(0)
        "\xaa\x70\x2b\xad\x9a\xbb\x85\x8f\x85\x9f\xdc\xf0\xbd\x88\x84\x9d\x3e\xaa\xe5\x4e\xa3\x21\xaa\xe5\x24\xca\xa0\x1e\x78\xce\x0f\xc0",
        // "appStoreReceiptURL" / M(Rot) / S(39) / L(18)
        "\x88\x97\x97\x7a\x9b\x96\x99\x8c\x79\x8c\x8a\x8c\x90\x97\x9b\x7c\x79\x73\x27",
        // "" / M(None) / S(0) / L(0)
        "\xf2\x8f\xcc\x17\x33\xec\x66\xd5\xb9\x8d\xf2\xa6\xd3\xbb\x87\x40\x82\x90\x99\x0d\x01\xb0\xe3\xda\x7b\x4a\xcd\xfb\x82\xc9\x88\xeb",
        // "ASN1_get_object" / M(Xor1) / S(217) / L(15)
        "\x98\x8a\x97\xe8\x86\xbe\xbc\xad\x86\xb6\xbb\xb3\xbc\xba\xad\xd9",
        // "BIO_new" / M(Xor4) / S(39) / L(7)
        "\x32\x39\x3f\x2f\x1e\x15\x07\x70\xf2\x0f\x3c\x75\x4c\xba\xb2\x14",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(2) / L(22)
        "\x45\x6d\x68\x6c\x5b\x40\x4a\x42\x4b\x67\x4a\x4b\x40\x5a\x47\x48\x47\x4b\x5c\x65\x4b\x57\x2e",
        // "" / M(None) / S(0) / L(0)
        "\xae\xd0\x79\x0a\xfa\x6a\x2e\x5f\x37\x54\xaf\x52\xa1\x7b\xe9\xc7\x2b\x99\xff\xd4\x74\x1f\xff\x20\x15\x9e\x8b\x6f\xe6\x60\x6d\x76",
        // "OBJ_txt2obj" / M(Xor1) / S(118) / L(11)
        "\x39\x34\x3c\x29\x02\x0e\x02\x44\x19\x14\x1c\x76\x00\x30\xe6\x9b",
        // "CFBundleIdentifier" / M(Xor2) / S(107) / L(18)
        "\x3b\x3e\x3a\x0d\x16\x1c\x14\x1d\x31\x1c\x1d\x16\x0c\x11\x1e\x11\x1d\x0a\x78",
        // "d2i_X509_bio" / M(Xor4) / S(209) / L(12)
        "\x74\x22\x79\x4f\x48\x25\x20\x29\x4f\x72\x79\x7f\x10\x8c\xc4\xe0",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(161) / L(14)
        "\xf3\xf5\xed\xe5\x00\xee\xe2\xea\xef\x00\xf0\xef\xed\xfa\xa1\xa8",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(126) / L(32)
        "\x07\x07\x07\x07\x59\x53\x59\x33\x33\x59\x53\x59\x1a\x1a\x59\x2a\x59\x36\x36\x59\x44\x59\x13\x13\x59\x44\x59\x0d\x0d\x59\x24\x59\x7e",
        // "OpenSSL_add_all_digests" / M(Xor3) / S(38) / L(23)
        "\x09\x36\x23\x28\x15\x15\x0a\x19\x27\x22\x22\x19\x27\x2a\x2a\x19\x22\x2f\x21\x23\x35\x32\x35\x46\x24\x84\x02\xeb\x0b\x0a\x43\x05",
        // "setDelegate:" / M(Xor3) / S(1) / L(12)
        "\x62\x74\x65\x55\x74\x7d\x74\x76\x70\x65\x74\x2b\x11\xd4\x19\x57",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(173) / L(16)
        "\xdf\x8e\xd5\xe3\xfd\xef\xf2\x8d\xe3\xf5\xf2\xe8\xf9\xfb\xf9\xee\xbc",
        // "CFDictionaryCreateMutable" / M(Xor2) / S(153) / L(25)
        "\xf8\xfd\xff\xd2\xd8\xcf\xd2\xd4\xd5\xda\xc9\xc2\xf8\xc9\xde\xda\xcf\xde\xf6\xce\xcf\xda\xd9\xd7\xde\xbb\xea\x33\x4d\x02\x72\x3c\x42\xb0",
        // "X509_STORE_free" / M(Xor4) / S(68) / L(15)
        "\x18\x75\x70\x79\x1f\x13\x14\x0f\x12\x05\x1f\x26\x32\x25\x25\x40",
        // "sk_value" / M(Rot) / S(9) / L(8)
        "\x7c\x74\x68\x7f\x6a\x75\x7e\x6e\x09\xe3\x89\x9b\x8d\x0a\x99\xef",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(62) / L(21)
        "\x3f\x17\x12\x00\x2d\x24\x31\x15\x26\x26\x35\x2d\x17\x35\x38\x38\x16\x35\x37\x3f\x27\x54",
        // "CFReadStreamClose" / M(Xor3) / S(35) / L(17)
        "\x76\x73\x67\x50\x54\x51\x66\x41\x47\x50\x54\x58\x76\x59\x5a\x46\x50\x35",
        // "UIDevice" / M(Xor2) / S(76) / L(8)
        "\x09\x15\x18\x39\x2a\x35\x3f\x39\x5c\x97\x3e\xe9\x9f\xdb\xee\xae",
        // "SHA1_Final" / M(Xor4) / S(13) / L(10)
        "\x83\x98\x91\xe1\x8f\x96\xb9\xbe\xb1\xbc\xd0\x68\x05\x2c\x96\x34",
        // "BIO_new" / M(Xor3) / S(222) / L(7)
        "\xac\xa7\xa1\xb1\x80\x8b\x99\xee\x77\x17\x6b\x58\xed\xc3\x73\x48",
        // "" / M(None) / S(0) / L(0)
        "\x9e\xac\x66\x49\x9c\x08\x9e\xfe\x03\xc1\x10\x7d\x89\xcb\xee\xb5\x73\xaa\x39\x1f\x5b\xf4\x97\x14\x00\x93\x14\x51\xd0\xdd\xde\x84",
        // "CC_SHA1" / M(Rot) / S(155) / L(7)
        "\xde\xde\xfa\xee\xe3\xdc\xcc\x9b\x43\xd2\x43\x32\xc7\xfd\xe2\xa4",
        // "" / M(None) / S(0) / L(0)
        "\x2a\x92\xa1\xc5\x27\xc3\xff\x16\xfc\x7a\xd1\xdc\x7d\xbb\x6d\x6e\x83\x9e\xde\x6f\xdd\xcc\xcf\x6d\x51\x76\x31\xb5\xaa\x99\x86\x24",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(171) / L(22)
        "\x84\xde\xd8\xd9\x84\xc7\xc2\xc9\x84\xc7\xc2\xc9\xc4\xc9\xc1\xc8\x85\xcf\xd2\xc7\xc2\xc9\xab",
        // "CFArrayCreateMutable" / M(Xor1) / S(122) / L(20)
        "\x39\x3c\x3b\x08\x08\x1b\x03\x39\x08\x1f\x1b\x0e\x1f\x37\x0f\x0e\x1b\x18\x16\x1f\x7a",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(204) / L(39)
        "\x03\x06\x14\x29\x2d\x25\x1a\x2f\x2e\x25\x03\x32\x25\x21\x34\x25\x17\x29\x34\x28\x14\x29\x2d\x25\x09\x2e\x34\x25\x32\x36\x21\x2c\x06\x32\x2f\x2d\x07\x0d\x14\x40\xf0\xe2\x37\xc2\x76\x58\xa3\x23",
        // "CC_SHA1_Init" / M(Rot) / S(201) / L(12)
        "\x0c\x0c\x28\x1c\x11\x0a\xfa\x28\x12\x37\x32\x3d\xc9\xfe\x02\x62",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(65) / L(36)
        "\x84\x87\x83\xb6\xaf\xa5\xad\xa6\x88\xa6\xb5\x97\xa2\xad\xb6\xa6\x87\xb0\xb3\x8a\xaf\xa7\xb0\x85\xaa\xa4\xb5\xaa\xb0\xaf\xa2\xb3\xba\x8c\xa6\xba\x41",
        // "SHA1" / M(Rot) / S(87) / L(4)
        "\xaa\x9f\x98\x88\x57\xc2\x2c\x1a\xea\x4c\x45\x96\xa1\x2c\x71\xb1",
        // "exit" / M(Xor1) / S(74) / L(4)
        "\x2f\x32\x23\x3e\x4a\x2d\xac\xcc\xe0\xcc\x37\x48\xa8\x25\x5b\x06",
        // "PKCS7_free" / M(Rot) / S(220) / L(10)
        "\x2c\x27\x1f\x2f\x13\x3b\x42\x4e\x41\x41\xdc\x63\x21\xc4\xa5\x22",
        // "CFArrayAppendValue" / M(Xor3) / S(55) / L(18)
        "\x09\x0c\x0b\x38\x38\x2b\x33\x0b\x3a\x3a\x2f\x24\x2e\x1c\x2b\x26\x3f\x2f\x4a",
        // "" / M(None) / S(0) / L(0)
        "\xc7\xf4\x1d\x86\x46\xef\x8d\xf6\x0c\x2e\xf9\x39\x43\x4f\xe8\xf9\xc9\x25\x5f\x53\xdd\x7e\x4e\x20\xc4\x89\x53\x95\xdb\x10\x44\xae",
        // "SHA1" / M(Xor4) / S(116) / L(4)
        "\x13\x08\x01\x71\x40\xb6\x70\xa0\x2c\x67\x9a\xcb\x1f\x2b\xc5\x07",
        // "CFStringCreateWithCString" / M(Xor3) / S(10) / L(25)
        "\x6f\x6a\x7f\x58\x5e\x45\x42\x4b\x6f\x5e\x49\x4d\x58\x49\x7b\x45\x58\x44\x6f\x7f\x58\x5e\x45\x42\x4b\x2c\xee\x96\xba\x49\xb3\xfa\x7b\x9c",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(246) / L(24)
        "\x94\x91\x96\xb5\xa4\xb8\xbb\xa2\xa3\xb2\x83\xbe\xba\xb2\x90\xb2\xa3\x94\xa2\xa5\xa5\xb2\xb9\xa3\xd7\xe2\x01\x25\xbc\x33\xfe\xf8\xe8",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(170) / L(19)
        "\x10\x7d\x78\x71\x17\x2f\x2d\x3c\x17\x2d\x30\x3c\x17\x2a\x31\x17\x07\x0a\x02\x48",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(163) / L(40)
        "\x05\x02\x02\x56\x06\x51\x05\x05\x01\x50\x06\x0a\x00\x52\x03\x0b\x55\x55\x06\x0b\x57\x02\x07\x52\x56\x01\x01\x07\x06\x01\x57\x02\x0a\x0b\x57\x55\x05\x50\x05\x03\x33\xfd\x1f\x58\xa4\x26\x1f\xe1\xa9",
        // "" / M(None) / S(0) / L(0)
        "\xf3\xd4\xb8\x56\xb7\x5c\x0f\x1d\x7f\x33\xed\x29\x73\x8b\x77\x2d\xf2\xb5\xb1\x03\xfb\xe9\xe3\xe4\x5f\xa3\x76\x42\x99\x54\xdc\xaf",
        // "EVP_DigestUpdate" / M(Xor4) / S(253) / L(16)
        "\x88\x9b\x9d\x92\x89\xa4\xaa\xa8\xbe\xb9\x98\xbd\xa9\xac\xb9\xa8\xcd",
        // "longjmp" / M(Xor3) / S(37) / L(7)
        "\x59\x5a\x5b\x52\x5f\x58\x45\x35\x43\x75\x55\x18\xfb\x52\x91\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x25\xa1\x3e\x86\xde\xbe\x31\x22\x4e\x13\xbd\xbc\x3c\xb2\x03\x89\x5f\x93\x99\xae\xfd\x1c\x72\x7e\x2d\xe1\x22\xad\x19\x8e\x92\xd8",
        // "" / M(None) / S(0) / L(0)
        "\xc5\x74\x53\xc5\x59\x83\xa8\xfe\xcd\x5b\x57\xe8\x5d\x05\x10\x36\xdb\xc5\x42\xd2\x99\xa0\x63\xa1\x13\x06\x4f\xb0\x9f\x2c\x40\xee",
        // "" / M(None) / S(0) / L(0)
        "\xe7\x09\xe1\xd3\xe1\x42\x2e\x58\x39\x4a\x91\x63\xe3\x8d\x81\xeb\xdd\x22\x82\x64\xc5\x8d\x64\x5e\x92\x08\xe8\x7a\x65\x5d\x6d\x74",
        // "ASN1_OBJECT_free" / M(Xor2) / S(25) / L(16)
        "\x49\x5b\x46\x39\x57\x47\x4a\x42\x4d\x4b\x5c\x57\x6e\x7a\x6d\x6d\x08",
        // "" / M(None) / S(0) / L(0)
        "\x4c\x1f\xf4\xf6\xd2\x9b\x92\xee\xf8\xb5\xfb\xfa\x67\xc5\x51\xa9\x8e\x9a\x06\xe0\x1a\x40\x82\xb5\x13\xa2\x8b\x57\x77\x02\x2b\x95",
        // "SHA1_Init" / M(Xor1) / S(24) / L(9)
        "\x4b\x50\x59\x29\x47\x51\x76\x71\x6c\x18\x6c\x4a\x0e\xbe\x49\x83",
        // "sk_value" / M(Xor4) / S(134) / L(8)
        "\x13\x0b\x3f\x16\x01\x0c\x15\x05\x60\x79\x9e\x0f\x46\xfe\x80\x60",
        // "%02x:" / M(Xor1) / S(98) / L(5)
        "\x47\x52\x50\x1a\x58\x62\x6e\x20\x26\x2f\x27\x48\x17\xeb\x0e\x24",
        // "" / M(None) / S(0) / L(0)
        "\xc9\x8c\x8b\x24\xef\x9f\x18\x8e\x6e\x73\x95\xfd\x03\xc2\x1e\x04\x62\x58\x3a\x33\x00\xf6\xcf\x3f\x30\xf0\x5d\x6e\x55\x26\x09\xae",
        // "sk_value" / M(Xor4) / S(235) / L(8)
        "\xc3\xdb\xef\xc6\xd1\xdc\xc5\xd5\xb0\x2d\xfe\x78\xc6\xa2\xef\x62",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(114) / L(32)
        "\xea\xea\xea\xea\xb4\xbe\xb4\xde\xde\xb4\xbe\xb4\xf7\xf7\xb4\xc7\xb4\xdb\xdb\xb4\xa9\xb4\xfe\xfe\xb4\xa9\xb4\xe0\xe0\xb4\xc9\xb4\x93",
        // "" / M(None) / S(0) / L(0)
        "\x02\x1e\x5a\xac\x15\xce\xe6\x5c\x12\x2a\xb3\xa8\x34\xa2\x77\xc4\x52\x36\x18\xaf\x78\xb1\xf7\x70\x77\xee\x3e\xf0\x33\x38\x7d\xad",
        // "objc_lookUpClass" / M(Xor4) / S(18) / L(16)
        "\x5d\x50\x58\x51\x6d\x5e\x5d\x5d\x59\x67\x42\x71\x5e\x53\x41\x41\x32",
        // "ASN1_INTEGER_free" / M(Xor1) / S(172) / L(17)
        "\xed\xff\xe2\x9d\xf3\xe5\xe2\xf8\xe9\xeb\xe9\xfe\xf3\xca\xde\xc9\xc9\xac",
        // "CFDataCreate" / M(Xor1) / S(58) / L(12)
        "\x79\x7c\x7e\x5b\x4e\x5b\x79\x48\x5f\x5b\x4e\x5f\x3a\x78\xdb\x82",
        // "EVP_MD_CTX_init" / M(Xor1) / S(43) / L(15)
        "\x6e\x7d\x7b\x74\x66\x6f\x74\x68\x7f\x73\x74\x42\x45\x42\x5f\x2b",
        // "X509_free" / M(Xor3) / S(207) / L(9)
        "\x87\xea\xef\xe6\x80\xb9\xad\xba\xba\xdf\x5a\x30\x70\xe6\x22\x30",
        // "CFArrayAppendValue" / M(Xor1) / S(70) / L(18)
        "\x05\x00\x07\x34\x34\x27\x3f\x07\x36\x36\x23\x28\x22\x10\x27\x2a\x33\x23\x46",
        // "" / M(None) / S(0) / L(0)
        "\x8f\xbc\x15\x46\xc9\x5c\xd6\x7e\x26\x93\xc3\x48\x2b\xcf\xe9\xbb\xbb\xb8\xb0\xc4\xa5\x16\xff\x47\x36\x09\x04\x6a\xe5\xbd\xd4\x51",
        // "X509_STORE_add_cert" / M(Xor3) / S(133) / L(19)
        "\xc1\xac\xa9\xa0\xc6\xca\xcd\xd6\xcb\xdc\xc6\xf8\xfd\xfd\xc6\xfa\xfc\xeb\xed\x99",
        // "X509_STORE_new" / M(Xor1) / S(128) / L(14)
        "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xee\xe5\xf7\x80\xf4",
        // "" / M(None) / S(0) / L(0)
        "\xe0\xfd\x33\x9c\x5d\xab\xb4\xcf\x8e\x6e\x33\xc4\xcb\xc8\xfc\xb7\x18\xb3\xa6\x21\xaf\x74\xa2\xac\x9a\x23\x5a\x1b\x43\x6c\x95\x4f",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(220) / L(19)
        "\x90\xfd\xf8\xf1\x97\xaf\xad\xbc\x97\xad\xb0\xbc\x97\xaa\xb1\x97\x87\x8a\x82\xc8",
        // "X509_digest" / M(Xor1) / S(157) / L(11)
        "\xc5\xa8\xad\xa4\xc2\xf9\xf4\xfa\xf8\xee\xe9\x9d\x4b\xe4\xd9\x58",
        // "%02x" / M(Rot) / S(175) / L(4)
        "\xd4\xdf\xe1\x27\xaf\x46\xa7\xe1\xef\x04\xc0\x0a\x1b\x4d\x88\x80",
        // "CFDataGetLength" / M(Xor4) / S(97) / L(15)
        "\x53\x56\x54\x71\x64\x71\x57\x75\x64\x5c\x75\x7e\x77\x64\x78\x10",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(206) / L(26)
        "\x8d\x88\x9c\xab\xaf\xaa\x9d\xba\xbc\xab\xaf\xa3\x8d\xbc\xab\xaf\xba\xab\x99\xa7\xba\xa6\x88\xa7\xa2\xab\xce\x86\x6e\x9e\x5d\x8e\x2f\x78\xb1",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(123) / L(66)
        "\x91\xed\xc7\xcd\xca\xdb\xd3\x91\xf2\xd7\xdc\xcc\xdf\xcc\xc7\x91\xf8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\xcd\x91\xfd\xd1\xcc\xdb\xf8\xd1\xcb\xd0\xda\xdf\xca\xd7\xd1\xd0\x90\xd8\xcc\xdf\xd3\xdb\xc9\xd1\xcc\xd5\x91\xfd\xd1\xcc\xdb\xf8\xd1\xcb\xd0\xda\xdf\xca\xd7\xd1\xd0\xbe",
        // "CFNumberCreate" / M(Rot) / S(239) / L(14)
        "\x32\x35\x3d\x64\x5c\x51\x54\x61\x32\x61\x54\x50\x63\x54\xef\x63",
        // "BIO_s_mem" / M(Rot) / S(217) / L(9)
        "\x1b\x22\x28\x38\x4c\x38\x46\x3e\x46\xd9\x2f\xc7\xf7\xb8\xd7\x63",
        // "CC_SHA1_Update" / M(Xor2) / S(75) / L(14)
        "\x18\x18\x04\x08\x13\x1a\x6a\x04\x0e\x2b\x3f\x3a\x2f\x3e\x5b\x27",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(42) / L(35)
        "\x6d\x70\x6e\x8b\x9e\x8f\x70\x99\x9c\x97\x8b\x9e\x9e\x8f\x9c\x6d\x9c\x8f\x8b\x9e\x8f\x6e\x8b\x9e\x8f\x70\x9c\x99\x97\x7d\x9e\x9c\x93\x98\x91\x2a",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(32) / L(59)
        "\x52\x55\x5e\x55\x01\x5e\x51\x06\x5e\x52\x52\x5e\x56\x07\x5e\x51\x5d\x5e\x57\x05\x5e\x54\x5c\x5e\x02\x02\x5e\x51\x5c\x5e\x00\x55\x5e\x50\x05\x5e\x01\x56\x5e\x56\x50\x5e\x51\x56\x5e\x00\x55\x5e\x5d\x5c\x5e\x00\x02\x5e\x52\x07\x5e\x52\x54\x64\xa6\x2e\xcf\xf0\x05\x6c\x5a\xd2",
        // "alloc" / M(Xor1) / S(148) / L(5)
        "\xf5\xf8\xf8\xfb\xf7\x94\x93\x10\xdb\xb9\xac\x58\x06\x47\xe3\x32",
        // "" / M(None) / S(0) / L(0)
        "\xd9\xce\x01\x6c\x07\xb6\xf8\xf9\x2f\x99\xa8\x53\x5e\x6d\x35\x7a\x44\xf2\xae\x22\x15\xd8\xee\x74\x79\x9d\xe6\x35\x10\x2c\x9a\x29",
        // "CFRelease" / M(Xor3) / S(192) / L(9)
        "\x93\x96\x82\xb5\xbc\xb5\xb1\xa3\xb5\xd0\xfb\xb8\x3a\x78\x84\x9f",
        // "SHA1_Init" / M(Xor4) / S(196) / L(9)
        "\x13\x08\x01\x71\x1f\x09\x2e\x29\x34\x40\x2b\x0c\x10\xbd\x04\x39",
        // "CFDataGetLength" / M(Xor1) / S(196) / L(15)
        "\x87\x82\x80\xa5\xb0\xa5\x83\xa1\xb0\x88\xa1\xaa\xa3\xb0\xac\xc4",
        // "start" / M(Xor3) / S(243) / L(5)
        "\x70\x77\x62\x71\x77\x03\x70\xb1\xfb\x82\x44\x72\xe5\x2a\xaa\x12",
        // "BIO_s_mem" / M(Xor1) / S(209) / L(9)
        "\x93\x98\x9e\x8e\xa2\x8e\xbc\xb4\xbc\xd1\xd2\xe1\xf1\x2b\x47\xd1",
        // "objc_getClass" / M(Xor4) / S(64) / L(13)
        "\x6f\x62\x6a\x63\x5f\x67\x65\x74\x43\x6c\x61\x73\x73\x00\x3d\x9d",
        // "CFDateFormatterCreateDateFromString" / M(Xor4) / S(13) / L(35)
        "\x97\x92\x90\xb5\xa0\xb1\x92\xbb\xa6\xb9\xb5\xa0\xa0\xb1\xa6\x97\xa6\xb1\xb5\xa0\xb1\x90\xb5\xa0\xb1\x92\xa6\xbb\xb9\x87\xa0\xa6\xbd\xba\xb3\xd4",
        // "" / M(None) / S(0) / L(0)
        "\xbf\xd0\xe5\x24\x36\x8f\x41\xb3\x15\x37\x51\x0d\x9f\x2f\x40\x76\x5e\x98\x7a\x7d\x8d\xf1\x6d\xfb\x74\xaf\x69\xfd\x8e\xda\x32\x50",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(206) / L(24)
        "\x8d\x88\x8a\xaf\xba\xab\x88\xa1\xbc\xa3\xaf\xba\xba\xab\xbc\x9d\xab\xba\x88\xa1\xbc\xa3\xaf\xba\xce\xb9\x72\x5f\x16\xe2\x53\xe8\xca",
        // "" / M(None) / S(0) / L(0)
        "\x6b\x40\xc9\x73\x12\x61\x99\x31\xb2\x64\x31\x2d\x1f\xd9\x85\x63\xd8\xbd\x27\x3e\xaa\xa0\xb6\xbe\x65\xa6\x4a\x19\x9b\xf8\x7a\x62",
        // "dlopen" / M(Xor3) / S(126) / L(6)
        "\xea\xe2\xe1\xfe\xeb\xe0\x8e\x12\x16\x3f\x21\xec\x71\xc0\xf1\xf1",
        // "d2i_X509_bio" / M(Xor2) / S(234) / L(12)
        "\x9e\xc8\x93\xa5\xa2\xcf\xca\xc3\xa5\x98\x93\x95\xfa\xa9\x60\x98",
        // "CFDictionaryAddValue" / M(Xor1) / S(100) / L(20)
        "\x27\x22\x20\x0d\x07\x10\x0d\x0b\x0a\x05\x16\x1d\x25\x00\x00\x32\x05\x08\x11\x01\x64",
        // "setjmp" / M(Xor1) / S(251) / L(6)
        "\x88\x9e\x8f\x91\x96\x8b\xfb\xde\x30\xdd\x25\x32\x9c\x42\x0a\xeb",
        // "%02X:" / M(Xor2) / S(240) / L(5)
        "\xc5\xd0\xd2\xb8\xda\xe0\x3e\x1b\xf3\xe2\x49\xb7\x24\x20\xab\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xb8\x74\xbb\x23\x9a\x5e\x99\x9c\x5c\xee\x02\xd4\x90\xfe\x9d\x44\x23\xe3\x79\x97\x19\xeb\x42\x53\xf1\x4b\xc1\x32\xd9\xc8\xda",
        // "OBJ_txt2obj" / M(Rot) / S(198) / L(11)
        "\x15\x08\x10\x25\x3a\x3e\x3a\xf8\x35\x28\x30\xc6\x8e\x70\xc4\x5d",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(33) / L(40)
        "\x57\x52\x52\x86\x56\x83\x57\x57\x53\x84\x56\x5a\x54\x82\x51\x59\x87\x87\x56\x59\x85\x52\x55\x82\x86\x53\x53\x55\x56\x53\x85\x52\x5a\x59\x85\x87\x57\x84\x57\x51\x21\x36\xd1\x50\x2c\xde\x14\xb2\xfc",
        // "d2i_PKCS7_bio" / M(Xor4) / S(38) / L(13)
        "\x04\x52\x09\x3f\x30\x2b\x23\x33\x57\x3f\x02\x09\x0f\x60\x49\xee",
        // "" / M(None) / S(0) / L(0)
        "\x9e\x71\x69\xe1\x8b\x0b\xa8\xe1\x18\x53\x1f\x34\x43\x29\x60\xa5\x41\x25\xc5\x71\xdd\x56\xa7\x55\x61\x56\x74\x77\xd1\x92\x7a\x3c",
        // "getUUIDBytes:" / M(Xor2) / S(37) / L(13)
        "\x52\x50\x41\x60\x60\x7c\x71\x77\x4c\x41\x50\x46\x0f\x35\x95\x97",
        // "CFDataCreateMutable" / M(Xor3) / S(137) / L(19)
        "\xde\xdb\xd9\xfc\xe9\xfc\xde\xef\xf8\xfc\xe9\xf8\xd0\xe8\xe9\xfc\xff\xf1\xf8\x9d",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(168) / L(16)
        "\xcb\x9a\xc1\xf7\xe9\xfb\xe6\x99\xf7\xe1\xe6\xfc\xed\xef\xed\xfa\xa8",
        // "init" / M(Rot) / S(127) / L(4)
        "\xe8\xed\xe8\xf3\x7f\x5e\x5e\xe6\x12\x48\x89\x7a\xf4\x10\x9e\x36",
        // "sha1" / M(Xor2) / S(37) / L(4)
        "\x46\x5d\x54\x04\x35\xd3\x0c\x2f\xff\x87\x16\x5a\x19\x23\x72\x99",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(24) / L(23)
        "\x53\x4b\x52\x65\x63\x65\x69\x70\x74\x52\x65\x66\x72\x65\x73\x68\x52\x65\x71\x75\x65\x73\x74\x00\x78\xd6\x0b\x9f\xb1\x47\x08\xbe",
        // "CFBundleGetIdentifier" / M(Xor2) / S(126) / L(21)
        "\x2b\x2e\x2a\x1d\x06\x0c\x04\x0d\x2f\x0d\x1c\x21\x0c\x0d\x06\x1c\x01\x0e\x01\x0d\x1a\x68",
        // "Apple Root CA" / M(Xor4) / S(247) / L(13)
        "\x31\x00\x00\x1c\x15\x50\x22\x1f\x1f\x04\x50\x33\x31\x70\x0e\x1d",
        // "CFDataCreateMutable" / M(Xor3) / S(217) / L(19)
        "\xae\xab\xa9\x8c\x99\x8c\xae\x9f\x88\x8c\x99\x88\xa0\x98\x99\x8c\x8f\x81\x88\xed",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x12\xc8\xb2\xde\x45\x66\xda\x9d\x3b\x03\xc9\xd2\xbe\x4a\x86\x81\xeb\x9b\xb1\xcb\xe6\x8c\x0d\xc0\xbe\x24\x17\xfc\x00\x98\xa4",
        // "dlopen" / M(Xor4) / S(91) / L(6)
        "\xd4\xdc\xdf\xc0\xd5\xde\xb0\x72\xa0\x07\x6a\xf3\xfc\x5e\xdb\xf0",
        // "EVP_DigestUpdate" / M(Xor3) / S(153) / L(16)
        "\xef\xfc\xfa\xf5\xee\xc3\xcd\xcf\xd9\xde\xff\xda\xce\xcb\xde\xcf\xaa",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(230) / L(35)
        "\x29\x2c\x2a\x47\x5a\x4b\x2c\x55\x58\x53\x47\x5a\x5a\x4b\x58\x29\x58\x4b\x47\x5a\x4b\x2a\x47\x5a\x4b\x2c\x58\x55\x53\x39\x5a\x58\x4f\x54\x4d\xe6",
        // "" / M(None) / S(0) / L(0)
        "\x59\x9e\xc8\xc4\xbb\xf5\x17\xfc\xc5\xee\xc0\xcb\x56\xc0\xde\xbe\xe5\xb9\xfc\x1b\xdc\xee\xf6\x66\xab\xc5\x65\xed\xb6\xdb\xb3\xb9",
        // "" / M(None) / S(0) / L(0)
        "\xd5\xcc\xaa\x3e\x0d\x01\xee\x3b\x05\xc3\xca\xf1\x4f\x14\x09\x62\x6c\x5c\xb2\xef\x4c\x9b\xb6\x1b\x74\x82\xae\x25\xcf\x2c\x50\x8c",
        // "" / M(None) / S(0) / L(0)
        "\x81\xa9\xfa\xa0\xaa\xb7\xc0\xbb\x4d\x5b\xd7\x7e\xfa\x8f\xf0\xa9\xfe\xb9\xa3\xe9\xa1\xea\xed\xcb\x0c\x3e\x1d\x96\x56\x9a\xbc\x50",
        // "identifierForVendor" / M(Xor2) / S(73) / L(19)
        "\x34\x39\x38\x33\x29\x34\x3b\x34\x38\x2f\x1b\x32\x2f\x0b\x38\x33\x39\x32\x2f\x5d",
        // "BIO_new" / M(Xor4) / S(0) / L(7)
        "\x42\x49\x4f\x5f\x6e\x65\x77\x00\xd9\xad\xc2\x2b\x7f\x5e\xc6\x2b",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(210) / L(22)
        "\x01\x47\x45\x44\x01\x3e\x3b\x34\x01\x3e\x3b\x34\x41\x34\x3c\x35\x00\x36\x4b\x3e\x3b\x34\xd2",
        // "EVP_DigestInit" / M(Xor1) / S(204) / L(14)
        "\x89\x9a\x9c\x93\x88\xa5\xab\xa9\xbf\xb8\x85\xa2\xa5\xb8\xcc\xef",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(90) / L(19)
        "\x16\x7b\x7e\x77\x11\x29\x2b\x3a\x11\x2b\x36\x3a\x11\x2c\x37\x11\x01\x0c\x04\x4e",
        // "CFBundleVersion" / M(Xor4) / S(163) / L(15)
        "\x73\x76\x72\x45\x5e\x54\x5c\x55\x66\x55\x42\x43\x59\x5f\x5e\x30",
        // "strncmp" / M(Xor3) / S(156) / L(7)
        "\xdf\xd8\xde\xc2\xcf\xc1\xdc\xac\xa3\x44\x8d\xce\x55\x4f\x08\xa4",
        // "" / M(None) / S(0) / L(0)
        "\xda\x95\xa2\x1b\x0e\x79\x66\xe5\x12\x7a\x0f\x56\xfd\x52\x56\x81\x4d\xc4\xcc\x66\xcb\x9b\x22\x42\x27\x5a\x9f\xfa\x80\xdf\x4c\x47",
        // "getUUIDBytes:" / M(Xor3) / S(192) / L(13)
        "\xb7\xb5\xa4\x85\x85\x99\x94\x92\xa9\xa4\xb5\xa3\xea\xd0\x64\x0d",
        // "" / M(None) / S(0) / L(0)
        "\x36\x2f\x62\x11\x0b\xde\xad\x7f\x06\x59\x6e\xf7\xa5\x5b\x88\x4e\x2d\x61\x26\xec\x9a\x4e\x1c\x2e\x0d\x9f\x76\x6d\xfa\x01\x43\x3a",
        // "strncmp" / M(Xor3) / S(119) / L(7)
        "\xf4\xf3\xf5\xe9\xe4\xea\xf7\x87\xed\x42\x7b\x56\x2e\x93\x86\xe8",
        // "" / M(None) / S(0) / L(0)
        "\x06\x44\x38\x69\xe8\x92\x72\xf1\xcb\xac\x4c\x8b\xd4\x8b\x3f\x35\x1c\x3c\xb3\xa8\x10\x4f\xca\x63\xe1\x65\x96\x1b\x57\x49\xff\xb3",
        // "" / M(None) / S(0) / L(0)
        "\xca\xd7\x48\x60\xf5\xfa\x16\x65\xb9\xad\xa5\xae\x6a\x25\x6a\x59\xb7\xb2\xc1\x7d\xff\xd2\x5c\xcd\x2d\x8f\xe9\x5e\x0d\x57\x77\xbe",
        // "CFStringCreateWithCString" / M(Rot) / S(236) / L(25)
        "\x2f\x32\x3f\x60\x5e\x55\x5a\x53\x2f\x5e\x51\x4d\x60\x51\x43\x55\x60\x54\x2f\x3f\x60\x5e\x55\x5a\x53\xec\xb3\x98\x8d\x0b\x8a\x8f\x14\x3c",
        // "d2i_X509_bio" / M(Rot) / S(86) / L(12)
        "\xba\x88\xbf\xb5\xae\x8b\x86\x8f\xb5\xb8\xbf\xc5\x56\xf8\x7d\xa9",
        // "CC_SHA1" / M(Xor3) / S(68) / L(7)
        "\x17\x17\x0b\x07\x1c\x15\x65\x54\x59\x29\x13\x0c\xb2\x71\x72\x8d",
        // "ASN1_INTEGER_get" / M(Xor1) / S(211) / L(16)
        "\x92\x80\x9d\xe2\x8c\x9a\x9d\x87\x96\x94\x96\x81\x8c\xb4\xb6\xa7\xd3",
        // "%02X" / M(Xor4) / S(245) / L(4)
        "\x75\x60\x62\x08\x50\x3f\x1a\x43\xa0\xac\x44\x76\x68\xf6\x13\x3b",
        // "" / M(None) / S(0) / L(0)
        "\x1e\x9c\x88\x6e\x03\xba\x84\xc3\xd5\x9b\xca\x66\xd6\x3a\x55\xff\xde\xa1\x2e\xf6\x04\x6e\x0a\x94\x33\x41\x54\xea\x45\x2d\x3f\x31",
        // "CFEqual" / M(Xor4) / S(145) / L(7)
        "\x53\x56\x55\x61\x65\x71\x7c\x10\xdf\x2c\x6b\xbd\xc0\xdc\x01\xe7",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(37) / L(36)
        "\x1a\x1f\x1b\x2c\x37\x3d\x35\x3c\x1e\x3c\x2d\x0f\x38\x35\x2c\x3c\x1f\x36\x2b\x10\x37\x3f\x36\x1d\x30\x3a\x2d\x30\x36\x37\x38\x2b\x20\x12\x3c\x20\x59",
        // "BIO_free" / M(Xor1) / S(125) / L(8)
        "\x3f\x34\x32\x22\x1b\x0f\x18\x18\x7d\xf8\x17\xa5\x7a\x48\x3a\xf3",
        // "OBJ_txt2obj" / M(Xor4) / S(65) / L(11)
        "\x5f\x52\x5a\x4f\x64\x68\x64\x22\x7f\x72\x7a\x10\x00\xca\x97\x42",
        // "ASN1_INTEGER_get" / M(Xor2) / S(232) / L(16)
        "\xb8\xaa\xb7\xc8\xa6\xb0\xb7\xad\xbc\xbe\xbc\xab\xa6\x9e\x9c\x8d\xf9",
        // "EVP_DigestUpdate" / M(Xor4) / S(204) / L(16)
        "\xc9\xda\xdc\xd3\xc8\xe5\xeb\xe9\xff\xf8\xd9\xfc\xe8\xed\xf8\xe9\x8c",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(48) / L(25)
        "\x4a\x27\x22\x2b\x4d\x5c\x53\x5f\x57\x4d\x75\x77\x66\x4d\x66\x77\x6a\x66\x4d\x70\x6b\x4d\x5c\x5b\x56\x12\xb0\x1d\xf7\x46\xa3\x2e\x40\x43",
        // "PKCS7_free" / M(Xor2) / S(184) / L(10)
        "\xf8\xe3\xeb\xfb\x9f\xf7\xce\xda\xcd\xcd\xa8\x9b\xfe\x7b\xdf\xce",
        // "sk_num" / M(Xor3) / S(245) / L(6)
        "\x76\x6e\x5a\x6b\x70\x68\x05\xda\xe4\xfa\x26\xcf\x9d\x4b\xd8\xad",
        // "CFRelease" / M(Xor1) / S(239) / L(9)
        "\xac\xa9\xbd\x8a\x83\x8a\x8e\x9c\x8a\xef\xa4\x91\x10\x6e\xfb\x45",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xcd\xc2\x15\x5c\xaf\x3e\x9f\xfb\xc7\x30\x4e\x7e\xb4\x13\x44\xcb\xb0\xae\xee\x07\x5f\x3b\x1e\x4f\x0f\x2d\x29\x08\xc1\x97\x25",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(17) / L(23)
        "\x6f\x50\x45\x4e\x73\x73\x6c\x7f\x41\x44\x44\x7f\x41\x4c\x4c\x7f\x44\x49\x47\x45\x53\x54\x53\x20\xaf\xdf\xcf\xf4\xee\xe2\x5e\x30",
        // "CFReadStreamClose" / M(Rot) / S(41) / L(17)
        "\x6c\x6f\x7b\x8e\x8a\x8d\x7c\x9d\x9b\x8e\x8a\x96\x6c\x95\x98\x9c\x8e\x29",
        // "objc_getClass" / M(Xor1) / S(255) / L(13)
        "\x90\x9d\x95\x9c\xa0\x98\x9a\x8b\xbc\x93\x9e\x8c\x8c\xff\xf3\xae",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(21) / L(23)
        "\xf3\xeb\xf2\xc5\xc3\xc5\xc9\xd0\xd4\xf2\xc5\xc6\xd2\xc5\xd3\xc8\xf2\xc5\xd1\xd5\xc5\xd3\xd4\xa0\x50\x98\xf3\x68\xea\x55\x9f\x9a",
        // "strlen" / M(Xor3) / S(49) / L(6)
        "\x32\x35\x33\x2d\x24\x2f\x41\xfd\xa0\x27\xd6\x5e\x44\x92\xce\xdb",
        // "CFBundleGetMainBundle" / M(Rot) / S(252) / L(21)
        "\x3f\x42\x3e\x71\x6a\x60\x68\x61\x43\x61\x70\x49\x5d\x65\x6a\x3e\x71\x6a\x60\x68\x61\xfc",
        // "X509_digest" / M(Rot) / S(177) / L(11)
        "\x09\xe6\xe1\xea\x10\x15\x1a\x18\x16\x24\x25\xb1\xdd\x5a\x21\xd2",
        // "sel_registerName" / M(Xor1) / S(112) / L(16)
        "\x03\x15\x1c\x2f\x02\x15\x17\x19\x03\x04\x15\x02\x3e\x11\x1d\x15\x70",
        // "16" / M(Xor2) / S(131) / L(2)
        "\xa2\xa5\x93\xa1\xc9\xd4\x77\xff\xae\xdc\xb4\x95\x2f\xe1\xd6\x8f",
        // "CFDateFormatterSetProperty" / M(Rot) / S(169) / L(26)
        "\xec\xef\xed\x0a\x1d\x0e\xef\x18\x1b\x16\x0a\x1d\x1d\x0e\x1b\xfc\x0e\x1d\xf9\x1b\x18\x19\x0e\x1b\x1d\x22\xa9\x22\xd3\x8b\x21\xe6\x70\x06\xb4",
        // "X509_STORE_free" / M(Rot) / S(211) / L(15)
        "\x2b\x08\x03\x0c\x32\x26\x27\x22\x25\x18\x32\x39\x45\x38\x38\xd3",
        // "CC_SHA1" / M(Rot) / S(236) / L(7)
        "\x2f\x2f\x4b\x3f\x34\x2d\x1d\xec\x0e\x2b\x03\x6a\x0b\x02\xc0\xfc",
        // "16" / M(Xor1) / S(241) / L(2)
        "\xc0\xc7\xf1\x5d\xee\x9d\x15\x6a\xe8\xfa\x31\x60\xfa\x67\xa2\xc4",
        // "" / M(None) / S(0) / L(0)
        "\xff\xf3\xab\xce\x8e\x76\x72\x7c\x62\xc2\x13\x26\x9e\x3a\x1a\x04\xe5\x65\x1d\x84\xcb\xfd\x05\xcd\xb6\x07\xd6\x01\x34\xe4\xcb\x92",
        // "X509_STORE_add_cert" / M(Rot) / S(208) / L(19)
        "\x28\x05\x00\x09\x2f\x23\x24\x1f\x22\x15\x2f\x31\x34\x34\x2f\x33\x35\x42\x44\xd0",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(63) / L(31)
        "\xaa\x82\x85\x93\xb8\xaf\xa4\x83\xa8\xa2\xb3\xa8\xae\xad\xa0\xb1\xb8\x95\xa0\xab\xb4\xa4\x82\xa0\xab\xab\x81\xa0\xa2\xaa\xb2\x3f",
        // "CFNumberCreate" / M(Xor1) / S(4) / L(14)
        "\x47\x42\x4a\x71\x69\x66\x61\x76\x47\x76\x61\x65\x70\x61\x04\x5c",
        // "CFStringCreateWithCString" / M(Xor3) / S(244) / L(25)
        "\x55\x50\x45\x62\x64\x7f\x78\x71\x55\x64\x73\x77\x62\x73\x41\x7f\x62\x7e\x55\x45\x62\x64\x7f\x78\x71\x16\x42\x78\xf3\x48\x27\x5f\x39\x2b",
        // "CFStringCompare" / M(Xor1) / S(180) / L(15)
        "\xf7\xf2\xe7\xc0\xc6\xdd\xda\xd3\xf7\xdb\xd9\xc4\xd5\xc6\xd1\xb4",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x3b\xb3\x0b\x1e\x5b\x1f\xfd\xc5\x81\x36\x49\x83\x30\x6c\x00\x9c\x2d\x95\x65\x44\xd5\x07\x35\x17\x23\xc4\xc4\x23\xe8\x98\xf6",
        // "BIO_write" / M(Xor3) / S(233) / L(9)
        "\xbb\xb0\xb6\xa6\x8e\x8b\x90\x8d\x9c\xf9\x7d\x7a\xfd\x49\x81\x09",
        // "" / M(None) / S(0) / L(0)
        "\xdc\xe5\xa1\x9e\xec\xd5\x46\xab\x59\x5f\x59\x02\x13\xb4\xb1\x64\xbd\x1b\x28\x13\x04\x3d\x0d\xe7\x75\x13\x5e\x12\x47\x44\xbe\x23",
        // "start" / M(Xor2) / S(94) / L(5)
        "\x3d\x3a\x2f\x3c\x3a\x4e\x6f\xb6\xad\xba\x01\x9a\x95\x83\xe6\x5f",
        // "" / M(None) / S(0) / L(0)
        "\x54\x84\xd6\xf2\x7f\x27\x8b\x0a\x85\x0a\xee\xe6\xf3\xdd\x76\xee\xab\xea\xc9\x59\x5a\x75\x48\xa4\x0a\x44\x7b\xd7\x98\x23\x91\x6f",
        // "objc_msgSend" / M(Rot) / S(162) / L(12)
        "\x11\x04\x0c\x05\x01\x0f\x15\x09\xf5\x07\x10\x06\xa2\x2a\xe7\xbf",
        // "" / M(None) / S(0) / L(0)
        "\xc0\xcf\x7b\xd6\xe8\x2d\xd0\xdb\x4b\x43\x5c\x0f\xd2\xf6\xe3\x63\x59\xc5\xbf\x8a\xce\x6f\xf2\x64\xeb\x5b\x01\x1a\xcb\xee\x4d\xdb",
        // "" / M(None) / S(0) / L(0)
        "\xd6\x32\x21\xf5\x32\x91\x0c\x50\xd4\x2d\xcd\x0a\x8f\xf8\xa2\x27\x81\x04\x04\x3b\xf5\x00\x59\x09\xe4\xec\xc5\xe6\x31\x91\xe5\xa9",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(86) / L(31)
        "\x1d\x35\x30\x22\x0f\x06\x13\x32\x1f\x15\x02\x1f\x19\x18\x17\x04\x0f\x20\x17\x1a\x03\x13\x35\x17\x1a\x1a\x34\x17\x15\x1d\x05\x76",
        // "CFDataGetBytePtr" / M(Xor2) / S(229) / L(16)
        "\xb7\xb2\xb0\x95\x80\x95\xb3\x91\x80\xb6\x8d\x80\x91\xa4\x80\x86\xf4",
        // "X509_STORE_new" / M(Rot) / S(125) / L(14)
        "\xd5\xb2\xad\xb6\xdc\xd0\xd1\xcc\xcf\xc2\xdc\xeb\xe2\xf4\x7d\xce",
        // "" / M(None) / S(0) / L(0)
        "\xdc\xff\x7e\xf1\x47\xa7\xc5\xa3\x7f\xca\x8f\xc7\x4a\xae\xd1\x44\x81\xbf\x7d\x75\x6c\xc0\x0b\xaa\x91\x06\x73\xc4\xbf\x7a\x07\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x3b\x19\x3c\x8c\x34\xea\x24\xef\xa6\x11\x59\xb0\x97\x2f\x73\xc4\xba\x46\x96\xb7\x79\x41\x1a\x16\xd4\x3b\x45\x15\x9d\xf2\xe7\xec",
        // "X509_free" / M(Xor1) / S(100) / L(9)
        "\x3c\x51\x54\x5d\x3b\x02\x16\x01\x01\x64\x81\xed\xbd\x70\x81\x16",
        // "init" / M(Xor2) / S(66) / L(4)
        "\x3b\x3c\x3b\x26\x52\xcd\x65\xe1\x4a\x71\x83\x51\x3c\xc3\x2c\xf9",
        // "CFStringCreateWithBytes" / M(Xor2) / S(190) / L(23)
        "\xdd\xd8\xcd\xea\xec\xf7\xf0\xf9\xdd\xec\xfb\xff\xea\xfb\xc9\xf7\xea\xf6\xdc\xe7\xea\xfb\xed\x9e\x3a\xfc\x87\xf0\xaa\x1f\x4d\x7d",
        // "" / M(None) / S(0) / L(0)
        "\xf5\xe9\xbe\x24\x9d\xc7\x10\x79\x76\x0c\x97\x9e\x9c\x25\xa0\xb8\x2d\xd5\xd3\xf8\x12\x30\x5d\xc3\x6d\x8f\x03\x5f\x07\x68\xfb\x0b",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(144) / L(24)
        "\xfb\xd3\xd6\xd4\xf1\x04\xf5\xd6\xff\x02\xfd\xf1\x04\x04\xf5\x02\xe4\xf9\xfd\xf5\xea\xff\xfe\xf5\x90\x46\xfe\xdd\x05\xec\x32\x91\xda",
        // "%02x" / M(Xor4) / S(140) / L(4)
        "\xe5\xf0\xf2\xb8\xc0\x0a\x8f\x87\x65\xe4\x5e\x7e\xcf\x8b\xc8\x0f",
        // "ASN1_INTEGER_get" / M(Xor3) / S(235) / L(16)
        "\xbd\xaf\xb2\xcd\xa3\xb5\xb2\xa8\xb9\xbb\xb9\xae\xa3\x9b\x99\x88\xfc",
        // "" / M(None) / S(0) / L(0)
        "\x6d\xce\x4d\xc0\xcf\x17\x4a\x05\x4e\x97\x55\x45\xd5\x74\x3c\x29\x5f\xb8\xf7\xa6\x9b\xdc\x11\x6e\xdb\x72\x39\xc6\x53\x96\x28\x02",
        // "CFDateCompare" / M(Rot) / S(164) / L(13)
        "\xe7\xea\xe8\x05\x18\x09\xe7\x13\x11\x14\x05\x16\x09\xa4\x37\x17",
        // "SHA1" / M(Xor1) / S(254) / L(4)
        "\xad\xb6\xbf\xcf\xfe\x6a\x70\x1d\x77\xbe\x95\x59\x68\x47\x9e\xe1",
        // "" / M(None) / S(0) / L(0)
        "\x6a\xf5\x70\xb7\x02\x5f\xc7\x19\x02\xed\x25\x1f\x2f\x4f\xc3\x80\x04\x1f\xab\x1a\xe1\x07\x88\xce\xbc\xdc\xdb\xdc\xf6\xf8\x87\x9c",
        // "" / M(None) / S(0) / L(0)
        "\xaf\x69\xf0\x6c\xf1\x32\x80\x0f\xee\x9d\x28\xf6\x8e\xf2\x23\xad\x96\x4a\x33\x2b\x57\x08\x2b\x62\xb2\x1c\xbb\x04\x39\x6f\xcc\x94",
        // "CFRelease" / M(Xor4) / S(234) / L(9)
        "\xe3\xe6\xf2\xc5\xcc\xc5\xc1\xd3\xc5\xa0\xbd\xc2\x70\x6e\x8e\x28",
        // "CFDictionaryGetValue" / M(Xor1) / S(119) / L(20)
        "\x34\x31\x33\x1e\x14\x03\x1e\x18\x19\x16\x05\x0e\x30\x12\x03\x21\x16\x1b\x02\x12\x77",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x2a\x69\x85\xbf\x25\xbd\x35\x38\x5a\xa4\xbb\xfb\x4f\xb9\xec\x10\x7a\xa2\x7f\x59\xc9\x1c\x69\x82\xeb\xbe\xbf\x6e\xbb\xeb\xee",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(198) / L(59)
        "\xfc\xf7\x00\xf7\x0b\x00\xfb\x08\x00\xfc\xfc\x00\xf8\x09\x00\xfb\xff\x00\xf9\x07\x00\xf6\xfe\x00\x0c\x0c\x00\xfb\xfe\x00\x0a\xf7\x00\xfa\x07\x00\x0b\xf8\x00\xf8\xfa\x00\xfb\xf8\x00\x0a\xf7\x00\xff\xfe\x00\x0a\x0c\x00\xfc\x09\x00\xfc\xf6\xc6\xe3\x11\x4d\x9a\xa8\x77\xe8\x38",
        // "" / M(None) / S(0) / L(0)
        "\xa9\x28\xd3\x70\x55\x96\xfa\x45\x11\xc4\x30\xc6\x4d\x34\x23\x92\xfb\x23\xdf\x67\x41\x25\x18\x9a\x55\x97\x6e\x47\xe0\x34\xe3\x43",
        // "CFBundleGetMainBundle" / M(Xor3) / S(0) / L(21)
        "\x55\x50\x54\x63\x78\x72\x7a\x73\x51\x73\x62\x5b\x77\x7f\x78\x54\x63\x78\x72\x7a\x73\x16",
        // "EVP_DigestFinal" / M(Xor2) / S(201) / L(15)
        "\x9c\x8f\x89\x86\x9d\xb0\xbe\xbc\xaa\xad\x9f\xb0\xb7\xb8\xb5\xd9",
        // "EVP_DigestFinal" / M(Xor2) / S(212) / L(15)
        "\x81\x92\x94\x9b\x80\xad\xa3\xa1\xb7\xb0\x82\xad\xaa\xa5\xa8\xc4",
        // "CFArrayGetCount" / M(Xor4) / S(15) / L(15)
        "\xb3\xb6\xb1\x82\x82\x91\x89\xb7\x95\x84\xb3\x9f\x85\x9e\x84\xf0",
        // "CFStringCompare" / M(Xor1) / S(177) / L(15)
        "\xf2\xf7\xe2\xc5\xc3\xd8\xdf\xd6\xf2\xde\xdc\xc1\xd0\xc3\xd4\xb1",
        // "CFDateCompare" / M(Xor4) / S(248) / L(13)
        "\xc3\xc6\xc4\xe1\xf4\xe5\xc3\xef\xed\xf0\xe1\xf2\xe5\x80\xa7\x43",
        // "CFBundleShortVersionString" / M(Xor4) / S(180) / L(26)
        "\xdf\xda\xde\xe9\xf2\xf8\xf0\xf9\xcf\xf4\xf3\xee\xe8\xca\xf9\xee\xef\xf5\xf3\xf2\xcf\xe8\xee\xf5\xf2\xfb\x9c\xd1\x68\xcb\x85\x70\xbd\xd8\x61",
        // "%02X" / M(Xor1) / S(134) / L(4)
        "\xa3\xb6\xb4\xde\x86\x41\x30\x67\x74\x1e\xa2\x60\xd7\x6a\x6e\xa7",
        // "" / M(None) / S(0) / L(0)
        "\x3c\xa8\xbb\xce\x04\xf0\x51\x50\x77\xc5\x22\x5e\xb2\x3b\x9d\x20\x2e\x36\x2f\x0a\xae\xe3\xac\xe7\x6b\x5a\xd2\x95\x8c\x33\x45\xc2",
        // "sel_registerName" / M(Xor2) / S(40) / L(16)
        "\x4a\x5c\x55\x66\x4b\x5c\x5e\x50\x4a\x4d\x5c\x4b\x77\x58\x54\x5c\x39",
        // "CC_SHA1_Final" / M(Xor2) / S(178) / L(13)
        "\xe1\xe1\xfd\xf1\xea\xe3\x93\xfd\xe4\xcb\xcc\xc3\xce\xa2\xbf\x2c",
        // "CFBundleGetIdentifier" / M(Rot) / S(226) / L(21)
        "\x25\x28\x24\x57\x50\x46\x4e\x47\x29\x47\x56\x2b\x46\x47\x50\x56\x4b\x48\x4b\x47\x54\xe2",
        // "" / M(None) / S(0) / L(0)
        "\xf0\x04\xf3\xc3\x0e\x1e\x9b\x0b\xf2\x82\x0c\x92\xca\x01\xe7\xe0\x88\x0d\xd9\x4a\x48\x33\x60\x7a\xe0\x7c\x12\xe2\xa7\x21\x1a\x4e",
        // "%02x:" / M(Xor2) / S(58) / L(5)
        "\x0f\x1a\x18\x52\x10\x2a\xeb\x3a\x00\xfc\x2e\x7a\x8e\x42\xa4\xa9",
        // "EVP_DigestInit" / M(Xor3) / S(119) / L(14)
        "\xc2\xd1\xd7\xd8\xc3\xee\xe0\xe2\xf4\xf3\xce\xe9\xee\xf3\x87\x11",
        // "CFBundleGetIdentifier" / M(Rot) / S(35) / L(21)
        "\x66\x69\x65\x98\x91\x87\x8f\x88\x6a\x88\x97\x6c\x87\x88\x91\x97\x8c\x89\x8c\x88\x95\x23",
        // "init" / M(Xor1) / S(228) / L(4)
        "\x8d\x8a\x8d\x90\xe4\x61\xd5\x61\x7d\xb0\x38\x79\x6e\x3c\x08\x25",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(23) / L(22)
        "\x6d\x68\x6f\x5c\x5c\x4f\x57\x69\x4b\x5a\x78\x4f\x42\x5b\x4b\x6f\x5a\x67\x40\x4a\x4b\x56\x2e",
        // "NSBundle" / M(Xor3) / S(20) / L(8)
        "\x6a\x77\x66\x51\x4a\x40\x48\x41\x24\xa8\xb6\xda\xe7\xd1\x20\xea",
        // "ASN1_OBJECT_free" / M(Rot) / S(201) / L(16)
        "\x0a\x1c\x17\xfa\x28\x18\x0b\x13\x0e\x0c\x1d\x28\x2f\x3b\x2e\x2e\xc9",
        // "CC_SHA1_Update" / M(Xor3) / S(251) / L(14)
        "\x48\x48\x54\x58\x43\x4a\x3a\x54\x5e\x7b\x6f\x6a\x7f\x6e\x0b\x87",
        // "CFDateFormatterSetProperty" / M(Xor3) / S(119) / L(26)
        "\xd9\xdc\xde\xfb\xee\xff\xdc\xf5\xe8\xf7\xfb\xee\xee\xff\xe8\xc9\xff\xee\xca\xe8\xf5\xea\xff\xe8\xee\xe3\x9a\x68\x7a\xed\xd4\xdb\xed\xb6\xea",
        // "CFDateCreate" / M(Rot) / S(17) / L(12)
        "\x54\x57\x55\x72\x85\x76\x54\x83\x76\x72\x85\x76\x11\x37\x78\x73",
        // "CFDateFormatterSetProperty" / M(Rot) / S(129) / L(26)
        "\xc4\xc7\xc5\xe2\xf5\xe6\xc7\xf0\xf3\xee\xe2\xf5\xf5\xe6\xf3\xd4\xe6\xf5\xd1\xf3\xf0\xf1\xe6\xf3\xf5\xfa\x81\xa2\xc8\xee\xaf\xda\x22\xfd\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xab\xf6\x67\x5b\xee\xd9\x9b\xb6\xb9\xbe\x79\xdd\x16\x54\x3f\x6c\x33\xb3\x9d\xa2\x14\x30\x71\x29\x6c\x4b\x74\xf5\xfa\xa7\xf1",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(179) / L(24)
        "\xd1\xd4\xd0\xe7\xfc\xf6\xfe\xf7\xc7\xfc\xfe\xfd\xf3\xf6\xd7\xea\xf7\xf1\xe7\xe6\xf3\xf0\xfe\xf7\x92\x21\xe2\xb7\xe0\xfe\xe0\x3a\x37",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(63) / L(24)
        "\x7c\x79\x7b\x5e\x4b\x5a\x79\x50\x4d\x52\x5e\x4b\x4b\x5a\x4d\x6c\x5a\x4b\x79\x50\x4d\x52\x5e\x4b\x3f\x0d\x13\x9c\xd2\x77\xc0\xa9\x0e",
        // "dlopen" / M(Xor4) / S(217) / L(6)
        "\xf4\xfc\xff\xe0\xf5\xfe\x90\x8f\xc7\x94\x90\xf2\xf3\x95\xd3\x83",
        // "BIO_s_mem" / M(Xor1) / S(175) / L(9)
        "\xed\xe6\xe0\xf0\xdc\xf0\xc2\xca\xc2\xaf\xda\xfa\xbe\xb9\xdc\xaa",
        // "CFDateFormatterCreate" / M(Xor2) / S(211) / L(21)
        "\x86\x83\x81\xa4\xb1\xa0\x83\xaa\xb7\xa8\xa4\xb1\xb1\xa0\xb7\x86\xb7\xa0\xa4\xb1\xa0\xc5",
        // "" / M(None) / S(0) / L(0)
        "\x01\xea\xb9\x54\x40\xdd\xc6\x74\xe8\x76\x91\x72\x07\xe8\x2e\x9b\x74\x60\x46\x66\x71\x31\x92\xf6\x06\x87\xd3\x1f\x35\xec\x62\xc1",
        // "CFStringCompare" / M(Xor4) / S(138) / L(15)
        "\xe3\xe6\xf3\xd4\xd2\xc9\xce\xc7\xe3\xcf\xcd\xd0\xc1\xd2\xc5\xa0",
        // "CFBundleVersion" / M(Xor3) / S(30) / L(15)
        "\x6d\x68\x6c\x5b\x40\x4a\x42\x4b\x78\x4b\x5c\x5d\x47\x41\x40\x2e",
        // "CFArrayCreateMutable" / M(Rot) / S(153) / L(20)
        "\xdc\xdf\xda\x0b\x0b\xfa\x12\xdc\x0b\xfe\xfa\x0d\xfe\xe6\x0e\x0d\xfa\xfb\x05\xfe\x99",
        // "%02X" / M(Xor1) / S(70) / L(4)
        "\x63\x76\x74\x1e\x46\x16\xac\x65\xb1\x90\xd4\xd4\xfb\x52\x03\x8a",
        // "" / M(None) / S(0) / L(0)
        "\xe5\x77\x0f\x21\xaf\x44\x40\xc4\xf6\x1d\xce\x7d\x7c\xd8\x1c\xbf\xd6\x20\xed\xd4\xb1\xb8\x3a\xef\x4c\x8b\x07\xb6\x55\x45\x1b\x0b",
        // "CFBundleIdentifier" / M(Xor2) / S(109) / L(18)
        "\x3d\x38\x3c\x0b\x10\x1a\x12\x1b\x37\x1a\x1b\x10\x0a\x17\x18\x17\x1b\x0c\x7e",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(52) / L(40)
        "\x33\x34\x34\x40\x30\x47\x33\x33\x37\x46\x30\x3c\x36\x44\x35\x3d\x43\x43\x30\x3d\x41\x34\x31\x44\x40\x37\x37\x31\x30\x37\x41\x34\x3c\x3d\x41\x43\x33\x46\x33\x35\x05\xd0\x40\x7c\x01\xe3\x58\x11\x10",
        // "" / M(None) / S(0) / L(0)
        "\x1c\xe9\x47\xfd\xec\xcd\xd2\xf8\xe6\xcd\x3e\xa8\xef\xce\x99\xc7\x20\xd2\x0b\xc8\xc8\x1c\x5a\x36\x23\xb7\x64\x15\xc4\xf0\xcf\xe9",
        // "sk_num" / M(Rot) / S(100) / L(6)
        "\xd7\xcf\xc3\xd2\xd9\xd1\x64\xd8\x8d\x99\xd0\xd1\x45\x5d\x40\x25",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(32) / L(22)
        "\xcf\x95\x93\x92\xcf\x8c\x89\x82\xcf\x8c\x89\x82\x8f\x82\x8a\x83\xce\x84\x99\x8c\x89\x82\xe0",
        // "exit" / M(Rot) / S(54) / L(4)
        "\x9b\xae\x9f\xaa\x36\xe4\xec\x8e\x6f\x81\x9d\x3e\x6b\xbd\x75\xfc",
        // "" / M(None) / S(0) / L(0)
        "\x43\x4b\xb4\xc1\x8b\x60\x9d\x73\x0e\xe4\x4c\x81\xa7\x3f\x40\xd1\x78\xdf\x9a\x62\x74\xbb\x62\x0c\x4f\x44\xaa\x15\x65\x4b\x2f\xd6",
        // "ASN1_INTEGER_free" / M(Rot) / S(185) / L(17)
        "\xfa\x0c\x07\xea\x18\x02\x07\x0d\xfe\x00\xfe\x0b\x18\x1f\x2b\x1e\x1e\xb9",
        // "BIO_free" / M(Xor4) / S(154) / L(8)
        "\xe2\xe9\xef\xff\xc6\xd2\xc5\xc5\xa0\xe3\xe9\x7a\x1b\x9b\xb8\xf5",
        // "sk_free" / M(Xor4) / S(36) / L(7)
        "\x33\x2b\x1f\x26\x32\x25\x25\x40\x02\x92\xe4\x88\x08\x18\x19\x2e",
        // "setDelegate:" / M(Xor4) / S(148) / L(12)
        "\x33\x25\x34\x04\x25\x2c\x25\x27\x21\x34\x25\x7a\x40\x5a\x1c\xf2",
        // "SHA1_Update" / M(Rot) / S(21) / L(11)
        "\x68\x5d\x56\x46\x74\x6a\x85\x79\x76\x89\x7a\x15\xbe\x7b\xd3\xe6",
        // "" / M(None) / S(0) / L(0)
        "\x17\x9b\xb4\x15\xe9\x06\xa3\xa0\x13\x92\x3c\xab\x61\x32\xc4\xfb\xa9\xce\xa1\x7f\xd0\x3f\xdc\xc1\x52\xe7\xf9\xa5\x5c\x0a\x64\xc1",
        // "SHA1_Update" / M(Xor1) / S(134) / L(11)
        "\xd5\xce\xc7\xb7\xd9\xd3\xf6\xe2\xe7\xf2\xe3\x86\x15\x45\x8d\xc3",
        // "" / M(None) / S(0) / L(0)
        "\x77\x2a\xc5\xe9\x72\x28\x85\x42\xea\xc8\x56\x69\xcb\x1e\xc9\xe3\xf2\x2e\x6a\xd7\xdd\x07\x0f\x26\x5e\x85\xd8\x7d\x8f\xab\xb5\x10",
        // "" / M(None) / S(0) / L(0)
        "\x62\x68\x8d\x3f\x4b\xd3\x16\xd8\xd6\xae\x5d\xd1\x7b\x9a\xe5\xef\x93\xd1\x1b\x7c\xb5\x21\x18\x74\x24\xfe\x90\x2e\x57\xc8\xa9\x55",
        // "UIDevice" / M(Xor3) / S(157) / L(8)
        "\xf8\xe4\xe9\xc8\xdb\xc4\xce\xc8\xad\x12\x8e\x90\x69\x32\x06\xbd",
        // "CFBundleShortVersionString" / M(Xor2) / S(82) / L(26)
        "\x32\x37\x33\x04\x1f\x15\x1d\x14\x22\x19\x1e\x03\x05\x27\x14\x03\x02\x18\x1e\x1f\x22\x05\x03\x18\x1f\x16\x71\x1a\x3f\x58\x4b\x88\x18\x4b\x53",
        // "" / M(None) / S(0) / L(0)
        "\x6a\x2f\xa8\x94\xac\x8d\x1d\xae\x7e\x53\xe9\x33\x73\xfe\x55\x7f\x3b\xce\xe7\x7a\xa0\x52\xfd\x12\x1d\x0e\x8f\x73\xa5\x72\xcb\xc7",
        // "mainBundle" / M(Xor4) / S(41) / L(10)
        "\xfd\xf1\xf9\xfe\xd2\xe5\xfe\xf4\xfc\xf5\x90\x0c\x43\xa8\x1f\x95",
        // "BIO_write" / M(Xor3) / S(6) / L(9)
        "\x54\x5f\x59\x49\x61\x64\x7f\x62\x73\x16\x1e\x14\x51\x91\x59\x4a",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(90) / L(39)
        "\x9d\xa0\xae\xc3\xc7\xbf\xb4\xc9\xc8\xbf\x9d\xcc\xbf\xbb\xce\xbf\xb1\xc3\xce\xc2\xae\xc3\xc7\xbf\xa3\xc8\xce\xbf\xcc\xd0\xbb\xc6\xa0\xcc\xc9\xc7\xa1\xa7\xae\x5a\x96\x13\x8a\x82\x95\xb9\x72\xf1",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(229) / L(24)
        "\x45\x40\x42\x67\x72\x63\x40\x69\x74\x6b\x67\x72\x72\x63\x74\x55\x63\x72\x40\x69\x74\x6b\x67\x72\x06\xd4\x44\x61\xd1\x94\xbb\xe5\xf8",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(188) / L(21)
        "\xb9\x91\x94\x86\xab\xa2\xb7\x93\xa0\xa0\xb3\xab\x91\xb3\xbe\xbe\x90\xb3\xb1\xb9\xa1\xd2",
        // "CFBundleUnloadExecutable" / M(Xor1) / S(174) / L(24)
        "\xed\xe8\xec\xdb\xc0\xca\xc2\xcb\xfb\xc0\xc2\xc1\xcf\xca\xeb\xd6\xcb\xcd\xdb\xda\xcf\xcc\xc2\xcb\xae\xa7\x64\xac\xb1\x9d\x86\x49\xbf",
        // "mainBundle" / M(Xor4) / S(199) / L(10)
        "\x1d\x11\x19\x1e\x32\x05\x1e\x14\x1c\x15\x70\x2d\xac\xae\x97\xc2",
        // "CFDictionaryAddValue" / M(Xor4) / S(207) / L(20)
        "\xb8\xbd\xbf\x92\x98\x8f\x92\x94\x95\x9a\x89\x82\xba\x9f\x9f\xad\x9a\x97\x8e\x9e\xfb",
        // "PKCS7_verify" / M(Xor1) / S(154) / L(12)
        "\xca\xd1\xd9\xc9\xad\xc5\xec\xff\xe8\xf3\xfc\xe3\x9a\x05\xa6\x9e",
        // "alloc" / M(Xor3) / S(214) / L(5)
        "\x87\x8a\x8a\x89\x85\xe6\xb7\x1e\xac\x10\xf5\x17\x4a\xc2\x85\xc8",
        // "appStoreReceiptURL" / M(Xor3) / S(12) / L(18)
        "\x7e\x6f\x6f\x4c\x6b\x70\x6d\x7a\x4d\x7a\x7c\x7a\x76\x6f\x6b\x4a\x4d\x53\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x7c\xa9\x0f\x39\x97\xc5\xda\x4f\x09\x63\x3f\xa6\x6d\xfa\x86\xe3\x2a\xb8\x11\x78\xa3\x0a\xa5\xa9\x3b\xcf\xcc\x4f\xc8\x1f\x56\x99",
        // "objc_getClass" / M(Xor3) / S(9) / L(13)
        "\x76\x7b\x73\x7a\x46\x7e\x7c\x6d\x5a\x75\x78\x6a\x6a\x19\x36\xaa",
        // "CFArrayAppendValue" / M(Rot) / S(151) / L(18)
        "\xda\xdd\xd8\x09\x09\xf8\x10\xd8\x07\x07\xfc\x05\xfb\xed\xf8\x03\x0c\xfc\x97",
        // "X509_digest" / M(Xor4) / S(33) / L(11)
        "\x48\x25\x20\x29\x4f\x74\x79\x77\x75\x63\x64\x10\x76\x9f\x57\xef",
        // "com.treasurebox.gear.ios" / M(Xor1) / S(249) / L(24)
        "\x9a\x96\x94\xd7\x8d\x8b\x9c\x98\x8a\x8c\x8b\x9c\x9b\x96\x81\xd7\x9e\x9c\x98\x8b\xd7\x90\x96\x8a\xf9\x4a\xd5\x66\x68\x7f\x25\x94\x46",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(72) / L(21)
        "\x5b\x73\x76\x64\x49\x40\x55\x71\x42\x42\x51\x49\x73\x51\x5c\x5c\x72\x51\x53\x5b\x43\x30",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(246) / L(25)
        "\x27\x24\x28\x24\x2e\x2a\x26\x24\x27\x27\x29\x2c\x29\x2b\x24\x27\x26\x26\x24\x2c\x24\x27\x27\x24\x27\xf6\xb2\x6f\x37\x34\x22\x0f\x5e\x9f",
        // "longjmp" / M(Rot) / S(19) / L(7)
        "\x7f\x82\x81\x7a\x7d\x80\x83\x13\x39\x09\x6c\xe8\xb4\x51\x70\x61",
        // "X509_free" / M(Xor3) / S(17) / L(9)
        "\x79\x14\x11\x18\x7e\x47\x53\x44\x44\x21\xee\xad\x7c\xd7\xda\xb3",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(54) / L(59)
        "\x44\x43\x48\x43\x37\x48\x47\x30\x48\x44\x44\x48\x40\x31\x48\x47\x4b\x48\x41\x33\x48\x42\x4a\x48\x34\x34\x48\x47\x4a\x48\x36\x43\x48\x46\x33\x48\x37\x40\x48\x40\x46\x48\x47\x40\x48\x36\x43\x48\x4b\x4a\x48\x36\x34\x48\x44\x31\x48\x44\x42\x72\x72\x7e\x72\x10\xa8\xb5\x96\xb8",
        // "CFArrayCreateMutable" / M(Xor3) / S(217) / L(20)
        "\xad\xa8\xaf\x9c\x9c\x8f\x97\xad\x9c\x8b\x8f\x9a\x8b\xa3\x9b\x9a\x8f\x8c\x82\x8b\xee",
        // "X509_STORE_new" / M(Xor1) / S(118) / L(14)
        "\x2e\x43\x46\x4f\x29\x25\x22\x39\x24\x33\x29\x18\x13\x01\x76\xc2",
        // "CFBundleIdentifier" / M(Xor1) / S(40) / L(18)
        "\x6b\x6e\x6a\x5d\x46\x4c\x44\x4d\x61\x4c\x4d\x46\x5c\x41\x4e\x41\x4d\x5a\x28",
        // "" / M(None) / S(0) / L(0)
        "\x22\xb2\x26\x9e\xd3\x86\x26\x93\xf8\xd5\x48\xbd\x64\xff\xc3\x50\xeb\xaa\xe6\xb0\x44\xbc\x55\x69\x85\xab\x01\x31\xc0\x04\xf8\x19",
        // "" / M(None) / S(0) / L(0)
        "\x65\x8b\xe1\x18\x68\x1b\x5a\xdd\x47\x1c\xf4\xbd\xb8\xbb\xe2\x32\xaf\x8d\xa4\x36\x63\xe7\x86\xd6\x32\x06\x21\x6a\xf7\xdc\x61\x98",
        // "" / M(None) / S(0) / L(0)
        "\x57\x97\x0b\xd0\x6a\xb1\xbf\xc0\xdd\x1e\x16\x65\x9e\x46\xd4\x51\x04\x01\x08\x56\xee\x1a\x4e\x17\x4f\x5b\x54\x81\xbd\xae\xb4\x7a",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(85) / L(24)
        "\x5b\x01\x07\x06\x5b\x18\x1d\x16\x5b\x18\x1d\x16\x27\x0d\x07\x00\x11\x19\x5a\x10\x0d\x18\x1d\x16\x74\xb0\xa4\x19\x5a\xca\x1d\xc1\xba",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(171) / L(40)
        "\xac\xab\xab\xdf\xaf\xd8\xac\xac\xa8\xd9\xaf\xa3\xa9\xdb\xaa\xa2\xdc\xdc\xaf\xa2\xde\xab\xae\xdb\xdf\xa8\xa8\xae\xaf\xa8\xde\xab\xa3\xa2\xde\xdc\xac\xd9\xac\xaa\x9a\x25\x25\xb9\xae\x08\x31\xb0\x6b",
        // "" / M(None) / S(0) / L(0)
        "\x82\xc8\x36\x0b\x78\x74\x1b\xc2\xad\x43\xe7\xdb\x9b\x85\x18\xa1\x2b\x17\x34\x25\xbd\x56\x42\x4b\x6b\xd1\x0c\x1c\x72\x90\xd2\x49",
        // "CFBundleUnloadExecutable" / M(Rot) / S(61) / L(24)
        "\x80\x83\x7f\xb2\xab\xa1\xa9\xa2\x92\xab\xa9\xac\x9e\xa1\x82\xb5\xa2\xa0\xb2\xb1\x9e\x9f\xa9\xa2\x3d\x91\x12\x47\xe5\x96\x82\xfb\xb4",
        // "16" / M(Xor1) / S(121) / L(2)
        "\x48\x4f\x79\xc4\xa3\x65\x66\x77\xae\xb4\xbd\x32\xb2\xc7\xc0\xe6",
        // "" / M(None) / S(0) / L(0)
        "\xe1\xca\x81\x9b\xda\x99\x9f\x06\x3c\x7f\x18\x77\xd1\x4b\x4e\x70\xad\x8b\xaa\x8b\xfa\xaa\xd2\x2e\xfd\x6a\xf9\x40\xc1\xca\x20\xe9",
        // "CFReadStreamRead" / M(Xor2) / S(29) / L(16)
        "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x5e\x69\x6d\x68\x0c",
    };
    
    // Table for storing pointers
    static void *ReceiptValidation_Pointers[483] = {
        ((void *) ASN1_OBJECT_free),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) PKCS7_free),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) strlen),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) OBJ_txt2obj),
        ((void *) ASN1_INTEGER_get),
        ((void *) EVP_DigestUpdate),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) PKCS7_free),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) BIO_free),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int ReceiptValidation_KEHDBLZZJPGX __unused;
    static int ReceiptValidation_DGUKHKWVKMYN __unused;
    static int ReceiptValidation_SPEEHRWMRPMC __unused;
    static int ReceiptValidation_RAZECNUXYJYA __unused;
    static int ReceiptValidation_MWFKACWMFVFQ __unused;
    static int ReceiptValidation_AJBSISVGKDWM __unused;
    static int ReceiptValidation_MEVLNCARHSGQ __unused;
    static int ReceiptValidation_BRLVRUKVXJWH __unused;
    
    
    // The long jump buffer
    static jmp_buf ReceiptValidation_JumpBuf __unused;
    
#define ReceiptValidation_ASN1_get_object_00D20010 ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction00A, 16, 95, 16))
#define ReceiptValidation_ASN1_INTEGER_free_00B60101 ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction005, 257, 172, 18))
#define ReceiptValidation_ASN1_INTEGER_get_009A0152 ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction007, 338, 232, 17))
#define ReceiptValidation_ASN1_OBJECT_free_00B60000 ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00A, 0, 230, 17))
#define ReceiptValidation_BIO_free_009A01B6 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction00C, 438, 154, 16))
#define ReceiptValidation_BIO_free_00B601B6 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00C, 438, 154, 16))
#define ReceiptValidation_BIO_new_009A00DE ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction00A, 222, 222, 16))
#define ReceiptValidation_BIO_new_00D2013C ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction00B, 316, 0, 16))
#define ReceiptValidation_BIO_s_mem_00B6011B ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction005, 283, 209, 16))
#define ReceiptValidation_BIO_s_mem_00B601A6 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction005, 422, 175, 16))
#define ReceiptValidation_BIO_write_00B601C2 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction009, 450, 6, 16))
#define ReceiptValidation_BIO_write_00D20064 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction004, 100, 0, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_00D2012D ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction006, 301, 168, 17))
#define ReceiptValidation_CC_SHA1_00240164 ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 36, 127, 33, ReceiptValidation_ObfuscationFunction003, 356, 236, 16))
#define ReceiptValidation_CFArrayCreateMutable_002E00E3 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction006, 227, 122, 21))
#define ReceiptValidation_CFBundleGetMainBundle_003B0005 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction00A, 5, 146, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_002E01A3 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction008, 419, 179, 33))
#define ReceiptValidation_CFDataAppendBytes_002E001B ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, 27, 19, 18))
#define ReceiptValidation_CFDataCreate_010F00C3 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00B, 195, 215, 16))
#define ReceiptValidation_CFDataCreateMutable_003B012C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction009, 300, 137, 20))
#define ReceiptValidation_CFDataGetBytePtr_002E00AB ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction006, 171, 237, 17))
#define ReceiptValidation_CFDataGetBytePtr_010F00AB ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction006, 171, 237, 17))
#define ReceiptValidation_CFDataGetLength_010F0004 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction006, 4, 40, 16))
#define ReceiptValidation_CFDateFormatterCreate_002E00B4 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00C, 180, 78, 22))
#define ReceiptValidation_CFDateFormatterCreateDateFromString_010F011D ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00C, 285, 13, 36))
#define ReceiptValidation_CFDictionaryCreateMutable_010F0026 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction008, 38, 96, 34))
#define ReceiptValidation_CFNumberCreate_002E008B ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, 139, 111, 16))
#define ReceiptValidation_CFNumberCreate_002E0110 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction004, 272, 239, 16))
#define ReceiptValidation_CFRelease_002E0117 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, 279, 192, 16))
#define ReceiptValidation_CFRelease_002E0157 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction006, 343, 239, 16))
#define ReceiptValidation_CFRelease_003B0117 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction00A, 279, 192, 16))
#define ReceiptValidation_CFRelease_003B0157 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction006, 343, 239, 16))
#define ReceiptValidation_CFRelease_003B0185 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction00C, 389, 234, 16))
#define ReceiptValidation_CFRelease_010F0117 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00A, 279, 192, 16))
#define ReceiptValidation_CFRelease_010F0157 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction006, 343, 239, 16))
#define ReceiptValidation_d2i_PKCS7_bio_00B6005C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction006, 92, 148, 16))
#define ReceiptValidation_d2i_PKCS7_bio_00D2005C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction006, 92, 148, 16))
#define ReceiptValidation_d2i_X509_bio_009A00D1 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction00C, 209, 209, 16))
#define ReceiptValidation_EVP_DigestFinal_00B60023 ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00B, 35, 48, 16))
#define ReceiptValidation_EVP_DigestInit_00D20072 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction003, 114, 148, 16))
#define ReceiptValidation_EVP_DigestUpdate_009A0136 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction009, 310, 153, 17))
#define ReceiptValidation_EVP_get_digestbyname_00D20043 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction009, 67, 117, 21))
#define ReceiptValidation_EVP_MD_CTX_init_00B600BD ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00C, 189, 21, 16))
#define ReceiptValidation_exit_000B0062 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction004, 98, 220, 16))
#define ReceiptValidation_exit_000B00E8 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction006, 232, 74, 16))
#define ReceiptValidation_exit_000B01B3 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction003, 435, 54, 16))
#define ReceiptValidation_exit_002401B3 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 36, 127, 33, ReceiptValidation_ObfuscationFunction003, 435, 54, 16))
#define ReceiptValidation_exit_01DC0062 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 85, 33, ReceiptValidation_ObfuscationFunction004, 98, 220, 16))
#define ReceiptValidation_exit_01DC00E8 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 85, 33, ReceiptValidation_ObfuscationFunction006, 232, 74, 16))
#define ReceiptValidation_exit_01DC01B3 ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 85, 33, ReceiptValidation_ObfuscationFunction003, 435, 54, 16))
#define ReceiptValidation_KEHDBLZZJPGX_002E0073 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_KEHDBLZZJPGX, 250, 35))
#define ReceiptValidation_KEHDBLZZJPGX_003B0102 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_KEHDBLZZJPGX, 58, 16))
#define ReceiptValidation_KEHDBLZZJPGX_003B0186 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_KEHDBLZZJPGX, 119, 21))
#define ReceiptValidation_KEHDBLZZJPGX_010F0037 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_KEHDBLZZJPGX, 136, 18))
#define ReceiptValidation_KEHDBLZZJPGX_010F0131 ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_KEHDBLZZJPGX, 126, 22))
#define ReceiptValidation_KEHDBLZZJPGX_010F0169 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_KEHDBLZZJPGX, 4, 16))
#define ReceiptValidation_DGUKHKWVKMYN_000B019E ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_DGUKHKWVKMYN, 251, 16))
#define ReceiptValidation_DGUKHKWVKMYN_002E00B7 ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_DGUKHKWVKMYN, 186, 21))
#define ReceiptValidation_DGUKHKWVKMYN_003B0019 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_DGUKHKWVKMYN, 186, 21))
#define ReceiptValidation_DGUKHKWVKMYN_010F0019 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_DGUKHKWVKMYN, 186, 21))
#define ReceiptValidation_DGUKHKWVKMYN_010F001E ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_DGUKHKWVKMYN, 194, 17))
#define ReceiptValidation_DGUKHKWVKMYN_010F0102 ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_DGUKHKWVKMYN, 58, 16))
#define ReceiptValidation_DGUKHKWVKMYN_010F018E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_DGUKHKWVKMYN, 177, 16))
#define ReceiptValidation_SPEEHRWMRPMC_002E005F ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_SPEEHRWMRPMC, 146, 20))
#define ReceiptValidation_SPEEHRWMRPMC_002E008B ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_SPEEHRWMRPMC, 111, 16))
#define ReceiptValidation_SPEEHRWMRPMC_002E0119 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_SPEEHRWMRPMC, 196, 16))
#define ReceiptValidation_SPEEHRWMRPMC_003B00E6 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_SPEEHRWMRPMC, 65, 37))
#define ReceiptValidation_SPEEHRWMRPMC_003B0169 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_SPEEHRWMRPMC, 4, 16))
#define ReceiptValidation_SPEEHRWMRPMC_003B018E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_SPEEHRWMRPMC, 177, 16))
#define ReceiptValidation_SPEEHRWMRPMC_010F0105 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_SPEEHRWMRPMC, 70, 19))
#define ReceiptValidation_RAZECNUXYJYA_00240194 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 36, 127, 33, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_RAZECNUXYJYA, 178, 16))
#define ReceiptValidation_RAZECNUXYJYA_002E001B ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_RAZECNUXYJYA, 19, 18))
#define ReceiptValidation_RAZECNUXYJYA_002E018E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_RAZECNUXYJYA, 177, 16))
#define ReceiptValidation_RAZECNUXYJYA_003B00BE ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_RAZECNUXYJYA, 138, 33))
#define ReceiptValidation_RAZECNUXYJYA_003B01A4 ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_RAZECNUXYJYA, 63, 33))
#define ReceiptValidation_MWFKACWMFVFQ_002E0065 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_MWFKACWMFVFQ, 105, 21))
#define ReceiptValidation_MWFKACWMFVFQ_010F0087 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_MWFKACWMFVFQ, 237, 16))
#define ReceiptValidation_MWFKACWMFVFQ_010F010D ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_MWFKACWMFVFQ, 97, 16))
#define ReceiptValidation_AJBSISVGKDWM_002E00E6 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_AJBSISVGKDWM, 65, 37))
#define ReceiptValidation_AJBSISVGKDWM_003B0065 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_AJBSISVGKDWM, 105, 21))
#define ReceiptValidation_AJBSISVGKDWM_003B00C6 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_AJBSISVGKDWM, 103, 16))
#define ReceiptValidation_AJBSISVGKDWM_003B015A ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_AJBSISVGKDWM, 41, 18))
#define ReceiptValidation_AJBSISVGKDWM_010F00E4 ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_AJBSISVGKDWM, 204, 48))
#define ReceiptValidation_MEVLNCARHSGQ_002E003D ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MEVLNCARHSGQ, 249, 16))
#define ReceiptValidation_MEVLNCARHSGQ_002E0071 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_MEVLNCARHSGQ, 20, 16))
#define ReceiptValidation_MEVLNCARHSGQ_002E0169 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_MEVLNCARHSGQ, 4, 16))
#define ReceiptValidation_MEVLNCARHSGQ_002E018E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MEVLNCARHSGQ, 177, 16))
#define ReceiptValidation_MEVLNCARHSGQ_003B019F ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_MEVLNCARHSGQ, 119, 35))
#define ReceiptValidation_MEVLNCARHSGQ_010F0020 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_MEVLNCARHSGQ, 109, 17))
#define ReceiptValidation_MEVLNCARHSGQ_010F00BA ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_MEVLNCARHSGQ, 149, 23))
#define ReceiptValidation_MEVLNCARHSGQ_010F0175 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_MEVLNCARHSGQ, 229, 17))
#define ReceiptValidation_BRLVRUKVXJWH_000B0056 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_BRLVRUKVXJWH, 41, 16))
#define ReceiptValidation_BRLVRUKVXJWH_002E018E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_BRLVRUKVXJWH, 177, 16))
#define ReceiptValidation_BRLVRUKVXJWH_003B002C ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_BRLVRUKVXJWH, 147, 21))
#define ReceiptValidation_BRLVRUKVXJWH_010F0065 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BRLVRUKVXJWH, 105, 21))
#define ReceiptValidation_BRLVRUKVXJWH_010F012C ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BRLVRUKVXJWH, 137, 20))
#define ReceiptValidation_kCFBundleIdentifierKey_002E00CD ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction00C, 205, 2, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_002E017D ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction003, 381, 144, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_003B00DA ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 59, 193, 67, ReceiptValidation_ObfuscationFunction00B, 218, 62, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_002E0099 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 46, 201, 67, ReceiptValidation_ObfuscationFunction008, 153, 8, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_010F0050 ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 271, 123, 67, ReceiptValidation_ObfuscationFunction004, 80, 226, 32))
#define ReceiptValidation_longjmp_000B00F3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction009, 243, 37, 16))
#define ReceiptValidation_longjmp_000B01D3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction003, 467, 19, 16))
#define ReceiptValidation_longjmp_002400F3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 36, 127, 33, ReceiptValidation_ObfuscationFunction009, 243, 37, 16))
#define ReceiptValidation_longjmp_01DC0088 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 85, 33, ReceiptValidation_ObfuscationFunction00C, 136, 62, 16))
#define ReceiptValidation_longjmp_01DC01D3 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 476, 85, 33, ReceiptValidation_ObfuscationFunction003, 467, 19, 16))
#define ReceiptValidation_OBJ_txt2obj_00B60127 ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction003, 295, 198, 16))
#define ReceiptValidation_objc_getClass_00E2015B ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction006, 347, 255, 16))
#define ReceiptValidation_objc_getClass_00E201CD ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction009, 461, 9, 16))
#define ReceiptValidation_objc_getClass_013D011C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction00B, 284, 64, 16))
#define ReceiptValidation_objc_getClass_013D015B ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction006, 347, 255, 16))
#define ReceiptValidation_objc_getClass_01B2011C ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction00B, 284, 64, 16))
#define ReceiptValidation_objc_getClass_01B2015B ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction006, 347, 255, 16))
#define ReceiptValidation_objc_getClass_01B201CD ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction009, 461, 9, 16))
#define ReceiptValidation_objc_lookUpClass_013D00B2 ((__ReceiptValidation_objc_lookUpClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction007, 178, 247, 17))
#define ReceiptValidation_objc_lookUpClass_013D0100 ((__ReceiptValidation_objc_lookUpClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction00C, 256, 18, 17))
#define ReceiptValidation_objc_msgSend_00E20077 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction008, 119, 177, 16))
#define ReceiptValidation_objc_msgSend_00E20171 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction004, 369, 162, 16))
#define ReceiptValidation_objc_msgSend_013D0077 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction008, 119, 177, 16))
#define ReceiptValidation_objc_msgSend_013D0171 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction004, 369, 162, 16))
#define ReceiptValidation_objc_msgSend_01B20048 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction00A, 72, 26, 16))
#define ReceiptValidation_objc_msgSend_01B20171 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction004, 369, 162, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_009A0159 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction00C, 345, 17, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_00D20068 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction007, 104, 85, 32))
#define ReceiptValidation_PKCS7_free_009A0094 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction003, 148, 55, 16))
#define ReceiptValidation_PKCS7_free_00B600E9 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction004, 233, 220, 16))
#define ReceiptValidation_PKCS7_get0_signers_00D20091 ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction007, 145, 187, 19))
#define ReceiptValidation_PKCS7_verify_00B6000D ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00B, 13, 67, 16))
#define ReceiptValidation_sel_registerName_00E200C1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction00B, 193, 67, 17))
#define ReceiptValidation_sel_registerName_00E20193 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 226, 171, 23, ReceiptValidation_ObfuscationFunction007, 403, 40, 17))
#define ReceiptValidation_sel_registerName_013D00C1 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction00B, 193, 67, 17))
#define ReceiptValidation_sel_registerName_013D0160 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction006, 352, 112, 17))
#define ReceiptValidation_sel_registerName_013D0193 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 317, 210, 23, ReceiptValidation_ObfuscationFunction007, 403, 40, 17))
#define ReceiptValidation_sel_registerName_01B20160 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction006, 352, 112, 17))
#define ReceiptValidation_sel_registerName_01B20193 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 434, 32, 23, ReceiptValidation_ObfuscationFunction007, 403, 40, 17))
#define ReceiptValidation_setjmp_000B0124 ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 11, 41, 33, ReceiptValidation_ObfuscationFunction006, 292, 251, 16))
#define ReceiptValidation_SHA1_00B600EC ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00B, 236, 116, 16))
#define ReceiptValidation_SHA1_Final_009A0098 ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction003, 152, 27, 16))
#define ReceiptValidation_SHA1_Init_00B600F9 ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction005, 249, 24, 16))
#define ReceiptValidation_SHA1_Update_00B601BB ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction006, 443, 134, 16))
#define ReceiptValidation_sk_free_00D201B7 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction00B, 439, 36, 16))
#define ReceiptValidation_sk_num_009A000E ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction003, 14, 133, 16))
#define ReceiptValidation_sk_value_00D200FD ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction00C, 253, 235, 16))
#define ReceiptValidation_X509_digest_009A010B ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 154, 101, 16, ReceiptValidation_ObfuscationFunction006, 267, 157, 16))
#define ReceiptValidation_X509_free_00B60179 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction006, 377, 100, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_00B6010A ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction008, 266, 220, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_00D2004F ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction00A, 79, 178, 34))
#define ReceiptValidation_X509_STORE_add_cert_00B60047 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction006, 182, 92, 16, ReceiptValidation_ObfuscationFunction00B, 71, 246, 20))
#define ReceiptValidation_X509_STORE_free_00D20163 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction003, 355, 211, 16))
#define ReceiptValidation_X509_STORE_new_00D201D7 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 210, 161, 16, ReceiptValidation_ObfuscationFunction006, 471, 118, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[362])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[237])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[187])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[362])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[379])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[362])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[379])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[483];
        ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[362])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
        char ReceiptValidation_tmp1[483], ReceiptValidation_tmp2[483];
        // Load the library if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
            ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
            ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[289])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
            ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
            ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[151])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
        }
        return ReceiptValidation_Pointers[ReceiptValidation_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void ReceiptValidation_GetMainBundle016(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_003B0005();
        if (!ReceiptValidation_ctx->main_bundle) {
            // Dead code
            ReceiptValidation_CFRelease_002E0157(ReceiptValidation_ctx->main_bundle);
            ReceiptValidation_CFBundleUnloadExecutable_002E01A3((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        }
        // Global variables computation
        // Set to 115
        ReceiptValidation_KEHDBLZZJPGX = 115;
        // Set to 30
        ReceiptValidation_DGUKHKWVKMYN = 30;
        // Set to 27
        ReceiptValidation_RAZECNUXYJYA = 27;
        // Set to 346
        ReceiptValidation_AJBSISVGKDWM = 346;
        // Set to 32
        ReceiptValidation_MEVLNCARHSGQ = 32;
        // Set to 300
        ReceiptValidation_BRLVRUKVXJWH = 300;
    }
#else
#define ReceiptValidation_GetMainBundle016(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_003B0005(); \
if (!ReceiptValidation_ctx->main_bundle) { \
ReceiptValidation_CFRelease_002E0157(ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_CFBundleUnloadExecutable_002E01A3((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
} \
ReceiptValidation_KEHDBLZZJPGX = 115; \
ReceiptValidation_DGUKHKWVKMYN = 30; \
ReceiptValidation_RAZECNUXYJYA = 27; \
ReceiptValidation_AJBSISVGKDWM = 346; \
ReceiptValidation_MEVLNCARHSGQ = 32; \
ReceiptValidation_BRLVRUKVXJWH = 300; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt041(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        id ReceiptValidation_bundleClass, ReceiptValidation_bundle;
        CFURLRef ReceiptValidation_url1;
        CFReadStreamRef ReceiptValidation_stream;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3;
        SEL ReceiptValidation_sel2, ReceiptValidation_sel3;
        uint8_t ReceiptValidation_buffer[483];
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
        // Get NSBundle class
        char ReceiptValidation_str1_[483];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[412]), ReceiptValidation_str1_, 20, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_bundleClass = ReceiptValidation_objc_lookUpClass_013D0100(ReceiptValidation_str1);
        char ReceiptValidation_str2_[483];
        ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[455]), ReceiptValidation_str2_, 199, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_01B20160(ReceiptValidation_str2);
        ReceiptValidation_bundle = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundleClass, ReceiptValidation_sel2);
        char ReceiptValidation_str3_[483];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[192]), ReceiptValidation_str3_, 250, 19);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_01B20160(ReceiptValidation_str3);
        ReceiptValidation_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundle, ReceiptValidation_sel3));
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_KEHDBLZZJPGX_002E0073(kCFAllocatorDefault, ReceiptValidation_url1);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_DGUKHKWVKMYN_010F001E(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt041_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_BRLVRUKVXJWH_010F012C(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_MEVLNCARHSGQ_010F0020(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 483);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_RAZECNUXYJYA_002E001B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_AJBSISVGKDWM_003B015A(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_003B0185(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 30 to 258
        ReceiptValidation_DGUKHKWVKMYN -= 5; ReceiptValidation_DGUKHKWVKMYN *= 10; ReceiptValidation_DGUKHKWVKMYN += 8;
    ReceiptValidation_LoadReceipt041_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_003B0185(ReceiptValidation_stream);
    }
#else
#define ReceiptValidation_LoadReceipt041(ReceiptValidation_ctx) { \
id ReceiptValidation_bundleClass, ReceiptValidation_bundle; \
CFURLRef ReceiptValidation_url1; \
CFReadStreamRef ReceiptValidation_stream; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3; \
SEL ReceiptValidation_sel2, ReceiptValidation_sel3; \
uint8_t ReceiptValidation_buffer[483]; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[412]), ReceiptValidation_str1_, 20, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_bundleClass = ReceiptValidation_objc_lookUpClass_013D0100(ReceiptValidation_str1); \
char ReceiptValidation_str2_[483]; \
ReceiptValidation_ObfuscationFunction00C((ReceiptValidation_Strings[455]), ReceiptValidation_str2_, 199, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_01B20160(ReceiptValidation_str2); \
ReceiptValidation_bundle = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundleClass, ReceiptValidation_sel2); \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[192]), ReceiptValidation_str3_, 250, 19); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_01B20160(ReceiptValidation_str3); \
ReceiptValidation_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(ReceiptValidation_bundle, ReceiptValidation_sel3)); \
ReceiptValidation_stream = ReceiptValidation_KEHDBLZZJPGX_002E0073(kCFAllocatorDefault, ReceiptValidation_url1); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_DGUKHKWVKMYN_010F001E(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt041_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_BRLVRUKVXJWH_010F012C(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_MEVLNCARHSGQ_010F0020(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 483); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_RAZECNUXYJYA_002E001B(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_AJBSISVGKDWM_003B015A(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_003B0185(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_DGUKHKWVKMYN -= 5; ReceiptValidation_DGUKHKWVKMYN *= 10; ReceiptValidation_DGUKHKWVKMYN += 8;  \
ReceiptValidation_LoadReceipt041_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_003B0185(ReceiptValidation_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void ReceiptValidation_GetGUID04E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        Class ReceiptValidation_deviceClass;
        id ReceiptValidation_device, ReceiptValidation_identifier;
        char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3, *ReceiptValidation_str4;
        SEL ReceiptValidation_sel2, ReceiptValidation_sel3, ReceiptValidation_sel4;
        uuid_t ReceiptValidation_uuid;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting device identifier");
        // Get the UIDevice class
        char ReceiptValidation_str1_[483];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[128]), ReceiptValidation_str1_, 127, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_deviceClass = ReceiptValidation_objc_getClass_01B201CD(ReceiptValidation_str1);
        // Call [UIDevice currentDevice]
        char ReceiptValidation_str2_[483];
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[69]), ReceiptValidation_str2_, 106, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str2);
        ReceiptValidation_device =  ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_deviceClass, ReceiptValidation_sel2);
        // Call [device identifierForVendor]
        char ReceiptValidation_str3_[483];
        ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[315]), ReceiptValidation_str3_, 73, 20);
        ReceiptValidation_str3 = ReceiptValidation_str3_;
        ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str3);
        ReceiptValidation_identifier = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_device, ReceiptValidation_sel3);
        // Call [identifier getUUIDBytes:ReceiptValidation_uuid]
        char ReceiptValidation_str4_[483];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[158]), ReceiptValidation_str4_, 29, 16);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_sel4 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(ReceiptValidation_identifier, ReceiptValidation_sel4, ReceiptValidation_uuid);
        if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_010F0157(ReceiptValidation_ctx->guid_data);
        volatile int ReceiptValidation_size = 14; ReceiptValidation_size -= 9; ReceiptValidation_size *= 3; ReceiptValidation_size += 1;
        ReceiptValidation_ctx->guid_data = ReceiptValidation_DGUKHKWVKMYN_010F0102(NULL, (const UInt8 *) ReceiptValidation_uuid, (CFIndex) ReceiptValidation_size);
        // Global variables computation
        // From 115 to 305
        ReceiptValidation_KEHDBLZZJPGX -= 39; ReceiptValidation_KEHDBLZZJPGX *= 4; ReceiptValidation_KEHDBLZZJPGX += 1;
        // From 258 to 398
        ReceiptValidation_DGUKHKWVKMYN -= 126; ReceiptValidation_DGUKHKWVKMYN *= 3; ReceiptValidation_DGUKHKWVKMYN += 2;
        // From 346 to 230
        ReceiptValidation_AJBSISVGKDWM += 344; ReceiptValidation_AJBSISVGKDWM /= 3;
    }
#else
#define ReceiptValidation_GetGUID04E(ReceiptValidation_ctx) { \
Class ReceiptValidation_deviceClass; \
id ReceiptValidation_device, ReceiptValidation_identifier; \
char *ReceiptValidation_str1, *ReceiptValidation_str2, *ReceiptValidation_str3, *ReceiptValidation_str4; \
SEL ReceiptValidation_sel2, ReceiptValidation_sel3, ReceiptValidation_sel4; \
uuid_t ReceiptValidation_uuid; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting device identifier"); \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[128]), ReceiptValidation_str1_, 127, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_deviceClass = ReceiptValidation_objc_getClass_01B201CD(ReceiptValidation_str1); \
char ReceiptValidation_str2_[483]; \
ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[69]), ReceiptValidation_str2_, 106, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_sel2 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str2); \
ReceiptValidation_device =  ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_deviceClass, ReceiptValidation_sel2); \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction007((ReceiptValidation_Strings[315]), ReceiptValidation_str3_, 73, 20); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
ReceiptValidation_sel3 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str3); \
ReceiptValidation_identifier = ((id (*)(id, SEL)) objc_msgSend)(ReceiptValidation_device, ReceiptValidation_sel3); \
char ReceiptValidation_str4_[483]; \
ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[158]), ReceiptValidation_str4_, 29, 16); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_sel4 = ReceiptValidation_sel_registerName_013D00C1(ReceiptValidation_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(ReceiptValidation_identifier, ReceiptValidation_sel4, ReceiptValidation_uuid); \
if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_010F0157(ReceiptValidation_ctx->guid_data); \
volatile int ReceiptValidation_size = 14; ReceiptValidation_size -= 9; ReceiptValidation_size *= 3; ReceiptValidation_size += 1;  \
ReceiptValidation_ctx->guid_data = ReceiptValidation_DGUKHKWVKMYN_010F0102(NULL, (const UInt8 *) ReceiptValidation_uuid, (CFIndex) ReceiptValidation_size); \
ReceiptValidation_KEHDBLZZJPGX -= 39; ReceiptValidation_KEHDBLZZJPGX *= 4; ReceiptValidation_KEHDBLZZJPGX += 1;  \
ReceiptValidation_DGUKHKWVKMYN -= 126; ReceiptValidation_DGUKHKWVKMYN *= 3; ReceiptValidation_DGUKHKWVKMYN += 2;  \
ReceiptValidation_AJBSISVGKDWM += 344; ReceiptValidation_AJBSISVGKDWM /= 3;  \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[143]), 67, 33);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_KEHDBLZZJPGX_010F0131((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        if (ReceiptValidation_DGUKHKWVKMYN_010F018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str2);
        }
        // Global variables computation
        // Set to 230
        ReceiptValidation_SPEEHRWMRPMC = 230;
        // From 32 to 398
        ReceiptValidation_MEVLNCARHSGQ -= 4; ReceiptValidation_MEVLNCARHSGQ *= 14; ReceiptValidation_MEVLNCARHSGQ += 6;
        ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[143]), 67, 33); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_KEHDBLZZJPGX_010F0131((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
if (ReceiptValidation_DGUKHKWVKMYN_010F018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str2); \
} \
ReceiptValidation_SPEEHRWMRPMC = 230; \
ReceiptValidation_MEVLNCARHSGQ -= 4; ReceiptValidation_MEVLNCARHSGQ *= 14; ReceiptValidation_MEVLNCARHSGQ += 6;  \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleVersion060(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[480]), 121, 16);
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[426]), 30, 16);
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_SPEEHRWMRPMC_003B00E6((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_MEVLNCARHSGQ_002E018E(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1);
        }
        // Global variables computation
        // Set to 258
        ReceiptValidation_KEHDBLZZJPGX = 258;
        // From 398 to 183
        ReceiptValidation_DGUKHKWVKMYN += 334; ReceiptValidation_DGUKHKWVKMYN /= 4;
        // From 230 to 261
        ReceiptValidation_SPEEHRWMRPMC -= 143; ReceiptValidation_SPEEHRWMRPMC *= 3;
        // From 27 to 420
        ReceiptValidation_RAZECNUXYJYA -= 3; ReceiptValidation_RAZECNUXYJYA *= 17; ReceiptValidation_RAZECNUXYJYA += 12;
        // Set to 101
        ReceiptValidation_MWFKACWMFVFQ = 101;
        // From 230 to 228
        ReceiptValidation_AJBSISVGKDWM += 226; ReceiptValidation_AJBSISVGKDWM /= 2;
        // Set to 415
        ReceiptValidation_MEVLNCARHSGQ = 415;
        // From 300 to 44
        ReceiptValidation_BRLVRUKVXJWH += 52; ReceiptValidation_BRLVRUKVXJWH /= 8;
        ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion060(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[480]), 121, 16); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00ACF((ReceiptValidation_Strings[426]), 30, 16); \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_SPEEHRWMRPMC_003B00E6((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_MEVLNCARHSGQ_002E018E(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1); \
} \
ReceiptValidation_KEHDBLZZJPGX = 258; \
ReceiptValidation_DGUKHKWVKMYN += 334; ReceiptValidation_DGUKHKWVKMYN /= 4;  \
ReceiptValidation_SPEEHRWMRPMC -= 143; ReceiptValidation_SPEEHRWMRPMC *= 3;  \
ReceiptValidation_RAZECNUXYJYA -= 3; ReceiptValidation_RAZECNUXYJYA *= 17; ReceiptValidation_RAZECNUXYJYA += 12;  \
ReceiptValidation_MWFKACWMFVFQ = 101; \
ReceiptValidation_AJBSISVGKDWM += 226; ReceiptValidation_AJBSISVGKDWM /= 2;  \
ReceiptValidation_MEVLNCARHSGQ = 415; \
ReceiptValidation_BRLVRUKVXJWH += 52; ReceiptValidation_BRLVRUKVXJWH /= 8;  \
ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_010F0117(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
        ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
        CFNumberRef ReceiptValidation_key;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
        CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
        int ReceiptValidation_type;
        int ReceiptValidation_xclass;
        long ReceiptValidation_length;
        CFDateFormatterRef ReceiptValidation_formatter = NULL;
        CFTimeZoneRef ReceiptValidation_tz = NULL;
        BIO *ReceiptValidation_bio_p7;
        PKCS7 *ReceiptValidation_pkcs7;
        ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
        ASN1_INTEGER *ReceiptValidation_value;
        const unsigned char *ReceiptValidation_seq_end;
        long ReceiptValidation_attr_type;
        long ReceiptValidation_attr_version;
        int ReceiptValidation_str_type;
        long ReceiptValidation_str_length;
        const unsigned char *ReceiptValidation_str_ptr;
        ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
        long ReceiptValidation_number;
        int ReceiptValidation_num_type;
        long ReceiptValidation_num_length;
        const unsigned char *ReceiptValidation_num_ptr;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00D2013C(ReceiptValidation_BIO_s_mem_00B601A6());
        ReceiptValidation_BIO_write_00B601C2(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_002E00AB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_010F0004((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00D2005C(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_002E00B4(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[22]), 137, 33);
        ReceiptValidation_RAZECNUXYJYA_003B01A4(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
        ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1);
        ReceiptValidation_tz = ReceiptValidation_AJBSISVGKDWM_010F00E4(NULL, 0.0);
        ReceiptValidation_MEVLNCARHSGQ_003B019F(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_002E017D, ReceiptValidation_tz);
        ReceiptValidation_CFRelease_003B0117(ReceiptValidation_tz);
        // Initial context
        ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
        ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
        ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
        ReceiptValidation_receipt_context.parent = NULL;
        ReceiptValidation_receipt_context.dictionary = NULL;
        ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            if (!ReceiptValidation_current_context->dictionary) {
                // Create the target dictionary
                ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_010F0026(kCFAllocatorDefault, (CFIndex) 483, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_002E0099, ReceiptValidation_kCFTypeDictionaryValueCallBacks_010F0050);
                // Decode payload from ASN.1
                ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SET) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
            }
            // Iterate over attributes
            while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
                // Parse attribute sequence
                ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
                ReceiptValidation_attr_type = 0;
                ReceiptValidation_attr_version = 0;
                // Parse the attribute type
                ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value);
                // Parse the attribute version
                ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value);
                // Check the attribute value
                ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                    ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2));
                ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1);
                ReceiptValidation_value1 = NULL;
                ReceiptValidation_value2 = NULL;
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
                switch (ReceiptValidation_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                        ReceiptValidation_value2 = ReceiptValidation_KEHDBLZZJPGX_003B0102(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                    case ReceiptValidation_InAppAttributeTypeCancellationDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                        ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_010F011D(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                    case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                    {
                        ReceiptValidation_num_type = 0;
                        ReceiptValidation_num_length = 0;
                        ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                        if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                            ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                        ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value);
                        ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value);
                        ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberLongType, &ReceiptValidation_number);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                    {
                        ReceiptValidation_value1 = ReceiptValidation_KEHDBLZZJPGX_003B0102(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_010F0004((CFDataRef) ReceiptValidation_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                        ReceiptValidation_inapp_context.dictionary = NULL;
                        ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                        ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                    }
                    default:
                        break;
                }
                if (ReceiptValidation_value1) {
                    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                    ReceiptValidation_BRLVRUKVXJWH_003B002C((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1);
                }
                if (ReceiptValidation_value2) {
                    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                    ReceiptValidation_BRLVRUKVXJWH_003B002C((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                    ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value2);
                }
                // Move past the attribute
                ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            }
        ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
            // If the current context is a new one, continue parsing
            if (!ReceiptValidation_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (ReceiptValidation_current_context->parent) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
                ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_value1 = ReceiptValidation_MWFKACWMFVFQ_002E0065((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
                if (!ReceiptValidation_value1) {
                    ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_002E00E3(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_003B00DA);
                    ReceiptValidation_DGUKHKWVKMYN_002E00B7((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1);
                }
                ReceiptValidation_SPEEHRWMRPMC_010F0105((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_003B0117(ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key);
                // Switch to parent context
                ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
                // Move past the child context
                ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
            }
        }
        if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_003B0117(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
        // Global variables computation
        // From 261 to 281
        ReceiptValidation_SPEEHRWMRPMC -= 168; ReceiptValidation_SPEEHRWMRPMC *= 3; ReceiptValidation_SPEEHRWMRPMC += 2;
        // From 415 to 373
        ReceiptValidation_MEVLNCARHSGQ += 331; ReceiptValidation_MEVLNCARHSGQ /= 2;
    ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_009A0094(ReceiptValidation_pkcs7);
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_009A01B6(ReceiptValidation_bio_p7);
        if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_003B0117(ReceiptValidation_formatter);
    }
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
CFNumberRef ReceiptValidation_key; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
int ReceiptValidation_type; \
int ReceiptValidation_xclass; \
long ReceiptValidation_length; \
CFDateFormatterRef ReceiptValidation_formatter = NULL; \
CFTimeZoneRef ReceiptValidation_tz = NULL; \
BIO *ReceiptValidation_bio_p7; \
PKCS7 *ReceiptValidation_pkcs7; \
ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
ASN1_INTEGER *ReceiptValidation_value; \
const unsigned char *ReceiptValidation_seq_end; \
long ReceiptValidation_attr_type; \
long ReceiptValidation_attr_version; \
int ReceiptValidation_str_type; \
long ReceiptValidation_str_length; \
const unsigned char *ReceiptValidation_str_ptr; \
ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
long ReceiptValidation_number; \
int ReceiptValidation_num_type; \
long ReceiptValidation_num_length; \
const unsigned char *ReceiptValidation_num_ptr; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_00D2013C(ReceiptValidation_BIO_s_mem_00B601A6()); \
ReceiptValidation_BIO_write_00B601C2(ReceiptValidation_bio_p7, (void *) ReceiptValidation_CFDataGetBytePtr_002E00AB((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_CFDataGetLength_010F0004((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00D2005C(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_formatter = ReceiptValidation_CFDateFormatterCreate_002E00B4(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[22]), 137, 33); \
ReceiptValidation_RAZECNUXYJYA_003B01A4(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1); \
ReceiptValidation_tz = ReceiptValidation_AJBSISVGKDWM_010F00E4(NULL, 0.0); \
ReceiptValidation_MEVLNCARHSGQ_003B019F(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_002E017D, ReceiptValidation_tz); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_tz); \
ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
ReceiptValidation_receipt_context.parent = NULL; \
ReceiptValidation_receipt_context.dictionary = NULL; \
ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
if (!ReceiptValidation_current_context->dictionary) { \
ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_010F0026(kCFAllocatorDefault, (CFIndex) 483, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_002E0099, ReceiptValidation_kCFTypeDictionaryValueCallBacks_010F0050); \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SET) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
} \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
ReceiptValidation_attr_type = 0; \
ReceiptValidation_attr_version = 0; \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2)); \
ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1); \
ReceiptValidation_value1 = NULL; \
ReceiptValidation_value2 = NULL; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
switch (ReceiptValidation_attr_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
ReceiptValidation_value2 = ReceiptValidation_KEHDBLZZJPGX_003B0102(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
case ReceiptValidation_InAppAttributeTypeCancellationDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[42])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
ReceiptValidation_value1 = ReceiptValidation_CFDateFormatterCreateDateFromString_010F011D(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_InAppAttributeTypeQuantity: \
case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
{ \
ReceiptValidation_num_type = 0; \
ReceiptValidation_num_length = 0; \
ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_00D20010(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B01D3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_00D2012D(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_009A0152(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_00B60101(ReceiptValidation_value); \
ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberLongType, &ReceiptValidation_number); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
{ \
ReceiptValidation_value1 = ReceiptValidation_KEHDBLZZJPGX_003B0102(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_CFDataGetLength_010F0004((CFDataRef) ReceiptValidation_value1)); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
{ \
ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
ReceiptValidation_inapp_context.dictionary = NULL; \
ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
} \
default: \
break; \
} \
if (ReceiptValidation_value1) { \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_BRLVRUKVXJWH_003B002C((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1); \
} \
if (ReceiptValidation_value2) { \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
ReceiptValidation_BRLVRUKVXJWH_003B002C((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value2); \
} \
ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
} \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
if (!ReceiptValidation_current_context->dictionary) { \
continue; \
} \
if (ReceiptValidation_current_context->parent) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_value1 = ReceiptValidation_MWFKACWMFVFQ_002E0065((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
if (!ReceiptValidation_value1) { \
ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_002E00E3(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_003B00DA); \
ReceiptValidation_DGUKHKWVKMYN_002E00B7((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_value1); \
} \
ReceiptValidation_SPEEHRWMRPMC_010F0105((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key); \
ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
} \
} \
if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_003B0117(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
ReceiptValidation_SPEEHRWMRPMC -= 168; ReceiptValidation_SPEEHRWMRPMC *= 3; ReceiptValidation_SPEEHRWMRPMC += 2;  \
ReceiptValidation_MEVLNCARHSGQ += 331; ReceiptValidation_MEVLNCARHSGQ /= 2;  \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_009A0094(ReceiptValidation_pkcs7); \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_009A01B6(ReceiptValidation_bio_p7); \
if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_003B0117(ReceiptValidation_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature073(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        BIO *ReceiptValidation_bio_p7 = NULL;
        PKCS7 *ReceiptValidation_pkcs7 = NULL;
        STACK_OF(X509) *ReceiptValidation_certificates = NULL;
        X509 *ReceiptValidation_certificate = NULL;
        int ReceiptValidation_count, ReceiptValidation_index1;
        unsigned int ReceiptValidation_index2;
        ASN1_OBJECT *ReceiptValidation_oid = NULL;
        char *ReceiptValidation_str1;
        char *ReceiptValidation_str3;
        char *ReceiptValidation_str4;
        char *ReceiptValidation_str5;
        int ReceiptValidation_verify, ReceiptValidation_status;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_009A00DE(ReceiptValidation_BIO_s_mem_00B6011B());
        ReceiptValidation_BIO_write_00D20064(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MEVLNCARHSGQ_010F0175((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_SPEEHRWMRPMC_002E0119((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00B6005C(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        ReceiptValidation_OpenSSL_add_all_digests_00D20068();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        ReceiptValidation_verify = 0;
        ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
        ReceiptValidation_count = ReceiptValidation_sk_num_009A000E((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00D200FD((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            char ReceiptValidation_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00D2004F(NULL, NID_commonName, NULL, 0);
            if (ReceiptValidation_status > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
            }
            // Retrieve the common name
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00D2004F(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 483);
            if (ReceiptValidation_status <= 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
            }
            volatile unsigned int ReceiptValidation_digest_length = 18; ReceiptValidation_digest_length -= 12; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;
            const EVP_MD *ReceiptValidation_digester = EVP_sha1();
            unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
            unsigned int ReceiptValidation_len = 0;
            // Check that the X509_digest function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_digest_009A010B(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3554;
            if (ReceiptValidation_status == 3554 || ReceiptValidation_len > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
            }
            ReceiptValidation_status = ReceiptValidation_X509_digest_009A010B(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3554;
            if (ReceiptValidation_status != 3554 || ReceiptValidation_len != ReceiptValidation_digest_length) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
                ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
                goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
            }
            char ReceiptValidation_fingerprint[483];
            volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3;
            for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
                snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]);
            }
            char ReceiptValidation_str3_[483];
            ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[172]), ReceiptValidation_str3_, 97, 68);
            ReceiptValidation_str3 = ReceiptValidation_str3_;
            // Check the common name and the fingerprint
            char ReceiptValidation_str1_[483];
            ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[94]), ReceiptValidation_str1_, 143, 16);
            ReceiptValidation_str1 = ReceiptValidation_str1_;
            volatile size_t ReceiptValidation_num = 2; ReceiptValidation_num -= 1; ReceiptValidation_num *= 8; ReceiptValidation_num += 5;
            if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[321])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[321])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
                ReceiptValidation_verify = 3554;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 3554) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char ReceiptValidation_str4_[483];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[466]), ReceiptValidation_str4_, 246, 34);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B60127(ReceiptValidation_str4, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00B6010A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_00B60000(ReceiptValidation_oid);
        if (ReceiptValidation_verify >= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char ReceiptValidation_str5_[483];
        ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[466]), ReceiptValidation_str5_, 246, 34);
        ReceiptValidation_str5 = ReceiptValidation_str5_;
        ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_00D20091(ReceiptValidation_pkcs7, NULL, 0);
        ReceiptValidation_count = ReceiptValidation_sk_num_009A000E((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00D200FD((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B60127(ReceiptValidation_str5, 0);
            ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00B6010A(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
            ReceiptValidation_ASN1_OBJECT_free_00B60000(ReceiptValidation_oid);
            if (ReceiptValidation_verify == -1) {
                sk_X509_free (ReceiptValidation_certificates);
                ReceiptValidation_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail;
        }
        // Global variables computation
        // Set to 25
        ReceiptValidation_DGUKHKWVKMYN = 25;
        // From 281 to 139
        ReceiptValidation_SPEEHRWMRPMC += 275; ReceiptValidation_SPEEHRWMRPMC /= 4;
        // From 420 to 398
        ReceiptValidation_RAZECNUXYJYA += 376; ReceiptValidation_RAZECNUXYJYA /= 2;
    ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail:
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00B601B6(ReceiptValidation_bio_p7);
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00B600E9(ReceiptValidation_pkcs7);
        if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
    }
#else
#define ReceiptValidation_CheckReceiptSignature073(ReceiptValidation_ctx) { \
BIO *ReceiptValidation_bio_p7 = NULL; \
PKCS7 *ReceiptValidation_pkcs7 = NULL; \
STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
X509 *ReceiptValidation_certificate = NULL; \
int ReceiptValidation_count, ReceiptValidation_index1; \
unsigned int ReceiptValidation_index2; \
ASN1_OBJECT *ReceiptValidation_oid = NULL; \
char *ReceiptValidation_str1; \
char *ReceiptValidation_str3; \
char *ReceiptValidation_str4; \
char *ReceiptValidation_str5; \
int ReceiptValidation_verify, ReceiptValidation_status; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_009A00DE(ReceiptValidation_BIO_s_mem_00B6011B()); \
ReceiptValidation_BIO_write_00D20064(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MEVLNCARHSGQ_010F0175((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_SPEEHRWMRPMC_002E0119((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_00B6005C(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
ReceiptValidation_OpenSSL_add_all_digests_00D20068(); \
ReceiptValidation_verify = 0; \
ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
ReceiptValidation_count = ReceiptValidation_sk_num_009A000E((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00D200FD((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
char ReceiptValidation_common_name[483]; \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00D2004F(NULL, NID_commonName, NULL, 0); \
if (ReceiptValidation_status > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_00D2004F(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 483); \
if (ReceiptValidation_status <= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
volatile unsigned int ReceiptValidation_digest_length = 18; ReceiptValidation_digest_length -= 12; ReceiptValidation_digest_length *= 3; ReceiptValidation_digest_length += 2;  \
const EVP_MD *ReceiptValidation_digester = EVP_sha1(); \
unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
unsigned int ReceiptValidation_len = 0; \
ReceiptValidation_status = ReceiptValidation_X509_digest_009A010B(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3554; \
if (ReceiptValidation_status == 3554 || ReceiptValidation_len > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_digest_009A010B(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 3554; \
if (ReceiptValidation_status != 3554 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
char ReceiptValidation_fingerprint[483]; \
volatile unsigned int ReceiptValidation_increment = 2; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 3;  \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X:", ReceiptValidation_digest[ReceiptValidation_index2]); \
} \
char ReceiptValidation_str3_[483]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[172]), ReceiptValidation_str3_, 97, 68); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
char ReceiptValidation_str1_[483]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[94]), ReceiptValidation_str1_, 143, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
volatile size_t ReceiptValidation_num = 2; ReceiptValidation_num -= 1; ReceiptValidation_num *= 8; ReceiptValidation_num += 5;  \
if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[321])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[321])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
ReceiptValidation_verify = 3554; \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 3554) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
char ReceiptValidation_str4_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[466]), ReceiptValidation_str4_, 246, 34); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B60127(ReceiptValidation_str4, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00B6010A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_00B60000(ReceiptValidation_oid); \
if (ReceiptValidation_verify >= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
char ReceiptValidation_str5_[483]; \
ReceiptValidation_ObfuscationFunction004((ReceiptValidation_Strings[466]), ReceiptValidation_str5_, 246, 34); \
ReceiptValidation_str5 = ReceiptValidation_str5_; \
ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_00D20091(ReceiptValidation_pkcs7, NULL, 0); \
ReceiptValidation_count = ReceiptValidation_sk_num_009A000E((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_00D200FD((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_00B60127(ReceiptValidation_str5, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_00B6010A(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_00B60000(ReceiptValidation_oid); \
if (ReceiptValidation_verify == -1) { \
sk_X509_free (ReceiptValidation_certificates); \
ReceiptValidation_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
goto ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail; \
} \
ReceiptValidation_DGUKHKWVKMYN = 25; \
ReceiptValidation_SPEEHRWMRPMC += 275; ReceiptValidation_SPEEHRWMRPMC /= 4;  \
ReceiptValidation_RAZECNUXYJYA += 376; ReceiptValidation_RAZECNUXYJYA /= 2;  \
ReceiptValidation_CheckReceiptSignature073_ReceiptValidation_bail: \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_00B601B6(ReceiptValidation_bio_p7); \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_00B600E9(ReceiptValidation_pkcs7); \
if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[143]), 67, 33);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_003B0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key);
        if (ReceiptValidation_RAZECNUXYJYA_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_01DC0088(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key);
            ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key);
            ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1);
        }
        // Global variables computation
        // Set to 390
        ReceiptValidation_KEHDBLZZJPGX = 390;
        // From 373 to 361
        ReceiptValidation_MEVLNCARHSGQ += 349; ReceiptValidation_MEVLNCARHSGQ /= 2;
        // From 44 to 398
        ReceiptValidation_BRLVRUKVXJWH -= 8; ReceiptValidation_BRLVRUKVXJWH *= 11; ReceiptValidation_BRLVRUKVXJWH += 2;
        ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[143]), 67, 33); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_003B0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key); \
if (ReceiptValidation_RAZECNUXYJYA_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_01DC0088(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1); \
} \
ReceiptValidation_KEHDBLZZJPGX = 390; \
ReceiptValidation_MEVLNCARHSGQ += 349; ReceiptValidation_MEVLNCARHSGQ /= 2;  \
ReceiptValidation_BRLVRUKVXJWH -= 8; ReceiptValidation_BRLVRUKVXJWH *= 11; ReceiptValidation_BRLVRUKVXJWH += 2;  \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[464]), 249, 33);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_003B0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key);
        if (ReceiptValidation_RAZECNUXYJYA_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // Set to 390
        ReceiptValidation_KEHDBLZZJPGX = 390;
        // From 373 to 361
        ReceiptValidation_MEVLNCARHSGQ += 349; ReceiptValidation_MEVLNCARHSGQ /= 2;
        // From 44 to 398
        ReceiptValidation_BRLVRUKVXJWH -= 8; ReceiptValidation_BRLVRUKVXJWH *= 11; ReceiptValidation_BRLVRUKVXJWH += 2;
        ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07E(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[464]), 249, 33); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_002E008B(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_003B0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_key); \
if (ReceiptValidation_RAZECNUXYJYA_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_KEHDBLZZJPGX = 390; \
ReceiptValidation_MEVLNCARHSGQ += 349; ReceiptValidation_MEVLNCARHSGQ /= 2;  \
ReceiptValidation_BRLVRUKVXJWH -= 8; ReceiptValidation_BRLVRUKVXJWH *= 11; ReceiptValidation_BRLVRUKVXJWH += 2;  \
ReceiptValidation_CFRelease_002E0117(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[480]), 121, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MEVLNCARHSGQ_002E0169(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KEHDBLZZJPGX_003B0186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
        if (ReceiptValidation_BRLVRUKVXJWH_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 390 to 55
        ReceiptValidation_KEHDBLZZJPGX += 105; ReceiptValidation_KEHDBLZZJPGX /= 9;
        // From 25 to 414
        ReceiptValidation_DGUKHKWVKMYN -= 2; ReceiptValidation_DGUKHKWVKMYN *= 18;
        // From 139 to 95
        ReceiptValidation_SPEEHRWMRPMC += 51; ReceiptValidation_SPEEHRWMRPMC /= 2;
        // From 398 to 404
        ReceiptValidation_RAZECNUXYJYA -= 264; ReceiptValidation_RAZECNUXYJYA *= 3; ReceiptValidation_RAZECNUXYJYA += 2;
        // Set to 269
        ReceiptValidation_MWFKACWMFVFQ = 269;
        // From 228 to 101
        ReceiptValidation_AJBSISVGKDWM += 176; ReceiptValidation_AJBSISVGKDWM /= 4;
        // From 361 to 113
        ReceiptValidation_MEVLNCARHSGQ += 204; ReceiptValidation_MEVLNCARHSGQ /= 5;
        // From 398 to 86
        ReceiptValidation_BRLVRUKVXJWH += 118; ReceiptValidation_BRLVRUKVXJWH /= 6;
        ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[480]), 121, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MEVLNCARHSGQ_002E0169(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KEHDBLZZJPGX_003B0186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
if (ReceiptValidation_BRLVRUKVXJWH_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_000B00F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1); \
} \
ReceiptValidation_KEHDBLZZJPGX += 105; ReceiptValidation_KEHDBLZZJPGX /= 9;  \
ReceiptValidation_DGUKHKWVKMYN -= 2; ReceiptValidation_DGUKHKWVKMYN *= 18;  \
ReceiptValidation_SPEEHRWMRPMC += 51; ReceiptValidation_SPEEHRWMRPMC /= 2;  \
ReceiptValidation_RAZECNUXYJYA -= 264; ReceiptValidation_RAZECNUXYJYA *= 3; ReceiptValidation_RAZECNUXYJYA += 2;  \
ReceiptValidation_MWFKACWMFVFQ = 269; \
ReceiptValidation_AJBSISVGKDWM += 176; ReceiptValidation_AJBSISVGKDWM /= 4;  \
ReceiptValidation_MEVLNCARHSGQ += 204; ReceiptValidation_MEVLNCARHSGQ /= 5;  \
ReceiptValidation_BRLVRUKVXJWH += 118; ReceiptValidation_BRLVRUKVXJWH /= 6;  \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[353]), 131, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_MEVLNCARHSGQ_002E0169(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KEHDBLZZJPGX_003B0186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key);
        if (ReceiptValidation_BRLVRUKVXJWH_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 390 to 55
        ReceiptValidation_KEHDBLZZJPGX += 105; ReceiptValidation_KEHDBLZZJPGX /= 9;
        // From 25 to 414
        ReceiptValidation_DGUKHKWVKMYN -= 2; ReceiptValidation_DGUKHKWVKMYN *= 18;
        // From 139 to 95
        ReceiptValidation_SPEEHRWMRPMC += 51; ReceiptValidation_SPEEHRWMRPMC /= 2;
        // From 398 to 404
        ReceiptValidation_RAZECNUXYJYA -= 264; ReceiptValidation_RAZECNUXYJYA *= 3; ReceiptValidation_RAZECNUXYJYA += 2;
        // Set to 269
        ReceiptValidation_MWFKACWMFVFQ = 269;
        // From 228 to 101
        ReceiptValidation_AJBSISVGKDWM += 176; ReceiptValidation_AJBSISVGKDWM /= 4;
        // From 361 to 113
        ReceiptValidation_MEVLNCARHSGQ += 204; ReceiptValidation_MEVLNCARHSGQ /= 5;
        // From 398 to 86
        ReceiptValidation_BRLVRUKVXJWH += 118; ReceiptValidation_BRLVRUKVXJWH /= 6;
        ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction007CF((ReceiptValidation_Strings[353]), 131, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_MEVLNCARHSGQ_002E0169(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_KEHDBLZZJPGX_003B0186((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_key); \
if (ReceiptValidation_BRLVRUKVXJWH_002E018E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_KEHDBLZZJPGX += 105; ReceiptValidation_KEHDBLZZJPGX /= 9;  \
ReceiptValidation_DGUKHKWVKMYN -= 2; ReceiptValidation_DGUKHKWVKMYN *= 18;  \
ReceiptValidation_SPEEHRWMRPMC += 51; ReceiptValidation_SPEEHRWMRPMC /= 2;  \
ReceiptValidation_RAZECNUXYJYA -= 264; ReceiptValidation_RAZECNUXYJYA *= 3; ReceiptValidation_RAZECNUXYJYA += 2;  \
ReceiptValidation_MWFKACWMFVFQ = 269; \
ReceiptValidation_AJBSISVGKDWM += 176; ReceiptValidation_AJBSISVGKDWM /= 4;  \
ReceiptValidation_MEVLNCARHSGQ += 204; ReceiptValidation_MEVLNCARHSGQ /= 5;  \
ReceiptValidation_BRLVRUKVXJWH += 118; ReceiptValidation_BRLVRUKVXJWH /= 6;  \
ReceiptValidation_CFRelease_003B0117(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptHash083(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
        CFMutableDataRef ReceiptValidation_data4;
        unsigned char ReceiptValidation_digest[483];
        volatile int ReceiptValidation_counter = 14; ReceiptValidation_counter -= 8; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
        CFNumberRef ReceiptValidation_key;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
        ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key);
        ReceiptValidation_data4 = ReceiptValidation_SPEEHRWMRPMC_002E005F(NULL, 0);
        ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_MWFKACWMFVFQ_010F010D((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data1), ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data1));
        ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data2), ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data2));
        ReceiptValidation_CC_SHA1_00240164(ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data4), ReceiptValidation_digest);
        SHA_CTX ReceiptValidation_hashctx2;
        ReceiptValidation_SHA1_Init_00B600F9(&ReceiptValidation_hashctx2);
        ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data1), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data1));
        ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data2), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data2));
        ReceiptValidation_SHA1_Final_009A0098(ReceiptValidation_digest, &ReceiptValidation_hashctx2);
        CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_010F00C3(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
        if (!ReceiptValidation_MEVLNCARHSGQ_002E0071(ReceiptValidation_data3, ReceiptValidation_data5)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data4);
            ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5);
            goto ReceiptValidation_CheckReceiptHash083_ReceiptValidation_bail;
        }
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5);
        // Global variables computation
        // Set to 361
        ReceiptValidation_SPEEHRWMRPMC = 361;
        // From 404 to 190
        ReceiptValidation_RAZECNUXYJYA += 356; ReceiptValidation_RAZECNUXYJYA /= 4;
        // Set to 198
        ReceiptValidation_AJBSISVGKDWM = 198;
        // From 113 to 61
        ReceiptValidation_MEVLNCARHSGQ += 70; ReceiptValidation_MEVLNCARHSGQ /= 3;
        // From 86 to 101
        ReceiptValidation_BRLVRUKVXJWH -= 53; ReceiptValidation_BRLVRUKVXJWH *= 3; ReceiptValidation_BRLVRUKVXJWH += 2;
    ReceiptValidation_CheckReceiptHash083_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash083(ReceiptValidation_ctx) { \
CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
CFMutableDataRef ReceiptValidation_data4; \
unsigned char ReceiptValidation_digest[483]; \
volatile int ReceiptValidation_counter = 14; ReceiptValidation_counter -= 8; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;  \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
CFNumberRef ReceiptValidation_key; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_002E0110(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_AJBSISVGKDWM_003B0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key); \
ReceiptValidation_data4 = ReceiptValidation_SPEEHRWMRPMC_002E005F(NULL, 0); \
ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_MWFKACWMFVFQ_010F010D((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data1), ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data1)); \
ReceiptValidation_KEHDBLZZJPGX_010F0037(ReceiptValidation_data4, ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data2), ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data2)); \
ReceiptValidation_CC_SHA1_00240164(ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data4), ReceiptValidation_digest); \
SHA_CTX ReceiptValidation_hashctx2; \
ReceiptValidation_SHA1_Init_00B600F9(&ReceiptValidation_hashctx2); \
ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data1), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data1)); \
ReceiptValidation_SHA1_Update_00B601BB(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_CFDataGetBytePtr_010F00AB(ReceiptValidation_data2), (size_t) ReceiptValidation_MWFKACWMFVFQ_010F010D(ReceiptValidation_data2)); \
ReceiptValidation_SHA1_Final_009A0098(ReceiptValidation_digest, &ReceiptValidation_hashctx2); \
CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_010F00C3(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
if (!ReceiptValidation_MEVLNCARHSGQ_002E0071(ReceiptValidation_data3, ReceiptValidation_data5)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data1); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data2); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data4); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5); \
goto ReceiptValidation_CheckReceiptHash083_ReceiptValidation_bail; \
} \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data5); \
ReceiptValidation_SPEEHRWMRPMC = 361; \
ReceiptValidation_RAZECNUXYJYA += 356; ReceiptValidation_RAZECNUXYJYA /= 4;  \
ReceiptValidation_AJBSISVGKDWM = 198; \
ReceiptValidation_MEVLNCARHSGQ += 70; ReceiptValidation_MEVLNCARHSGQ /= 3;  \
ReceiptValidation_BRLVRUKVXJWH -= 53; ReceiptValidation_BRLVRUKVXJWH *= 3; ReceiptValidation_BRLVRUKVXJWH += 2;  \
ReceiptValidation_CheckReceiptHash083_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef ReceiptValidation_date1 = ReceiptValidation_MEVLNCARHSGQ_002E003D(NULL, ReceiptValidation_RAZECNUXYJYA_003B00BE());
        CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_003B0169(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_BRLVRUKVXJWH_010F0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
        if (ReceiptValidation_date2 && ReceiptValidation_AJBSISVGKDWM_003B00C6(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing...");
            ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1);
            // Dead code
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key);
            ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1);
        }
        // Global variables computation
        // From 55 to 361
        ReceiptValidation_KEHDBLZZJPGX -= 10; ReceiptValidation_KEHDBLZZJPGX *= 8; ReceiptValidation_KEHDBLZZJPGX += 1;
        // From 414 to 25
        ReceiptValidation_DGUKHKWVKMYN += 36; ReceiptValidation_DGUKHKWVKMYN /= 18;
        // From 361 to 398
        ReceiptValidation_SPEEHRWMRPMC -= 229; ReceiptValidation_SPEEHRWMRPMC *= 3; ReceiptValidation_SPEEHRWMRPMC += 2;
        // From 269 to 135
        ReceiptValidation_MWFKACWMFVFQ += 136; ReceiptValidation_MWFKACWMFVFQ /= 3;
        // From 61 to 186
        ReceiptValidation_MEVLNCARHSGQ -= 24; ReceiptValidation_MEVLNCARHSGQ *= 5; ReceiptValidation_MEVLNCARHSGQ += 1;
        ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1);
    }
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef ReceiptValidation_date1 = ReceiptValidation_MEVLNCARHSGQ_002E003D(NULL, ReceiptValidation_RAZECNUXYJYA_003B00BE()); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_SPEEHRWMRPMC_003B0169(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_BRLVRUKVXJWH_010F0065((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
if (ReceiptValidation_date2 && ReceiptValidation_AJBSISVGKDWM_003B00C6(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Doing nothing..."); \
ReceiptValidation_longjmp_002400F3(ReceiptValidation_JumpBuf, 1); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_key); \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1); \
} \
ReceiptValidation_KEHDBLZZJPGX -= 10; ReceiptValidation_KEHDBLZZJPGX *= 8; ReceiptValidation_KEHDBLZZJPGX += 1;  \
ReceiptValidation_DGUKHKWVKMYN += 36; ReceiptValidation_DGUKHKWVKMYN /= 18;  \
ReceiptValidation_SPEEHRWMRPMC -= 229; ReceiptValidation_SPEEHRWMRPMC *= 3; ReceiptValidation_SPEEHRWMRPMC += 2;  \
ReceiptValidation_MWFKACWMFVFQ += 136; ReceiptValidation_MWFKACWMFVFQ /= 3;  \
ReceiptValidation_MEVLNCARHSGQ -= 24; ReceiptValidation_MEVLNCARHSGQ *= 5; ReceiptValidation_MEVLNCARHSGQ += 1;  \
ReceiptValidation_CFRelease_010F0157(ReceiptValidation_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void ReceiptValidation_InAppChecker0A9(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFIndex ReceiptValidation_index1, ReceiptValidation_index2;
        CFNumberRef ReceiptValidation_key1, ReceiptValidation_key2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking InApp purchases");
        ReceiptValidation_key1 = ReceiptValidation_KEHDBLZZJPGX_010F0169(NULL, kCFNumberIntType, &ReceiptValidation_value);
        // Extract InApp Purchase
        CFArrayRef ReceiptValidation_idents = (CFArrayRef) ReceiptValidation_ctx->inapp_identifiers;
        CFArrayRef ReceiptValidation_purchases = (CFArrayRef) ReceiptValidation_DGUKHKWVKMYN_010F0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key1);
        if (ReceiptValidation_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_idents); ReceiptValidation_index1++) {
                CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_idents, ReceiptValidation_index1);
                Boolean ReceiptValidation_found = false;
                // Iterate over the purchases
                for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_purchases); ReceiptValidation_index2++) {
                    CFDictionaryRef ReceiptValidation_purchase = (CFDictionaryRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_purchases, ReceiptValidation_index2);
                    ReceiptValidation_value = ReceiptValidation_StoreInAppAttributeTypeProductIdentifer;
                    ReceiptValidation_key2 = ReceiptValidation_KEHDBLZZJPGX_010F0169(NULL, kCFNumberIntType, &ReceiptValidation_value);
                    CFStringRef ReceiptValidation_product_identifier = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_010F0019(ReceiptValidation_purchase, ReceiptValidation_key2);
                    ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (ReceiptValidation_SPEEHRWMRPMC_003B018E(ReceiptValidation_ident, ReceiptValidation_product_identifier, 0) == kCFCompareEqualTo) {
                        ReceiptValidation_found |= true;
                        (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), true, __SAFE_CAST(NSDictionary *, ReceiptValidation_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!ReceiptValidation_found) {
                    (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the ReceiptValidation_idents and call the block back
            for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_idents); ReceiptValidation_index1++) {
                CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_idents, ReceiptValidation_index1);
                (__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL);
            }
        }
        ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key1);
    }
#else
#define ReceiptValidation_InAppChecker0A9(ReceiptValidation_ctx) { \
CFIndex ReceiptValidation_index1, ReceiptValidation_index2; \
CFNumberRef ReceiptValidation_key1, ReceiptValidation_key2; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking InApp purchases"); \
ReceiptValidation_key1 = ReceiptValidation_KEHDBLZZJPGX_010F0169(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFArrayRef ReceiptValidation_idents = (CFArrayRef) ReceiptValidation_ctx->inapp_identifiers; \
CFArrayRef ReceiptValidation_purchases = (CFArrayRef) ReceiptValidation_DGUKHKWVKMYN_010F0019((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key1); \
if (ReceiptValidation_purchases) { \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_idents); ReceiptValidation_index1++) { \
CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_idents, ReceiptValidation_index1); \
Boolean ReceiptValidation_found = false; \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_purchases); ReceiptValidation_index2++) { \
CFDictionaryRef ReceiptValidation_purchase = (CFDictionaryRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_purchases, ReceiptValidation_index2); \
ReceiptValidation_value = ReceiptValidation_StoreInAppAttributeTypeProductIdentifer; \
ReceiptValidation_key2 = ReceiptValidation_KEHDBLZZJPGX_010F0169(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_product_identifier = (CFStringRef) ReceiptValidation_DGUKHKWVKMYN_010F0019(ReceiptValidation_purchase, ReceiptValidation_key2); \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key2); \
if (ReceiptValidation_SPEEHRWMRPMC_003B018E(ReceiptValidation_ident, ReceiptValidation_product_identifier, 0) == kCFCompareEqualTo) { \
ReceiptValidation_found |= true; \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), true, __SAFE_CAST(NSDictionary *, ReceiptValidation_purchase)); \
} \
} \
if (!ReceiptValidation_found) { \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL); \
} \
} \
} else { \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_MWFKACWMFVFQ_010F0087(ReceiptValidation_idents); ReceiptValidation_index1++) { \
CFStringRef ReceiptValidation_ident = (CFStringRef) ReceiptValidation_MEVLNCARHSGQ_010F00BA(ReceiptValidation_idents, ReceiptValidation_index1); \
(__SAFE_CAST(ReceiptValidation_InAppValidateBlock, ReceiptValidation_ctx->inapp_block))(__SAFE_CAST(NSString *, ReceiptValidation_ident), false, NULL); \
} \
} \
ReceiptValidation_CFRelease_003B0157(ReceiptValidation_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void ReceiptValidation_CleanUp0AC(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
        CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data };
        if (ReceiptValidation_references[0]) {
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[0]);
            ReceiptValidation_references[0] = NULL;
        }
        if (ReceiptValidation_references[1]) {
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[1]);
            ReceiptValidation_references[1] = NULL;
        }
        if (ReceiptValidation_references[2]) {
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[2]);
            ReceiptValidation_references[2] = NULL;
        }
        if (ReceiptValidation_references[3]) {
            ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[3]);
            ReceiptValidation_references[3] = NULL;
        }
    }
#else
#define ReceiptValidation_CleanUp0AC(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
CFTypeRef ReceiptValidation_references[4] = { ReceiptValidation_ctx->receipt_data, ReceiptValidation_ctx->guid_data, ReceiptValidation_ctx->receipt_dict, ReceiptValidation_ctx->ca_data }; \
if (ReceiptValidation_references[0]) { \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[0]); \
ReceiptValidation_references[0] = NULL; \
} \
if (ReceiptValidation_references[1]) { \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[1]); \
ReceiptValidation_references[1] = NULL; \
} \
if (ReceiptValidation_references[2]) { \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[2]); \
ReceiptValidation_references[2] = NULL; \
} \
if (ReceiptValidation_references[3]) { \
ReceiptValidation_CFRelease_003B0185(ReceiptValidation_references[3]); \
ReceiptValidation_references[3] = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void ReceiptValidation_CheckInAppPurchases(NSArray *_inapp_identifiers, ReceiptValidation_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
        // Create contexts
        ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        ReceiptValidation_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        ReceiptValidation_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (ReceiptValidation_InAppValidateBlock) _inapp_block);
        // Initial value
        int ReceiptValidation_index = 1813;
        // While loop
        while(ReceiptValidation_index != 300) {
            if (!ReceiptValidation_setjmp_000B0124(ReceiptValidation_JumpBuf)) {
                switch(ReceiptValidation_index) {
                    case 588:
                        ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 312; ReceiptValidation_index /= 3;
                        break;
                    case 2147:
                        ReceiptValidation_CheckReceiptSignature073((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 1420; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;
                        break;
                    case 1813:
                        ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 889; ReceiptValidation_index *= 4;
                        break;
                    case 3613:
                        ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 2828; ReceiptValidation_index /= 3;
                        break;
                    case 4040:
                        ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 3186; ReceiptValidation_index /= 2; 
                        break;
                    case 3283:
                        ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 1937; ReceiptValidation_index *= 3; ReceiptValidation_index += 2; 
                        break;
                    case 3098:
                        ReceiptValidation_CheckReceiptHash083((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1447; ReceiptValidation_index /= 5; 
                        break;
                    case 3696:
                        ReceiptValidation_LoadReceipt041((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 2872; ReceiptValidation_index /= 2; 
                        break;
                    case 909:
                        ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 582; ReceiptValidation_index *= 3; 
                        break;
                    case 3284:
                        ReceiptValidation_GetGUID04E((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 3282; ReceiptValidation_index /= 2; 
                        break;
                    case 981:
                        ReceiptValidation_InAppChecker0A9((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 783; ReceiptValidation_index /= 3; 
                        break;
                    case 2182:
                        ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1));
                        ReceiptValidation_index += 1286; ReceiptValidation_index /= 4; 
                        break;
                    case 867:
                        ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1));
                        ReceiptValidation_index -= 248; ReceiptValidation_index *= 5; ReceiptValidation_index += 3; 
                        break;
                }
            } else {
                break;
            }
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define ReceiptValidation_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
ReceiptValidation_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
ReceiptValidation_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (ReceiptValidation_InAppValidateBlock) _inapp_block); \
int ReceiptValidation_index = 1813; \
while(ReceiptValidation_index != 300) { \
if (!ReceiptValidation_setjmp_000B0124(ReceiptValidation_JumpBuf)) { \
switch(ReceiptValidation_index) { \
case 588: \
ReceiptValidation_CleanUp0AC((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 312; ReceiptValidation_index /= 3;  \
break; \
case 2147: \
ReceiptValidation_CheckReceiptSignature073((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 1420; ReceiptValidation_index *= 3; ReceiptValidation_index += 1;  \
break; \
case 1813: \
ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 889; ReceiptValidation_index *= 4;  \
break; \
case 3613: \
ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2828; ReceiptValidation_index /= 3;  \
break; \
case 4040: \
ReceiptValidation_CheckBundleVersion060((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 3186; ReceiptValidation_index /= 2;  \
break; \
case 3283: \
ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 1937; ReceiptValidation_index *= 3; ReceiptValidation_index += 2;  \
break; \
case 3098: \
ReceiptValidation_CheckReceiptHash083((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1447; ReceiptValidation_index /= 5;  \
break; \
case 3696: \
ReceiptValidation_LoadReceipt041((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 2872; ReceiptValidation_index /= 2;  \
break; \
case 909: \
ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 582; ReceiptValidation_index *= 3;  \
break; \
case 3284: \
ReceiptValidation_GetGUID04E((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 3282; ReceiptValidation_index /= 2;  \
break; \
case 981: \
ReceiptValidation_InAppChecker0A9((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 783; ReceiptValidation_index /= 3;  \
break; \
case 2182: \
ReceiptValidation_CheckReceiptIdentifier07E((&ReceiptValidation_ctx1)); \
ReceiptValidation_index += 1286; ReceiptValidation_index /= 4;  \
break; \
case 867: \
ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1)); \
ReceiptValidation_index -= 248; ReceiptValidation_index *= 5; ReceiptValidation_index += 3;  \
break; \
} \
} else { \
break; \
} \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

